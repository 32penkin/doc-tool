{
  "classes": [
    {
      "kind": "interface",
      "platform": null,
      "examples": [],
      "props": [],
      "methods": [],
      "name": "NgaEmailPassModuleConfig",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "string",
          "required": null,
          "name": "icon",
          "shortDescription": "Icon class to display"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "disabled",
          "shortDescription": "Disables the item (changes item opacity and mouse cursor)"
        }
      ],
      "methods": [],
      "name": "NgaActionComponent",
      "shortDescription": "Action item, display a link with an icon, or any other content provided instead.",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "inverse",
          "shortDescription": "Makes colors inverse based on current theme"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "size",
          "shortDescription": "Size of the component, small|medium|large"
        }
      ],
      "methods": [],
      "name": "NgaActionsComponent",
      "shortDescription": "Shows a a horizontal list of actions, available in multiple sizes\nAligns items vertically.",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [],
      "name": "NgaCardBodyComponent",
      "shortDescription": "Component intended to be used within  the `<nga-card>` component.\nIt adds styles for a preset body section.",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [],
      "methods": [],
      "name": "NgaCardComponent",
      "description": "While this component can be used alone, it also provides a number\nof child components for common card sections, including:\n- nga-card-header\n- nga-card-body\n- nga-card-footer\n",
      "shortDescription": "A basic content container component",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [],
      "name": "NgaCardFooterComponent",
      "shortDescription": "Component intended to be used within  the `<nga-card>` component.\nIt adds styles for a preset footer section.",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [],
      "name": "NgaCardHeaderComponent",
      "shortDescription": "Component intended to be used within  the `<nga-card>` component.\nIt adds styles for a preset header section.",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [],
      "methods": [],
      "name": "NgaLayoutColumnComponent",
      "shortDescription": "Component intended to be used within  the `<nga-layout>` component.\nIt adds styles for a preset column section.",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [],
      "methods": [
        {
          "examples": [],
          "params": [
            {
              "name": "themeService",
              "type": "NgaThemeService",
              "required": null,
              "shortDescription": "",
              "description": ""
            },
            {
              "name": "spinnerService",
              "type": "NgaSpinnerService",
              "required": null,
              "shortDescription": "",
              "description": ""
            },
            {
              "name": "componentFactoryResolver",
              "type": "ComponentFactoryResolver",
              "required": null,
              "shortDescription": "",
              "description": ""
            },
            {
              "name": "elementRef",
              "type": "ElementRef",
              "required": null,
              "shortDescription": "",
              "description": ""
            },
            {
              "name": "renderer",
              "type": "Renderer2",
              "required": null,
              "shortDescription": "",
              "description": ""
            }
          ],
          "platform": null,
          "name": "constructor",
          "type": [
            "NgaLayoutComponent"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "ngAfterViewInit",
          "type": [
            "void"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "ngOnDestroy",
          "type": [
            "void"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        }
      ],
      "name": "NgaLayoutComponent",
      "description": "While this component can be used alone, it also provides a number\nof child components for common layout sections, including:\n- nga-sidebar\n- nga-layout-column\n- nga-layout-content\n- nga-layout-header\n- nga-layout-footer\n",
      "shortDescription": "A basic content container component",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [],
      "methods": [],
      "name": "NgaLayoutFooterComponent",
      "shortDescription": "Component intended to be used within  the `<nga-layout>` component.\nIt adds styles for a preset footer section.",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [],
      "methods": [],
      "name": "NgaLayoutHeaderComponent",
      "shortDescription": "Component intended to be used within  the `<nga-layout>` component.\nIt adds styles for a preset header section.",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [],
      "methods": [
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "closeSearch",
          "type": [
            "void"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "onBlur",
          "type": [
            "void"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        },
        {
          "examples": [],
          "params": [
            {
              "name": "term",
              "type": "any",
              "required": null,
              "shortDescription": "",
              "description": ""
            }
          ],
          "platform": null,
          "name": "submitSearch",
          "type": [
            "void"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        }
      ],
      "name": "NgaSearchFieldComponent",
      "shortDescription": "search-field-component is used under the hood by nga-search component\ncan't be used itself",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [
        {
          "shortDescription": "Min sidebar example",
          "description": "",
          "code": "\n<nga-sidebar><nga-sidebar-content>Sidebar content</nga-sidebar-content></nga-sidebar>\n"
        },
        {
          "shortDescription": "Fixed sidebar",
          "description": "Example of fixed sidebar located on the left side, initially collapsed.",
          "code": "\n<nga-sidebar left fixed state=\"collapsed\">\n <nga-sidebar-header>Header</nga-sidebar-header>\n <nga-sidebar-content>\n   Menu or another component here\n </nga-sidebar-content>\n <nga-sidebar-footer>\n   Footer components here\n </nga-sidebar-footer>\n</nga-sidebar>\n"
        }
      ],
      "props": [
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "string",
          "required": null,
          "name": "tag",
          "shortDescription": "Tags a sidebar with some ID, can be later used in sidebar service\nto determine which sidebar triggered the action, if multiple sidebars exist on the page."
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "fixed",
          "shortDescription": "Makes sidebar fixed (shown above the layout content)"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "left",
          "shortDescription": "Places sidebar on the right side"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "right",
          "shortDescription": "Places sidebar on the left side"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "state",
          "shortDescription": "Initial sidebar state, `expanded`|`collapsed`|`compacted`"
        }
      ],
      "methods": [
        {
          "examples": [],
          "params": [
            {
              "name": "sidebarService",
              "type": "NgaSidebarService",
              "required": null,
              "shortDescription": "",
              "description": ""
            }
          ],
          "platform": null,
          "name": "constructor",
          "type": [
            "NgaSidebarComponent"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "collapse",
          "type": [],
          "isStatic": false,
          "shortDescription": "Collapses the sidebar"
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "compact",
          "type": [],
          "isStatic": false,
          "shortDescription": "Compacts the sidebar (minimizes)"
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "expand",
          "type": [],
          "isStatic": false,
          "shortDescription": "Expands the sidebar"
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "ngOnDestroy",
          "type": [
            "void"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "ngOnInit",
          "type": [
            "void"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "returnSomeValue",
          "type": [
            "number"
          ],
          "isStatic": false,
          "shortDescription": "Returns some value\n// TODO: remove this"
        },
        {
          "examples": [],
          "params": [
            {
              "name": "compact",
              "type": "boolean",
              "required": null,
              "description": "If true, then sidebar state will be changed between expanded & compacted,\notherwise - between expanded & collapsed. False by default.\n"
            }
          ],
          "platform": null,
          "name": "toggle",
          "type": [],
          "isStatic": false,
          "shortDescription": "Toggles sidebar state (expanded|collapsed|compacted)"
        },
        {
          "examples": [],
          "params": [
            {
              "name": "test",
              "type": "string",
              "required": null
            },
            {
              "name": "anotherOne",
              "type": "any",
              "required": null
            }
          ],
          "platform": null,
          "name": "someTestMethod",
          "type": [
            ""
          ],
          "isStatic": true,
          "shortDescription": "Some Static method\n// TODO: remove this"
        }
      ],
      "name": "NgaSidebarComponent",
      "description": "Sidebar can be place on the left or right side of the layout, can be fixed (shown above the content)\nor can push the layout when opened.\n",
      "shortDescription": "Main sidebar component.",
      "styles": [
        {
          "shortDescription": "Available component styles",
          "styles": [
            {
              "name": "$nga-sidebar-foreground",
              "description": "$nga-foreground-inverse !default;"
            },
            {
              "name": "$nga-sidebar-background",
              "description": "$nga-background-inverse !default;"
            },
            {
              "name": "$nga-sidebar-height",
              "description": "100vh !default;"
            },
            {
              "name": "$nga-sidebar-width",
              "description": "12rem !default;"
            },
            {
              "name": "$nga-sidebar-width-compact",
              "description": "4rem !default;"
            },
            {
              "name": "$nga-sidebar-padding",
              "description": "$nga-padding !default;"
            },
            {
              "name": "$nga-sidebar-header-height",
              "description": "3.5rem !default;"
            },
            {
              "name": "$nga-sidebar-footer-height",
              "description": "3.5rem !default;"
            }
          ]
        }
      ]
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [],
      "name": "NgaSidebarContentComponent",
      "description": "Placeholder which contains a sidebar main content.\n",
      "shortDescription": "Sidebar content container.",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [],
      "name": "NgaSidebarFooterComponent",
      "description": "Placeholder which contains a sidebar footer content,\nplaced at the very bottom of the sidebar outside of the scroll area.\n",
      "shortDescription": "Sidebar footer container.",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [],
      "name": "NgaSidebarHeaderComponent",
      "description": "Placeholder which contains a sidebar header content,\nplaced at the very top of the sidebar outside of the scroll area.\n",
      "shortDescription": "Sidebar header container.",
      "styles": []
    },
    {
      "kind": "service",
      "platform": null,
      "examples": [],
      "props": [],
      "methods": [
        {
          "examples": [],
          "params": [
            {
              "name": "tag",
              "type": "string",
              "required": null,
              "description": "If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\nto specify which sidebar you want to control\n"
            }
          ],
          "platform": null,
          "name": "collapse",
          "type": [],
          "isStatic": false,
          "shortDescription": "Collapses a sidebar"
        },
        {
          "examples": [],
          "params": [
            {
              "name": "tag",
              "type": "string",
              "required": null,
              "description": "tag If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\nto specify which sidebar you want to control\n"
            }
          ],
          "platform": null,
          "name": "expand",
          "type": [],
          "isStatic": false,
          "shortDescription": "Expands a sidebar"
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "onCollapse",
          "type": [
            "Observable<{ tag: string }>"
          ],
          "isStatic": false,
          "shortDescription": "Subscribe to collapse evens"
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "onExpand",
          "type": [
            "Observable<{ tag: string }>"
          ],
          "isStatic": false,
          "shortDescription": "Subscribe to expand events"
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "onToggle",
          "type": [
            "Observable<{ compact: boolean, tag: string }>"
          ],
          "isStatic": false,
          "shortDescription": "Subscribe to toggle events"
        },
        {
          "examples": [],
          "params": [
            {
              "name": "compact",
              "type": "boolean",
              "required": null,
              "shortDescription": "",
              "description": ""
            },
            {
              "name": "tag",
              "type": "string",
              "required": null,
              "description": "tag If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\nto specify which sidebar you want to control\n"
            }
          ],
          "platform": null,
          "name": "toggle",
          "type": [],
          "isStatic": false,
          "shortDescription": "Toggle a sidebar"
        }
      ],
      "name": "NgaSidebarService",
      "description": "Root module service to control the sidebar from any part of the app.\n",
      "shortDescription": "Sidebar service.",
      "styles": []
    },
    {
      "kind": "component",
      "platform": null,
      "examples": [],
      "props": [
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "string",
          "required": null,
          "name": "color",
          "shortDescription": "Color of the area shown when no picture specified"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "required": null,
          "name": "menu",
          "shortDescription": "List of menu items for a user context menu (shown when clicked)"
        },
        {
          "kind": "output",
          "platform": null,
          "isStatic": false,
          "type": "EventEmitter",
          "required": null,
          "name": "menuClick",
          "shortDescription": "",
          "description": ""
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "string",
          "required": null,
          "name": "name",
          "shortDescription": "Specifies a name to be shown on the right of a user picture"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "string",
          "required": null,
          "name": "picture",
          "shortDescription": "Absolute path to a user picture\nUser name initials (JD for John Doe) will be shown if no picture specified"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "string",
          "required": null,
          "name": "title",
          "shortDescription": "Specifies a title (written in a smaller font) to be shown under the **name**"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "inverse",
          "shortDescription": "Makes colors inverse based on current theme"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "onlyPicture",
          "shortDescription": "Whether to show only a picture or also show the name and title"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "showInitials",
          "shortDescription": "Whether to show a user initials (if no picture specified) or not"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "showName",
          "shortDescription": "Whether to show a user name or not"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "showTitle",
          "shortDescription": "Whether to show a user title or not"
        },
        {
          "kind": "input",
          "platform": null,
          "isStatic": false,
          "type": "",
          "required": null,
          "name": "size",
          "shortDescription": "Size of the component, small|medium|large"
        }
      ],
      "methods": [
        {
          "examples": [],
          "params": [
            {
              "name": "el",
              "type": "ElementRef",
              "required": null,
              "shortDescription": "",
              "description": ""
            }
          ],
          "platform": null,
          "name": "constructor",
          "type": [
            "NgaUserComponent"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "getInitials",
          "type": [
            "string"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "hasMenu",
          "type": [
            "boolean"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        },
        {
          "examples": [],
          "params": [
            {
              "name": "event",
              "type": "any",
              "required": null,
              "shortDescription": "",
              "description": ""
            }
          ],
          "platform": null,
          "name": "hideMenu",
          "type": [
            "void"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        },
        {
          "examples": [],
          "params": [
            {
              "name": "event",
              "type": "any",
              "required": null,
              "shortDescription": "",
              "description": ""
            },
            {
              "name": "item",
              "type": "NgaUserMenuItem",
              "required": null,
              "shortDescription": "",
              "description": ""
            }
          ],
          "platform": null,
          "name": "itemClick",
          "type": [
            "boolean"
          ],
          "isStatic": false,
          "shortDescription": "",
          "description": ""
        },
        {
          "examples": [],
          "params": [],
          "platform": null,
          "name": "toggleMenu",
          "type": [],
          "isStatic": false,
          "shortDescription": "Toggles a context menu"
        }
      ],
      "name": "NgaUserComponent",
      "description": "Can be used as a user profile link or can bring a user context menu.\n",
      "shortDescription": "Represents a component showing a user avatar (picture) with a user name on the right.",
      "styles": []
    }
  ]
}