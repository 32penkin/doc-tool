import {DocJsParser} from './doc-js.parser/doc-js.parser';
import {TypedocParser} from './typedoc.parser/typedoc.parser';
import {
  Metadata,
  Generator,
  Framework
} from './model/metadata/metadata';
import * as fs from 'fs';
import * as Path from 'path';
// const program = require('commander');
//
// program
//   .version('0.0.1')
//   .option('-g, --generator <value>', 'Generator:')
//   .option('-f, --framework <value>', 'Framework:')
//   .option('-i, --input <value>', 'Path to input file:')
//   .option('-o, --output <value>', 'Path to output file: ');
//
// program.on('--help', function () {
//   console.log('You have to specify:');
//   console.log('- generator (can be 2 types: typedoc, docjs)');
//   console.log('- framework (can be 2 types: angular, react)');
//   console.log('- pathes to input and output file (output file will be created)');
//   console.log('For example: ');
//   console.log('prsr -g typedoc -f angular -i input.json -o output.json');
// });
//
// program.parse(process.argv);
//
// if (program['generator'] && program['framework'] && program['input'] && program['output']) {
//   create(program['generator'], program['framework'], Path.resolve(program['input']), Path.resolve(program['output']));
// } else {
//   console.log('You entered the wrong data! Use --help for getting information');
// }
//
//
// function create(generator: Generator, framework: Framework, inputPath: string, outputPath: string) {
//   if (generator === 'docjs' && framework === 'react') {
//     selectedParser('docjs', inputPath, outputPath);
//   } else if (generator === 'typedoc' && framework === 'angular') {
//     selectedParser('typedoc', inputPath, outputPath);
//   } else {
//     console.log('You entered the wrong data! Use --help for getting information');
//   }
// }
//
// function selectedParser(parser: string, inputPath: string, outputPath: string) {
//   let newdoc: any = {};
//
//   fs.readFile(inputPath, (err: any, data: any) => {
//     if (parser === 'docjs') {
//       newdoc = new DocJsParser().parse(JSON.parse(data), new Metadata('javascript', 'docjs', 'react'));
//     } else if (parser === 'typedoc') {
//       newdoc = new TypedocParser().parse(JSON.parse(data), new Metadata('typescript', 'typedoc', 'angular'));
//     }
//     const outputObj: string = JSON.stringify(newdoc, null, 2);
//     fs.writeFile(outputPath, outputObj);
//   });
// }


const typeDocParser = new TypedocParser();

const example = {
  "id": 0,
  "name": "@nebular/auth",
  "kind": 0,
  "flags": {},
  "children": [
    {
      "id": 580,
      "name": "\"auth/auth.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/auth.module.ts",
      "children": [
        {
          "id": 581,
          "name": "NbAuthModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  imports: [\r\n    CommonModule,\r\n    NbLayoutModule,\r\n    NbCardModule,\r\n    NbCheckboxModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  declarations: [\r\n    NbAuthComponent,\r\n    NbAuthBlockComponent,\r\n    NbLoginComponent,\r\n    NbRegisterComponent,\r\n    NbRequestPasswordComponent,\r\n    NbResetPasswordComponent,\r\n    NbLogoutComponent,\r\n  ],\r\n  exports: [\r\n    NbAuthComponent,\r\n    NbAuthBlockComponent,\r\n    NbLoginComponent,\r\n    NbRegisterComponent,\r\n    NbRequestPasswordComponent,\r\n    NbResetPasswordComponent,\r\n    NbLogoutComponent,\r\n  ],\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 582,
              "name": "forRoot",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 583,
                  "name": "forRoot",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 584,
                      "name": "nbAuthOptions",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "NbAuthOptions",
                        "id": 63
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ModuleWithProviders"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/auth.module.ts",
                  "line": 83,
                  "character": 16
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                582
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/auth.module.ts",
              "line": 82,
              "character": 25
            }
          ]
        },
        {
          "id": 585,
          "name": "nbAuthServiceFactory",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 586,
              "name": "nbAuthServiceFactory",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 587,
                  "name": "config",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 588,
                  "name": "tokenService",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "NbTokenService",
                    "id": 135
                  }
                },
                {
                  "id": 589,
                  "name": "injector",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Injector"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbAuthService",
                "id": 205
              }
            }
          ],
          "sources": [
            {
              "fileName": "auth/auth.module.ts",
              "line": 35,
              "character": 36
            }
          ]
        },
        {
          "id": 590,
          "name": "nbOptionsFactory",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 591,
              "name": "nbOptionsFactory",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 592,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "sources": [
            {
              "fileName": "auth/auth.module.ts",
              "line": 49,
              "character": 32
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            581
          ]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            585,
            590
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/auth.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 62,
      "name": "\"auth/auth.options\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/auth.options.ts",
      "children": [
        {
          "id": 63,
          "name": "NbAuthOptions",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 64,
              "name": "forms",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/auth.options.ts",
                  "line": 4,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 65,
              "name": "providers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/auth.options.ts",
                  "line": 5,
                  "character": 11
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                64,
                65
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/auth.options.ts",
              "line": 3,
              "character": 30
            }
          ]
        },
        {
          "id": 66,
          "name": "NbAuthProviders",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "indexSignature": [
            {
              "id": 67,
              "name": "__index",
              "kind": 8192,
              "kindString": "Index signature",
              "flags": {},
              "parameters": [
                {
                  "id": 68,
                  "name": "key",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "sources": [
            {
              "fileName": "auth/auth.options.ts",
              "line": 8,
              "character": 32
            }
          ]
        },
        {
          "id": 115,
          "name": "NB_AUTH_INTERCEPTOR_HEADER",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "auth/auth.options.ts",
              "line": 75,
              "character": 39
            }
          ],
          "type": {
            "type": "reference",
            "name": "InjectionToken",
            "typeArguments": [
              {
                "type": "reference",
                "name": "NbAuthProviders",
                "id": 66
              }
            ]
          },
          "defaultValue": " new InjectionToken<NbAuthProviders>('Nebular Simple Interceptor Header')"
        },
        {
          "id": 111,
          "name": "NB_AUTH_OPTIONS_TOKEN",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "auth/auth.options.ts",
              "line": 71,
              "character": 34
            }
          ],
          "type": {
            "type": "reference",
            "name": "InjectionToken",
            "typeArguments": [
              {
                "type": "reference",
                "name": "NbAuthOptions",
                "id": 63
              }
            ]
          },
          "defaultValue": " new InjectionToken<NbAuthOptions>('Nebular Auth Options')"
        },
        {
          "id": 113,
          "name": "NB_AUTH_PROVIDERS_TOKEN",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "auth/auth.options.ts",
              "line": 73,
              "character": 36
            }
          ],
          "type": {
            "type": "reference",
            "name": "InjectionToken",
            "typeArguments": [
              {
                "type": "reference",
                "name": "NbAuthProviders",
                "id": 66
              }
            ]
          },
          "defaultValue": " new InjectionToken<NbAuthProviders>('Nebular Auth Providers')"
        },
        {
          "id": 114,
          "name": "NB_AUTH_TOKEN_WRAPPER_TOKEN",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "auth/auth.options.ts",
              "line": 74,
              "character": 40
            }
          ],
          "type": {
            "type": "reference",
            "name": "InjectionToken",
            "typeArguments": [
              {
                "type": "reference",
                "name": "NbAuthProviders",
                "id": 66
              }
            ]
          },
          "defaultValue": " new InjectionToken<NbAuthProviders>('Nebular Auth Token')"
        },
        {
          "id": 112,
          "name": "NB_AUTH_USER_OPTIONS_TOKEN",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "auth/auth.options.ts",
              "line": 72,
              "character": 39
            }
          ],
          "type": {
            "type": "reference",
            "name": "InjectionToken",
            "typeArguments": [
              {
                "type": "reference",
                "name": "NbAuthOptions",
                "id": 63
              }
            ]
          },
          "defaultValue": " new InjectionToken<NbAuthOptions>('Nebular User Auth Options')"
        },
        {
          "id": 69,
          "name": "defaultSettings",
          "kind": 2097152,
          "kindString": "Object literal",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 70,
              "name": "forms",
              "kind": 2097152,
              "kindString": "Object literal",
              "flags": {
                "isExported": true
              },
              "children": [
                {
                  "id": 71,
                  "name": "login",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 73,
                      "name": "provider",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 16,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"email\""
                    },
                    {
                      "id": 72,
                      "name": "redirectDelay",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 15,
                          "character": 19
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "500"
                    },
                    {
                      "id": 74,
                      "name": "rememberMe",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 17,
                          "character": 16
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "defaultValue": "true"
                    },
                    {
                      "id": 75,
                      "name": "showMessages",
                      "kind": 2097152,
                      "kindString": "Object literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 77,
                          "name": "error",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 20,
                              "character": 13
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "true"
                        },
                        {
                          "id": 76,
                          "name": "success",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 19,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "true"
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            77,
                            76
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 18,
                          "character": 18
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        73,
                        72,
                        74
                      ]
                    },
                    {
                      "title": "Object literals",
                      "kind": 2097152,
                      "children": [
                        75
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/auth.options.ts",
                      "line": 14,
                      "character": 9
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 97,
                  "name": "logout",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 99,
                      "name": "provider",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 50,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"email\""
                    },
                    {
                      "id": 98,
                      "name": "redirectDelay",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 49,
                          "character": 19
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "500"
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        99,
                        98
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/auth.options.ts",
                      "line": 48,
                      "character": 10
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 78,
                  "name": "register",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 80,
                      "name": "provider",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 25,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"email\""
                    },
                    {
                      "id": 79,
                      "name": "redirectDelay",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 24,
                          "character": 19
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "500"
                    },
                    {
                      "id": 84,
                      "name": "terms",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 30,
                          "character": 11
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "defaultValue": "true"
                    },
                    {
                      "id": 81,
                      "name": "showMessages",
                      "kind": 2097152,
                      "kindString": "Object literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 83,
                          "name": "error",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 28,
                              "character": 13
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "true"
                        },
                        {
                          "id": 82,
                          "name": "success",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 27,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "true"
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            83,
                            82
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 26,
                          "character": 18
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        80,
                        79,
                        84
                      ]
                    },
                    {
                      "title": "Object literals",
                      "kind": 2097152,
                      "children": [
                        81
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/auth.options.ts",
                      "line": 23,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 85,
                  "name": "requestPassword",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 87,
                      "name": "provider",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 34,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"email\""
                    },
                    {
                      "id": 86,
                      "name": "redirectDelay",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 33,
                          "character": 19
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "500"
                    },
                    {
                      "id": 88,
                      "name": "showMessages",
                      "kind": 2097152,
                      "kindString": "Object literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 90,
                          "name": "error",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 37,
                              "character": 13
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "true"
                        },
                        {
                          "id": 89,
                          "name": "success",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 36,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "true"
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            90,
                            89
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 35,
                          "character": 18
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        87,
                        86
                      ]
                    },
                    {
                      "title": "Object literals",
                      "kind": 2097152,
                      "children": [
                        88
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/auth.options.ts",
                      "line": 32,
                      "character": 19
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 91,
                  "name": "resetPassword",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 93,
                      "name": "provider",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 42,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"email\""
                    },
                    {
                      "id": 92,
                      "name": "redirectDelay",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 41,
                          "character": 19
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      "defaultValue": "500"
                    },
                    {
                      "id": 94,
                      "name": "showMessages",
                      "kind": 2097152,
                      "kindString": "Object literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 96,
                          "name": "error",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 45,
                              "character": 13
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "true"
                        },
                        {
                          "id": 95,
                          "name": "success",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 44,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "true"
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            96,
                            95
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 43,
                          "character": 18
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        93,
                        92
                      ]
                    },
                    {
                      "title": "Object literals",
                      "kind": 2097152,
                      "children": [
                        94
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/auth.options.ts",
                      "line": 40,
                      "character": 17
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 100,
                  "name": "validation",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 105,
                      "name": "email",
                      "kind": 2097152,
                      "kindString": "Object literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 106,
                          "name": "required",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 59,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "true"
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            106
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 58,
                          "character": 11
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    },
                    {
                      "id": 107,
                      "name": "fullName",
                      "kind": 2097152,
                      "kindString": "Object literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 110,
                          "name": "maxLength",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 64,
                              "character": 17
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          },
                          "defaultValue": "50"
                        },
                        {
                          "id": 109,
                          "name": "minLength",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 63,
                              "character": 17
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          },
                          "defaultValue": "4"
                        },
                        {
                          "id": 108,
                          "name": "required",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 62,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "false"
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            110,
                            109,
                            108
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 61,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    },
                    {
                      "id": 101,
                      "name": "password",
                      "kind": 2097152,
                      "kindString": "Object literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 104,
                          "name": "maxLength",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 56,
                              "character": 17
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          },
                          "defaultValue": "50"
                        },
                        {
                          "id": 103,
                          "name": "minLength",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 55,
                              "character": 17
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          },
                          "defaultValue": "4"
                        },
                        {
                          "id": 102,
                          "name": "required",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/auth.options.ts",
                              "line": 54,
                              "character": 16
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          "defaultValue": "true"
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            104,
                            103,
                            102
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/auth.options.ts",
                          "line": 53,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Object literals",
                      "kind": 2097152,
                      "children": [
                        105,
                        107,
                        101
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/auth.options.ts",
                      "line": 52,
                      "character": 14
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Object literals",
                  "kind": 2097152,
                  "children": [
                    71,
                    97,
                    78,
                    85,
                    91,
                    100
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "auth/auth.options.ts",
                  "line": 13,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "object"
              }
            }
          ],
          "groups": [
            {
              "title": "Object literals",
              "kind": 2097152,
              "children": [
                70
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/auth.options.ts",
              "line": 12,
              "character": 28
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            63,
            66
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            115,
            111,
            113,
            114,
            112
          ]
        },
        {
          "title": "Object literals",
          "kind": 2097152,
          "children": [
            69
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/auth.options.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 578,
      "name": "\"auth/auth.routes\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/auth.routes.ts",
      "children": [
        {
          "id": 579,
          "name": "routes",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "auth/auth.routes.ts",
              "line": 15,
              "character": 19
            }
          ],
          "type": {
            "type": "reference",
            "name": "Routes"
          },
          "defaultValue": " [\r\n  {\r\n    path: 'auth',\r\n    component: NbAuthComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: NbLoginComponent,\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: NbLoginComponent,\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: NbRegisterComponent,\r\n      },\r\n      {\r\n        path: 'logout',\r\n        component: NbLogoutComponent,\r\n      },\r\n      {\r\n        path: 'request-password',\r\n        component: NbRequestPasswordComponent,\r\n      },\r\n      {\r\n        path: 'reset-password',\r\n        component: NbResetPasswordComponent,\r\n      },\r\n    ],\r\n  },\r\n]"
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            579
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/auth.routes.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 466,
      "name": "\"auth/components/auth-block/auth-block.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/components/auth-block/auth-block.component.ts",
      "children": [
        {
          "id": 467,
          "name": "NbAuthBlockComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-auth-block',\r\n  styleUrls: ['./auth-block.component.scss'],\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "auth/components/auth-block/auth-block.component.ts",
              "line": 10,
              "character": 33
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            467
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/components/auth-block/auth-block.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 455,
      "name": "\"auth/components/auth.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/components/auth.component.ts",
      "children": [
        {
          "id": 456,
          "name": "NbAuthComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-auth',\r\n  styleUrls: ['./auth.component.scss'],\r\n  template: `\r\n    <nb-layout>\r\n      <nb-layout-column>\r\n        <nb-card>\r\n          <nb-card-body>\r\n            <div class=\"col-xl-4 col-lg-6 col-md-8 col-sm-12\">\r\n              <router-outlet></router-outlet>\r\n            </div>\r\n          </nb-card-body>\r\n        </nb-card>\r\n      </nb-layout-column>\r\n    </nb-layout>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 460,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 462,
                  "name": "new NbAuthComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 463,
                      "name": "auth",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbAuthService",
                        "id": 205
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbAuthComponent",
                    "id": 456
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/auth.component.ts",
                  "line": 31,
                  "character": 21
                }
              ]
            },
            {
              "id": 461,
              "name": "auth",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/components/auth.component.ts",
                  "line": 34,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbAuthService",
                "id": 205
              }
            },
            {
              "id": 458,
              "name": "authenticated",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/auth.component.ts",
                  "line": 30,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 457,
              "name": "subscription",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/auth.component.ts",
                  "line": 28,
                  "character": 14
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 459,
              "name": "token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/auth.component.ts",
                  "line": 31,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"\""
            },
            {
              "id": 464,
              "name": "ngOnDestroy",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 465,
                  "name": "ngOnDestroy",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/auth.component.ts",
                  "line": 42,
                  "character": 13
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                460
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                461,
                458,
                457,
                459
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                464
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/components/auth.component.ts",
              "line": 26,
              "character": 28
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "name": "OnDestroy"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            456
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/components/auth.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 593,
      "name": "\"auth/components/index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/components/index.ts",
      "sources": [
        {
          "fileName": "auth/components/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 468,
      "name": "\"auth/components/login/login.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/components/login/login.component.ts",
      "children": [
        {
          "id": 469,
          "name": "NbLoginComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-login',\r\n  template: `\r\n    <nb-auth-block>\r\n      <h2 class=\"title\">Sign In</h2>\r\n      <small class=\"form-text sub-title\">Hello! Sign in with your username or email</small>\r\n\r\n      <form (ngSubmit)=\"login()\" #form=\"ngForm\" autocomplete=\"nope\">\r\n\r\n        <div *ngIf=\"showMessages.error && errors && errors.length > 0 && !submitted\"\r\n             class=\"alert alert-danger\" role=\"alert\">\r\n          <div><strong>Oh snap!</strong></div>\r\n          <div *ngFor=\"let error of errors\">{{ error }}</div>\r\n        </div>\r\n\r\n        <div *ngIf=\"showMessages.success && messages && messages.length > 0 && !submitted\"\r\n             class=\"alert alert-success\" role=\"alert\">\r\n          <div><strong>Hooray!</strong></div>\r\n          <div *ngFor=\"let message of messages\">{{ message }}</div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"input-email\" class=\"sr-only\">Email address</label>\r\n          <input name=\"email\" [(ngModel)]=\"user.email\" id=\"input-email\" pattern=\".+@.+\\..+\"\r\n                 class=\"form-control\" placeholder=\"Email address\" #email=\"ngModel\"\r\n                 [class.form-control-danger]=\"email.invalid && email.touched\" autofocus\r\n                 [required]=\"getConfigValue('forms.validation.email.required')\">\r\n          <small class=\"form-text error\" *ngIf=\"email.invalid && email.touched && email.errors?.required\">\r\n            Email is required!\r\n          </small>\r\n          <small class=\"form-text error\"\r\n                 *ngIf=\"email.invalid && email.touched && email.errors?.pattern\">\r\n            Email should be the real one!\r\n          </small>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"input-password\" class=\"sr-only\">Password</label>\r\n          <input name=\"password\" [(ngModel)]=\"user.password\" type=\"password\" id=\"input-password\"\r\n                 class=\"form-control\" placeholder=\"Password\" #password=\"ngModel\"\r\n                 [class.form-control-danger]=\"password.invalid && password.touched\"\r\n                 [required]=\"getConfigValue('forms.validation.password.required')\"\r\n                 [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\r\n                 [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\">\r\n          <small class=\"form-text error\" *ngIf=\"password.invalid && password.touched && password.errors?.required\">\r\n            Password is required!\r\n          </small>\r\n          <small\r\n            class=\"form-text error\"\r\n            *ngIf=\"password.invalid && password.touched && (password.errors?.minlength || password.errors?.maxlength)\">\r\n            Password should contains\r\n            from {{ getConfigValue('forms.validation.password.minLength') }}\r\n            to {{ getConfigValue('forms.validation.password.maxLength') }}\r\n            characters\r\n          </small>\r\n        </div>\r\n\r\n        <div class=\"form-group accept-group col-sm-12\">\r\n          <nb-checkbox name=\"rememberMe\" [(ngModel)]=\"user.rememberMe\">Remember me</nb-checkbox>\r\n          <a class=\"forgot-password\" routerLink=\"../request-password\">Forgot Password?</a>\r\n        </div>\r\n\r\n        <button [disabled]=\"submitted || !form.valid\" class=\"btn btn-block btn-hero-success\"\r\n                [class.btn-pulse]=\"submitted\">\r\n          Sign In\r\n        </button>\r\n      </form>\r\n\r\n      <div class=\"links\">\r\n        <small class=\"form-text\">Or connect with:</small>\r\n\r\n        <div class=\"socials\">\r\n          <a href=\"https://github.com/akveo\" target=\"_blank\" class=\"socicon-github\"></a>\r\n          <a href=\"https://www.facebook.com/akveo/\" target=\"_blank\" class=\"socicon-facebook\"></a>\r\n          <a href=\"https://twitter.com/akveo_inc\" target=\"_blank\" class=\"socicon-twitter\"></a>\r\n        </div>\r\n\r\n        <small class=\"form-text\">\r\n          Don't have an account? <a routerLink=\"../register\"><strong>Sign Up</strong></a>\r\n        </small>\r\n      </div>\r\n    </nb-auth-block>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 477,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 482,
                  "name": "new NbLoginComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 483,
                      "name": "service",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbAuthService",
                        "id": 205
                      }
                    },
                    {
                      "id": 484,
                      "name": "config",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "decorators": [
                        {
                          "name": "Inject",
                          "type": {
                            "type": "reference",
                            "name": "Inject"
                          },
                          "arguments": {
                            "token": "NB_AUTH_OPTIONS_TOKEN"
                          }
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 485,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      },
                      "defaultValue": " {}"
                    },
                    {
                      "id": 486,
                      "name": "router",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbLoginComponent",
                    "id": 469
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 106,
                  "character": 29
                }
              ]
            },
            {
              "id": 479,
              "name": "config",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "decorators": [
                {
                  "name": "Inject",
                  "type": {
                    "type": "reference",
                    "name": "Inject"
                  },
                  "arguments": {
                    "token": "NB_AUTH_OPTIONS_TOKEN"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 109,
                  "character": 61
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 480,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {}
                }
              }
            },
            {
              "id": 473,
              "name": "errors",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 103,
                  "character": 8
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 474,
              "name": "messages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 104,
                  "character": 10
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 472,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 101,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"\""
            },
            {
              "id": 470,
              "name": "redirectDelay",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 99,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "0"
            },
            {
              "id": 481,
              "name": "router",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 110,
                  "character": 30
                }
              ],
              "type": {
                "type": "reference",
                "name": "Router"
              }
            },
            {
              "id": 478,
              "name": "service",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 108,
                  "character": 31
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbAuthService",
                "id": 205
              }
            },
            {
              "id": 471,
              "name": "showMessages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 100,
                  "character": 14
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 476,
              "name": "submitted",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 106,
                  "character": 11
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 475,
              "name": "user",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 105,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 489,
              "name": "getConfigValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 490,
                  "name": "getConfigValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 491,
                      "name": "key",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 139,
                  "character": 16
                }
              ]
            },
            {
              "id": 487,
              "name": "login",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 488,
                  "name": "login",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/login/login.component.ts",
                  "line": 117,
                  "character": 7
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                477
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                479,
                473,
                474,
                472,
                470,
                481,
                478,
                471,
                476,
                475
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                489,
                487
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/components/login/login.component.ts",
              "line": 97,
              "character": 29
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            469
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/components/login/login.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 516,
      "name": "\"auth/components/logout/logout.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/components/logout/logout.component.ts",
      "children": [
        {
          "id": 517,
          "name": "NbLogoutComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-logout',\r\n  template: `\r\n    <div>Logging out, please wait...</div>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 519,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 522,
                  "name": "new NbLogoutComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 523,
                      "name": "service",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbAuthService",
                        "id": 205
                      }
                    },
                    {
                      "id": 524,
                      "name": "router",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbLogoutComponent",
                    "id": 517
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/logout/logout.component.ts",
                  "line": 19,
                  "character": 31
                }
              ]
            },
            {
              "id": 518,
              "name": "redirectDelay",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/logout/logout.component.ts",
                  "line": 19,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "1500"
            },
            {
              "id": 521,
              "name": "router",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/components/logout/logout.component.ts",
                  "line": 22,
                  "character": 30
                }
              ],
              "type": {
                "type": "reference",
                "name": "Router"
              }
            },
            {
              "id": 520,
              "name": "service",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/components/logout/logout.component.ts",
                  "line": 21,
                  "character": 31
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbAuthService",
                "id": 205
              }
            },
            {
              "id": 527,
              "name": "logout",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 528,
                  "name": "logout",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 529,
                      "name": "provider",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/logout/logout.component.ts",
                  "line": 29,
                  "character": 8
                }
              ]
            },
            {
              "id": 525,
              "name": "ngOnInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 526,
                  "name": "ngOnInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/logout/logout.component.ts",
                  "line": 25,
                  "character": 10
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                519
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                518,
                521,
                520
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                527,
                525
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/components/logout/logout.component.ts",
              "line": 17,
              "character": 30
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "name": "OnInit"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            517
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/components/logout/logout.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 492,
      "name": "\"auth/components/register/register.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/components/register/register.component.ts",
      "children": [
        {
          "id": 493,
          "name": "NbRegisterComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-register',\r\n  styleUrls: ['./register.component.scss'],\r\n  template: `\r\n    <nb-auth-block>\r\n      <h2 class=\"title\">Sign Up</h2>\r\n      <form (ngSubmit)=\"register()\" #form=\"ngForm\">\r\n\r\n        <div *ngIf=\"showMessages.error && errors && errors.length > 0 && !submitted\"\r\n             class=\"alert alert-danger\" role=\"alert\">\r\n          <div><strong>Oh snap!</strong></div>\r\n          <div *ngFor=\"let error of errors\">{{ error }}</div>\r\n        </div>\r\n        <div *ngIf=\"showMessages.success && messages && messages.length > 0 && !submitted\"\r\n             class=\"alert alert-success\" role=\"alert\">\r\n          <div><strong>Hooray!</strong></div>\r\n          <div *ngFor=\"let message of messages\">{{ message }}</div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"input-name\" class=\"sr-only\">Full name</label>\r\n          <input name=\"fullName\" [(ngModel)]=\"user.fullName\" id=\"input-name\" #fullName=\"ngModel\"\r\n                 class=\"form-control\" placeholder=\"Full name\"\r\n                 [class.form-control-danger]=\"fullName.invalid && fullName.touched\"\r\n                 [required]=\"getConfigValue('forms.validation.fullName.required')\"\r\n                 [minlength]=\"getConfigValue('forms.validation.fullName.minLength')\"\r\n                 [maxlength]=\"getConfigValue('forms.validation.fullName.maxLength')\"\r\n                 autofocus>\r\n          <small class=\"form-text error\" *ngIf=\"fullName.invalid && fullName.touched && fullName.errors?.required\">\r\n            Full name is required!\r\n          </small>\r\n          <small\r\n            class=\"form-text error\"\r\n            *ngIf=\"fullName.invalid && fullName.touched && (fullName.errors?.minlength || fullName.errors?.maxlength)\">\r\n            Full name should contains\r\n            from {{getConfigValue('forms.validation.password.minLength')}}\r\n            to {{getConfigValue('forms.validation.password.maxLength')}}\r\n            characters\r\n          </small>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"input-email\" class=\"sr-only\">Email address</label>\r\n          <input name=\"email\" [(ngModel)]=\"user.email\" id=\"input-email\" #email=\"ngModel\"\r\n                 class=\"form-control\" placeholder=\"Email address\" pattern=\".+@.+\\..+\"\r\n                 [class.form-control-danger]=\"email.invalid && email.touched\"\r\n                 [required]=\"getConfigValue('forms.validation.email.required')\">\r\n          <small class=\"form-text error\" *ngIf=\"email.invalid && email.touched && email.errors?.required\">\r\n            Email is required!\r\n          </small>\r\n          <small class=\"form-text error\"\r\n                 *ngIf=\"email.invalid && email.touched && email.errors?.pattern\">\r\n            Email should be the real one!\r\n          </small>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"input-password\" class=\"sr-only\">Password</label>\r\n          <input name=\"password\" [(ngModel)]=\"user.password\" type=\"password\" id=\"input-password\"\r\n                 class=\"form-control\" placeholder=\"Password\" #password=\"ngModel\"\r\n                 [class.form-control-danger]=\"password.invalid && password.touched\"\r\n                 [required]=\"getConfigValue('forms.validation.password.required')\"\r\n                 [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\r\n                 [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\">\r\n          <small class=\"form-text error\" *ngIf=\"password.invalid && password.touched && password.errors?.required\">\r\n            Password is required!\r\n          </small>\r\n          <small\r\n            class=\"form-text error\"\r\n            *ngIf=\"password.invalid && password.touched && (password.errors?.minlength || password.errors?.maxlength)\">\r\n            Password should contains\r\n            from {{ getConfigValue('forms.validation.password.minLength') }}\r\n            to {{ getConfigValue('forms.validation.password.maxLength') }}\r\n            characters\r\n          </small>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"input-re-password\" class=\"sr-only\">Repeat password</label>\r\n          <input\r\n            name=\"rePass\" [(ngModel)]=\"user.confirmPassword\" type=\"password\" id=\"input-re-password\"\r\n            class=\"form-control\" placeholder=\"Confirm Password\" #rePass=\"ngModel\"\r\n            [class.form-control-danger]=\"(rePass.invalid || password.value != rePass.value) && rePass.touched\"\r\n            [required]=\"getConfigValue('forms.validation.password.required')\">\r\n          <small class=\"form-text error\"\r\n                 *ngIf=\"rePass.invalid && rePass.touched && rePass.errors?.required\">\r\n            Password confirmation is required!\r\n          </small>\r\n          <small\r\n            class=\"form-text error\"\r\n            *ngIf=\"rePass.touched && password.value != rePass.value && !rePass.errors?.required\">\r\n            Password does not match the confirm password.\r\n          </small>\r\n        </div>\r\n\r\n        <div class=\"form-group accept-group col-sm-12\" *ngIf=\"getConfigValue('forms.register.terms')\">\r\n          <nb-checkbox name=\"terms\" [(ngModel)]=\"user.terms\" [required]=\"getConfigValue('forms.register.terms')\">\r\n            Agree to <a href=\"#\" target=\"_blank\"><strong>Terms & Conditions</strong></a>\r\n          </nb-checkbox>\r\n        </div>\r\n\r\n        <button [disabled]=\"submitted || !form.valid\" class=\"btn btn-block btn-hero-success\"\r\n                [class.btn-pulse]=\"submitted\">\r\n          Register\r\n        </button>\r\n      </form>\r\n\r\n      <div class=\"links\">\r\n        <small class=\"form-text\">\r\n          Already have an account? <a routerLink=\"../login\"><strong>Sign in</strong></a>\r\n        </small>\r\n      </div>\r\n    </nb-auth-block>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 501,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 506,
                  "name": "new NbRegisterComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 507,
                      "name": "service",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbAuthService",
                        "id": 205
                      }
                    },
                    {
                      "id": 508,
                      "name": "config",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "decorators": [
                        {
                          "name": "Inject",
                          "type": {
                            "type": "reference",
                            "name": "Inject"
                          },
                          "arguments": {
                            "token": "NB_AUTH_OPTIONS_TOKEN"
                          }
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 509,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      },
                      "defaultValue": " {}"
                    },
                    {
                      "id": 510,
                      "name": "router",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbRegisterComponent",
                    "id": 493
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 137,
                  "character": 17
                }
              ]
            },
            {
              "id": 503,
              "name": "config",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "decorators": [
                {
                  "name": "Inject",
                  "type": {
                    "type": "reference",
                    "name": "Inject"
                  },
                  "arguments": {
                    "token": "NB_AUTH_OPTIONS_TOKEN"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 140,
                  "character": 61
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 504,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {}
                }
              }
            },
            {
              "id": 498,
              "name": "errors",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 135,
                  "character": 8
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 499,
              "name": "messages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 136,
                  "character": 10
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 496,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 132,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"\""
            },
            {
              "id": 494,
              "name": "redirectDelay",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 130,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "0"
            },
            {
              "id": 505,
              "name": "router",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 141,
                  "character": 30
                }
              ],
              "type": {
                "type": "reference",
                "name": "Router"
              }
            },
            {
              "id": 502,
              "name": "service",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 139,
                  "character": 31
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbAuthService",
                "id": 205
              }
            },
            {
              "id": 495,
              "name": "showMessages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 131,
                  "character": 14
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 497,
              "name": "submitted",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 134,
                  "character": 11
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 500,
              "name": "user",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 137,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 513,
              "name": "getConfigValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 514,
                  "name": "getConfigValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 515,
                      "name": "key",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 169,
                  "character": 16
                }
              ]
            },
            {
              "id": 511,
              "name": "register",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 512,
                  "name": "register",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/register/register.component.ts",
                  "line": 148,
                  "character": 10
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                501
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                503,
                498,
                499,
                496,
                494,
                505,
                502,
                495,
                497,
                500
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                513,
                511
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/components/register/register.component.ts",
              "line": 128,
              "character": 32
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            493
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/components/register/register.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 530,
      "name": "\"auth/components/request-password/request-password.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/components/request-password/request-password.component.ts",
      "children": [
        {
          "id": 531,
          "name": "NbRequestPasswordComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-request-password-page',\r\n  styleUrls: ['./request-password.component.scss'],\r\n  template: `\r\n    <nb-auth-block>\r\n      <h2 class=\"title\">Forgot Password</h2>\r\n      <small class=\"form-text sub-title\">Enter your email adress and we’ll send a like to reset your password</small>\r\n      <form (ngSubmit)=\"requestPass()\" #requestPassForm=\"ngForm\">\r\n\r\n        <div *ngIf=\"showMessages.error && errors && errors.length > 0 && !submitted\"\r\n             class=\"alert alert-danger\" role=\"alert\">\r\n          <div><strong>Oh snap!</strong></div>\r\n          <div *ngFor=\"let error of errors\">{{ error }}</div>\r\n        </div>\r\n        <div *ngIf=\"showMessages.success && messages && messages.length > 0 && !submitted\"\r\n             class=\"alert alert-success\" role=\"alert\">\r\n          <div><strong>Hooray!</strong></div>\r\n          <div *ngFor=\"let message of messages\">{{ message }}</div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"input-email\" class=\"sr-only\">Enter your email address</label>\r\n          <input name=\"email\" [(ngModel)]=\"user.email\" id=\"input-email\" #email=\"ngModel\"\r\n                 class=\"form-control\" placeholder=\"Email address\" pattern=\".+@.+\\..+\"\r\n                 [class.form-control-danger]=\"email.invalid && email.touched\"\r\n                 [required]=\"getConfigValue('forms.validation.email.required')\"\r\n                 autofocus>\r\n          <small class=\"form-text error\" *ngIf=\"email.invalid && email.touched && email.errors?.required\">\r\n            Email is required!\r\n          </small>\r\n          <small class=\"form-text error\"\r\n                 *ngIf=\"email.invalid && email.touched && email.errors?.pattern\">\r\n            Email should be the real one!\r\n          </small>\r\n        </div>\r\n\r\n        <button [disabled]=\"submitted || !requestPassForm.form.valid\" class=\"btn btn-hero-success btn-block\"\r\n                [class.btn-pulse]=\"submitted\">\r\n          Request password\r\n        </button>\r\n      </form>\r\n\r\n      <div class=\"links col-sm-12\">\r\n        <small class=\"form-text\">\r\n          Already have an account? <a routerLink=\"../login\"><strong>Sign In</strong></a>\r\n        </small>\r\n        <small class=\"form-text\">\r\n          <a routerLink=\"../register\"><strong>Sign Up</strong></a>\r\n        </small>\r\n      </div>\r\n    </nb-auth-block>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 539,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 544,
                  "name": "new NbRequestPasswordComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 545,
                      "name": "service",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbAuthService",
                        "id": 205
                      }
                    },
                    {
                      "id": 546,
                      "name": "config",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "decorators": [
                        {
                          "name": "Inject",
                          "type": {
                            "type": "reference",
                            "name": "Inject"
                          },
                          "arguments": {
                            "token": "NB_AUTH_OPTIONS_TOKEN"
                          }
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 547,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      },
                      "defaultValue": " {}"
                    },
                    {
                      "id": 548,
                      "name": "router",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbRequestPasswordComponent",
                    "id": 531
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 75,
                  "character": 17
                }
              ]
            },
            {
              "id": 541,
              "name": "config",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "decorators": [
                {
                  "name": "Inject",
                  "type": {
                    "type": "reference",
                    "name": "Inject"
                  },
                  "arguments": {
                    "token": "NB_AUTH_OPTIONS_TOKEN"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 78,
                  "character": 61
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 542,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {}
                }
              }
            },
            {
              "id": 536,
              "name": "errors",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 73,
                  "character": 8
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 537,
              "name": "messages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 74,
                  "character": 10
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 534,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 70,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"\""
            },
            {
              "id": 532,
              "name": "redirectDelay",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 68,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "0"
            },
            {
              "id": 543,
              "name": "router",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 79,
                  "character": 30
                }
              ],
              "type": {
                "type": "reference",
                "name": "Router"
              }
            },
            {
              "id": 540,
              "name": "service",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 77,
                  "character": 31
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbAuthService",
                "id": 205
              }
            },
            {
              "id": 533,
              "name": "showMessages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 69,
                  "character": 14
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 535,
              "name": "submitted",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 72,
                  "character": 11
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 538,
              "name": "user",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 75,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 551,
              "name": "getConfigValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 552,
                  "name": "getConfigValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 553,
                      "name": "key",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 107,
                  "character": 16
                }
              ]
            },
            {
              "id": 549,
              "name": "requestPass",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 550,
                  "name": "requestPass",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/request-password/request-password.component.ts",
                  "line": 86,
                  "character": 13
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                539
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                541,
                536,
                537,
                534,
                532,
                543,
                540,
                533,
                535,
                538
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                551,
                549
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/components/request-password/request-password.component.ts",
              "line": 66,
              "character": 39
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            531
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/components/request-password/request-password.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 554,
      "name": "\"auth/components/reset-password/reset-password.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/components/reset-password/reset-password.component.ts",
      "children": [
        {
          "id": 555,
          "name": "NbResetPasswordComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-reset-password-page',\r\n  styleUrls: ['./reset-password.component.scss'],\r\n  template: `\r\n    <nb-auth-block>\r\n      <h2 class=\"title\">Change password</h2>\r\n      <small class=\"form-text sub-title\">Please enter a new password</small>\r\n      <form (ngSubmit)=\"resetPass()\" #resetPassForm=\"ngForm\">\r\n\r\n        <div *ngIf=\"errors && errors.length > 0 && !submitted\" class=\"alert alert-danger\" role=\"alert\">\r\n          <div><strong>Oh snap!</strong></div>\r\n          <div *ngFor=\"let error of errors\">{{ error }}</div>\r\n        </div>\r\n        <div *ngIf=\"messages && messages.length > 0 && !submitted\" class=\"alert alert-success\" role=\"alert\">\r\n          <div><strong>Hooray!</strong></div>\r\n          <div *ngFor=\"let message of messages\">{{ message }}</div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"input-password\" class=\"sr-only\">New Password</label>\r\n          <input name=\"password\" [(ngModel)]=\"user.password\" type=\"password\" id=\"input-password\"\r\n                 class=\"form-control form-control-lg first\" placeholder=\"New Password\" #password=\"ngModel\"\r\n                 [class.form-control-danger]=\"password.invalid && password.touched\"\r\n                 [required]=\"getConfigValue('forms.validation.password.required')\"\r\n                 [minlength]=\"getConfigValue('forms.validation.password.minLength')\"\r\n                 [maxlength]=\"getConfigValue('forms.validation.password.maxLength')\"\r\n                 autofocus>\r\n          <small class=\"form-text error\" *ngIf=\"password.invalid && password.touched && password.errors?.required\">\r\n            Password is required!\r\n          </small>\r\n          <small\r\n            class=\"form-text error\"\r\n            *ngIf=\"password.invalid && password.touched && (password.errors?.minlength || password.errors?.maxlength)\">\r\n            Password should contains\r\n            from {{getConfigValue('forms.validation.password.minLength')}}\r\n            to {{getConfigValue('forms.validation.password.maxLength')}}\r\n            characters\r\n          </small>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"input-re-password\" class=\"sr-only\">Confirm Password</label>\r\n          <input\r\n            name=\"rePass\" [(ngModel)]=\"user.confirmPassword\" type=\"password\" id=\"input-re-password\"\r\n            class=\"form-control form-control-lg last\" placeholder=\"Confirm Password\" #rePass=\"ngModel\"\r\n            [class.form-control-danger]=\"(rePass.invalid || password.value != rePass.value) && rePass.touched\"\r\n            [required]=\"getConfigValue('forms.validation.password.required')\">\r\n          <small class=\"form-text error\"\r\n                 *ngIf=\"rePass.invalid && rePass.touched && rePass.errors?.required\">\r\n            Password confirmation is required!\r\n          </small>\r\n          <small\r\n            class=\"form-text error\"\r\n            *ngIf=\"rePass.touched && password.value != rePass.value && !rePass.errors?.required\">\r\n            Password does not match the confirm password.\r\n          </small>\r\n        </div>\r\n\r\n        <button [disabled]=\"submitted || !resetPassForm.form.valid\" class=\"btn btn-hero-success btn-block\"\r\n                [class.btn-pulse]=\"submitted\">\r\n          Change password\r\n        </button>\r\n      </form>\r\n\r\n      <div class=\"links col-sm-12\">\r\n        <small class=\"form-text\">\r\n          Already have an account? <a routerLink=\"../login\"><strong>Sign In</strong></a>\r\n        </small>\r\n        <small class=\"form-text\">\r\n          <a routerLink=\"../register\"><strong>Sign Up</strong></a>\r\n        </small>\r\n      </div>\r\n    </nb-auth-block>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 563,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 568,
                  "name": "new NbResetPasswordComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 569,
                      "name": "service",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbAuthService",
                        "id": 205
                      }
                    },
                    {
                      "id": 570,
                      "name": "config",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "decorators": [
                        {
                          "name": "Inject",
                          "type": {
                            "type": "reference",
                            "name": "Inject"
                          },
                          "arguments": {
                            "token": "NB_AUTH_OPTIONS_TOKEN"
                          }
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 571,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      },
                      "defaultValue": " {}"
                    },
                    {
                      "id": 572,
                      "name": "router",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbResetPasswordComponent",
                    "id": 555
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 97,
                  "character": 17
                }
              ]
            },
            {
              "id": 565,
              "name": "config",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "decorators": [
                {
                  "name": "Inject",
                  "type": {
                    "type": "reference",
                    "name": "Inject"
                  },
                  "arguments": {
                    "token": "NB_AUTH_OPTIONS_TOKEN"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 100,
                  "character": 61
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 566,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {}
                }
              }
            },
            {
              "id": 560,
              "name": "errors",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 95,
                  "character": 8
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 561,
              "name": "messages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 96,
                  "character": 10
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 558,
              "name": "provider",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 92,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"\""
            },
            {
              "id": 556,
              "name": "redirectDelay",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 90,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "0"
            },
            {
              "id": 567,
              "name": "router",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 101,
                  "character": 30
                }
              ],
              "type": {
                "type": "reference",
                "name": "Router"
              }
            },
            {
              "id": 564,
              "name": "service",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 99,
                  "character": 31
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbAuthService",
                "id": 205
              }
            },
            {
              "id": 557,
              "name": "showMessages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 91,
                  "character": 14
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 559,
              "name": "submitted",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 94,
                  "character": 11
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 562,
              "name": "user",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 97,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 575,
              "name": "getConfigValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 576,
                  "name": "getConfigValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 577,
                      "name": "key",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 129,
                  "character": 16
                }
              ]
            },
            {
              "id": 573,
              "name": "resetPass",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 574,
                  "name": "resetPass",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/components/reset-password/reset-password.component.ts",
                  "line": 108,
                  "character": 11
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                563
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                565,
                560,
                561,
                558,
                556,
                567,
                564,
                557,
                559,
                562
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                575,
                573
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/components/reset-password/reset-password.component.ts",
              "line": 88,
              "character": 37
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            555
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/components/reset-password/reset-password.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1,
      "name": "\"auth/helpers\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/helpers.ts",
      "children": [
        {
          "id": 26,
          "name": "b64DecodeUnicode",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 27,
              "name": "b64DecodeUnicode",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 28,
                  "name": "str",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "sources": [
            {
              "fileName": "auth/helpers.ts",
              "line": 175,
              "character": 32
            }
          ]
        },
        {
          "id": 23,
          "name": "b64decode",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 24,
              "name": "b64decode",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 25,
                  "name": "str",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "sources": [
            {
              "fileName": "auth/helpers.ts",
              "line": 147,
              "character": 25
            }
          ]
        },
        {
          "id": 8,
          "name": "cloneSpecificValue",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "signatures": [
            {
              "id": 9,
              "name": "cloneSpecificValue",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 10,
                  "name": "val",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "sources": [
            {
              "fileName": "auth/helpers.ts",
              "line": 86,
              "character": 27
            }
          ]
        },
        {
          "id": 11,
          "name": "deepCloneArray",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "signatures": [
            {
              "id": 12,
              "name": "deepCloneArray",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Recursive cloning array."
              },
              "parameters": [
                {
                  "id": 13,
                  "name": "arr",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "sources": [
            {
              "fileName": "auth/helpers.ts",
              "line": 99,
              "character": 23
            }
          ]
        },
        {
          "id": 2,
          "name": "deepExtend",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Extending object that entered in first argument.",
            "text": "Returns extended object or false if have no target object or incorrect type.\n\nIf you wish to clone source object (without modify it), just use empty new\nobject as first argument, like this:\n  deepExtend({}, yourObj_1, [yourObj_N]);\n"
          },
          "signatures": [
            {
              "id": 3,
              "name": "deepExtend",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "shortText": "Extending object that entered in first argument.",
                "text": "Returns extended object or false if have no target object or incorrect type.\n\nIf you wish to clone source object (without modify it), just use empty new\nobject as first argument, like this:\n  deepExtend({}, yourObj_1, [yourObj_N]);\n"
              },
              "parameters": [
                {
                  "id": 4,
                  "name": "objects",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "sources": [
            {
              "fileName": "auth/helpers.ts",
              "line": 10,
              "character": 23
            }
          ]
        },
        {
          "id": 14,
          "name": "getDeepFromObject",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 15,
              "name": "getDeepFromObject",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 16,
                  "name": "object",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 17,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {}
                    }
                  },
                  "defaultValue": " {}"
                },
                {
                  "id": 18,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 19,
                  "name": "defaultValue",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "sources": [
            {
              "fileName": "auth/helpers.ts",
              "line": 119,
              "character": 33
            }
          ]
        },
        {
          "id": 5,
          "name": "isSpecificValue",
          "kind": 64,
          "kindString": "Function",
          "flags": {},
          "signatures": [
            {
              "id": 6,
              "name": "isSpecificValue",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 7,
                  "name": "val",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "sources": [
            {
              "fileName": "auth/helpers.ts",
              "line": 79,
              "character": 24
            }
          ]
        },
        {
          "id": 20,
          "name": "urlBase64Decode",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 21,
              "name": "urlBase64Decode",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 22,
                  "name": "str",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "sources": [
            {
              "fileName": "auth/helpers.ts",
              "line": 134,
              "character": 31
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            26,
            23,
            8,
            11,
            2,
            14,
            5,
            20
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/helpers.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 622,
      "name": "\"auth/index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/index.ts",
      "sources": [
        {
          "fileName": "auth/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1577,
      "name": "\"auth/models/user\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/models/user.ts",
      "children": [
        {
          "id": 1578,
          "name": "NbUser",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 1579,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1587,
                  "name": "new NbUser",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1588,
                      "name": "id",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 1589,
                      "name": "email",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1590,
                      "name": "password",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1591,
                      "name": "rememberMe",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 1592,
                      "name": "terms",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 1593,
                      "name": "confirmPassword",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1594,
                      "name": "fullName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbUser",
                    "id": 1578
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/models/user.ts",
                  "line": 1,
                  "character": 21
                }
              ]
            },
            {
              "id": 1585,
              "name": "confirmPassword",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/models/user.ts",
                  "line": 8,
                  "character": 36
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1581,
              "name": "email",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/models/user.ts",
                  "line": 4,
                  "character": 26
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1586,
              "name": "fullName",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/models/user.ts",
                  "line": 9,
                  "character": 29
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1580,
              "name": "id",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/models/user.ts",
                  "line": 3,
                  "character": 23
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 1582,
              "name": "password",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/models/user.ts",
                  "line": 5,
                  "character": 29
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1583,
              "name": "rememberMe",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/models/user.ts",
                  "line": 6,
                  "character": 31
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1584,
              "name": "terms",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isPublic": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/models/user.ts",
                  "line": 7,
                  "character": 26
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                1579
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1585,
                1581,
                1586,
                1580,
                1582,
                1583,
                1584
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/models/user.ts",
              "line": 1,
              "character": 19
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1578
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/models/user.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 29,
      "name": "\"auth/providers/abstract-auth.provider\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/providers/abstract-auth.provider.ts",
      "children": [
        {
          "id": 30,
          "name": "NbAbstractAuthProvider",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 32,
              "name": "config",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 10,
                  "character": 18
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 31,
              "name": "defaultConfig",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 9,
                  "character": 25
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 39,
              "name": "authenticate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 40,
                  "name": "authenticate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 41,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 20,
                  "character": 23
                }
              ]
            },
            {
              "id": 53,
              "name": "createFailResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 54,
                  "name": "createFailResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 55,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "HttpResponse",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Object"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 30,
                  "character": 30
                }
              ]
            },
            {
              "id": 56,
              "name": "createSuccessResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 57,
                  "name": "createSuccessResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 58,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "HttpResponse",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Object"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 34,
                  "character": 33
                }
              ]
            },
            {
              "id": 36,
              "name": "getConfigValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 37,
                  "name": "getConfigValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 38,
                      "name": "key",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 16,
                  "character": 16
                }
              ]
            },
            {
              "id": 59,
              "name": "getJsonSafe",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 60,
                  "name": "getJsonSafe",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 61,
                      "name": "res",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "HttpResponse",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "name": "Object"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 38,
                  "character": 23
                }
              ]
            },
            {
              "id": 51,
              "name": "logout",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 52,
                  "name": "logout",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 28,
                  "character": 17
                }
              ]
            },
            {
              "id": 42,
              "name": "register",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 43,
                  "name": "register",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 44,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 22,
                  "character": 19
                }
              ]
            },
            {
              "id": 45,
              "name": "requestPassword",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 46,
                  "name": "requestPassword",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 47,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 24,
                  "character": 26
                }
              ]
            },
            {
              "id": 48,
              "name": "resetPassword",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 49,
                  "name": "resetPassword",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 50,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 26,
                  "character": 24
                }
              ]
            },
            {
              "id": 33,
              "name": "setConfig",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 34,
                  "name": "setConfig",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 35,
                      "name": "config",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 12,
                  "character": 11
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                32,
                31
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                39,
                53,
                56,
                36,
                59,
                51,
                42,
                45,
                48,
                33
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/providers/abstract-auth.provider.ts",
              "line": 7,
              "character": 44
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "name": "NbDummyAuthProvider",
              "id": 250
            },
            {
              "type": "reference",
              "name": "NbEmailPassAuthProvider",
              "id": 349
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            30
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/providers/abstract-auth.provider.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 246,
      "name": "\"auth/providers/dummy-auth.provider\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/providers/dummy-auth.provider.ts",
      "children": [
        {
          "id": 250,
          "name": "NbDummyAuthProvider",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 271,
              "name": "config",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 10,
                  "character": 18
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.config",
                "id": 32
              }
            },
            {
              "id": 253,
              "name": "authenticate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 254,
                  "name": "authenticate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 255,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.authenticate",
                    "id": 39
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/dummy-auth.provider.ts",
                  "line": 19,
                  "character": 14
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.authenticate",
                "id": 39
              }
            },
            {
              "id": 268,
              "name": "createDummyResult",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 269,
                  "name": "createDummyResult",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 270,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbAuthResult",
                    "id": 173
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/dummy-auth.provider.ts",
                  "line": 44,
                  "character": 29
                }
              ]
            },
            {
              "id": 278,
              "name": "createFailResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 279,
                  "name": "createFailResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 280,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "HttpResponse",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Object"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.createFailResponse",
                    "id": 53
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 30,
                  "character": 30
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.createFailResponse",
                "id": 53
              }
            },
            {
              "id": 281,
              "name": "createSuccessResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 282,
                  "name": "createSuccessResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 283,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "HttpResponse",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Object"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.createSuccessResponse",
                    "id": 56
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 34,
                  "character": 33
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.createSuccessResponse",
                "id": 56
              }
            },
            {
              "id": 275,
              "name": "getConfigValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 276,
                  "name": "getConfigValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 277,
                      "name": "key",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.getConfigValue",
                    "id": 36
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 16,
                  "character": 16
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.getConfigValue",
                "id": 36
              }
            },
            {
              "id": 284,
              "name": "getJsonSafe",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 285,
                  "name": "getJsonSafe",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 286,
                      "name": "res",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "HttpResponse",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "name": "Object"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.getJsonSafe",
                    "id": 59
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 38,
                  "character": 23
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.getJsonSafe",
                "id": 59
              }
            },
            {
              "id": 265,
              "name": "logout",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 266,
                  "name": "logout",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 267,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.logout",
                    "id": 51
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/dummy-auth.provider.ts",
                  "line": 39,
                  "character": 8
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.logout",
                "id": 51
              }
            },
            {
              "id": 256,
              "name": "register",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 257,
                  "name": "register",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 258,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.register",
                    "id": 42
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/dummy-auth.provider.ts",
                  "line": 24,
                  "character": 10
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.register",
                "id": 42
              }
            },
            {
              "id": 259,
              "name": "requestPassword",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 260,
                  "name": "requestPassword",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 261,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.requestPassword",
                    "id": 45
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/dummy-auth.provider.ts",
                  "line": 29,
                  "character": 17
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.requestPassword",
                "id": 45
              }
            },
            {
              "id": 262,
              "name": "resetPassword",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 263,
                  "name": "resetPassword",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 264,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.resetPassword",
                    "id": 48
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/dummy-auth.provider.ts",
                  "line": 34,
                  "character": 15
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.resetPassword",
                "id": 48
              }
            },
            {
              "id": 272,
              "name": "setConfig",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 273,
                  "name": "setConfig",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 274,
                      "name": "config",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.setConfig",
                    "id": 33
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 12,
                  "character": 11
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.setConfig",
                "id": 33
              }
            },
            {
              "id": 251,
              "name": "defaultConfig",
              "kind": 2097152,
              "kindString": "Object literal",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "children": [
                {
                  "id": 252,
                  "name": "delay",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "auth/providers/dummy-auth.provider.ts",
                      "line": 16,
                      "character": 9
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "defaultValue": "1000"
                }
              ],
              "groups": [
                {
                  "title": "Variables",
                  "kind": 32,
                  "children": [
                    252
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/dummy-auth.provider.ts",
                  "line": 15,
                  "character": 25
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "object"
              },
              "overwrites": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.defaultConfig",
                "id": 31
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                271
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                253,
                268,
                278,
                281,
                275,
                284,
                265,
                256,
                259,
                262,
                272
              ]
            },
            {
              "title": "Object literals",
              "kind": 2097152,
              "children": [
                251
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/providers/dummy-auth.provider.ts",
              "line": 13,
              "character": 32
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "name": "NbAbstractAuthProvider",
              "id": 30
            }
          ]
        },
        {
          "id": 247,
          "name": "NbDummyAuthProviderConfig",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 249,
              "name": "alwaysFail",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/dummy-auth.provider.ts",
                  "line": 9,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 248,
              "name": "delay",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/dummy-auth.provider.ts",
                  "line": 8,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                249,
                248
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/providers/dummy-auth.provider.ts",
              "line": 7,
              "character": 42
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            250
          ]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            247
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/providers/dummy-auth.provider.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 287,
      "name": "\"auth/providers/email-pass-auth.options\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/providers/email-pass-auth.options.ts",
      "children": [
        {
          "id": 288,
          "name": "NbEmailPassModuleConfig",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "comment": {
            "tags": [
              {
                "tag": "license",
                "text": "\nCopyright Akveo. All Rights Reserved.\nLicensed under the MIT License. See License.txt in the project root for license information.\n"
              }
            ]
          },
          "children": [
            {
              "id": 289,
              "name": "alwaysFail",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 9,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 297,
              "name": "defaultErrors",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 17,
                  "character": 15
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            {
              "id": 298,
              "name": "defaultMessages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 18,
                  "character": 17
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            {
              "id": 291,
              "name": "endpoint",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 11,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 292,
              "name": "method",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 12,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 293,
              "name": "redirect",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 13,
                  "character": 10
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 294,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 296,
                      "name": "failure",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 15,
                          "character": 11
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "null"
                          }
                        ]
                      }
                    },
                    {
                      "id": 295,
                      "name": "success",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 14,
                          "character": 11
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "null"
                          }
                        ]
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        296,
                        295
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.options.ts",
                      "line": 13,
                      "character": 12
                    }
                  ]
                }
              }
            },
            {
              "id": 290,
              "name": "rememberMe",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 10,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                289,
                297,
                298,
                291,
                292,
                293,
                290
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/providers/email-pass-auth.options.ts",
              "line": 8,
              "character": 40
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "name": "NbEmailPassResetModuleConfig",
              "id": 299
            }
          ]
        },
        {
          "id": 299,
          "name": "NbEmailPassResetModuleConfig",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 301,
              "name": "alwaysFail",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 9,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "NbEmailPassModuleConfig.alwaysFail",
                "id": 289
              }
            },
            {
              "id": 309,
              "name": "defaultErrors",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 17,
                  "character": 15
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "NbEmailPassModuleConfig.defaultErrors",
                "id": 297
              }
            },
            {
              "id": 310,
              "name": "defaultMessages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 18,
                  "character": 17
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "NbEmailPassModuleConfig.defaultMessages",
                "id": 298
              }
            },
            {
              "id": 303,
              "name": "endpoint",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 11,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "NbEmailPassModuleConfig.endpoint",
                "id": 291
              }
            },
            {
              "id": 304,
              "name": "method",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 12,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "NbEmailPassModuleConfig.method",
                "id": 292
              }
            },
            {
              "id": 305,
              "name": "redirect",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 13,
                  "character": 10
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 306,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 308,
                      "name": "failure",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 15,
                          "character": 11
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "null"
                          }
                        ]
                      }
                    },
                    {
                      "id": 307,
                      "name": "success",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 14,
                          "character": 11
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "null"
                          }
                        ]
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        308,
                        307
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.options.ts",
                      "line": 13,
                      "character": 12
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "NbEmailPassModuleConfig.redirect",
                "id": 293
              }
            },
            {
              "id": 302,
              "name": "rememberMe",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 10,
                  "character": 12
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "NbEmailPassModuleConfig.rememberMe",
                "id": 290
              }
            },
            {
              "id": 300,
              "name": "resetPasswordTokenKey",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 23,
                  "character": 23
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                301,
                309,
                310,
                303,
                304,
                305,
                302,
                300
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/providers/email-pass-auth.options.ts",
              "line": 22,
              "character": 45
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "name": "NbEmailPassModuleConfig",
              "id": 288
            }
          ]
        },
        {
          "id": 311,
          "name": "NgEmailPassAuthProviderConfig",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 312,
              "name": "baseEndpoint",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 28,
                  "character": 14
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 322,
              "name": "errors",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 38,
                  "character": 8
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 323,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 325,
                      "name": "getter",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 40,
                          "character": 10
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Function"
                      }
                    },
                    {
                      "id": 324,
                      "name": "key",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 39,
                          "character": 7
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        325,
                        324
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.options.ts",
                      "line": 38,
                      "character": 10
                    }
                  ]
                }
              }
            },
            {
              "id": 313,
              "name": "login",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 29,
                  "character": 7
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "name": "NbEmailPassModuleConfig",
                    "id": 288
                  }
                ]
              }
            },
            {
              "id": 317,
              "name": "logout",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 33,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "name": "NbEmailPassResetModuleConfig",
                    "id": 299
                  }
                ]
              }
            },
            {
              "id": 326,
              "name": "messages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 42,
                  "character": 10
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 327,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 329,
                      "name": "getter",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 44,
                          "character": 10
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Function"
                      }
                    },
                    {
                      "id": 328,
                      "name": "key",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 43,
                          "character": 7
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        329,
                        328
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.options.ts",
                      "line": 42,
                      "character": 12
                    }
                  ]
                }
              }
            },
            {
              "id": 314,
              "name": "register",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 30,
                  "character": 10
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "name": "NbEmailPassModuleConfig",
                    "id": 288
                  }
                ]
              }
            },
            {
              "id": 315,
              "name": "requestPass",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 31,
                  "character": 13
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "name": "NbEmailPassModuleConfig",
                    "id": 288
                  }
                ]
              }
            },
            {
              "id": 316,
              "name": "resetPass",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 32,
                  "character": 11
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "name": "NbEmailPassResetModuleConfig",
                    "id": 299
                  }
                ]
              }
            },
            {
              "id": 318,
              "name": "token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 34,
                  "character": 7
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 319,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 321,
                      "name": "getter",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 36,
                          "character": 10
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Function"
                      }
                    },
                    {
                      "id": 320,
                      "name": "key",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 35,
                          "character": 7
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        321,
                        320
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.options.ts",
                      "line": 34,
                      "character": 9
                    }
                  ]
                }
              }
            },
            {
              "id": 330,
              "name": "validation",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.options.ts",
                  "line": 46,
                  "character": 12
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 331,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 338,
                      "name": "email",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 53,
                          "character": 9
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 339,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 341,
                              "name": "regexp",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "auth/providers/email-pass-auth.options.ts",
                                  "line": 55,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "null"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 340,
                              "name": "required",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "auth/providers/email-pass-auth.options.ts",
                                  "line": 54,
                                  "character": 14
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                341,
                                340
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.options.ts",
                              "line": 53,
                              "character": 11
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 342,
                      "name": "fullName",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 57,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 343,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 346,
                              "name": "maxLength",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "auth/providers/email-pass-auth.options.ts",
                                  "line": 60,
                                  "character": 15
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "null"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 345,
                              "name": "minLength",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "auth/providers/email-pass-auth.options.ts",
                                  "line": 59,
                                  "character": 15
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "null"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 347,
                              "name": "regexp",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "auth/providers/email-pass-auth.options.ts",
                                  "line": 61,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "null"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 344,
                              "name": "required",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "auth/providers/email-pass-auth.options.ts",
                                  "line": 58,
                                  "character": 14
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                346,
                                345,
                                347,
                                344
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.options.ts",
                              "line": 57,
                              "character": 14
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 332,
                      "name": "password",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.options.ts",
                          "line": 47,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 333,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 336,
                              "name": "maxLength",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "auth/providers/email-pass-auth.options.ts",
                                  "line": 50,
                                  "character": 15
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "null"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 335,
                              "name": "minLength",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "auth/providers/email-pass-auth.options.ts",
                                  "line": 49,
                                  "character": 15
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "number"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "null"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 337,
                              "name": "regexp",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "auth/providers/email-pass-auth.options.ts",
                                  "line": 51,
                                  "character": 12
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "null"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 334,
                              "name": "required",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "auth/providers/email-pass-auth.options.ts",
                                  "line": 48,
                                  "character": 14
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                336,
                                335,
                                337,
                                334
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.options.ts",
                              "line": 47,
                              "character": 14
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        338,
                        342,
                        332
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.options.ts",
                      "line": 46,
                      "character": 14
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                312,
                322,
                313,
                317,
                326,
                314,
                315,
                316,
                318,
                330
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/providers/email-pass-auth.options.ts",
              "line": 27,
              "character": 46
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            288,
            299,
            311
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/providers/email-pass-auth.options.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 348,
      "name": "\"auth/providers/email-pass-auth.provider\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/providers/email-pass-auth.provider.ts",
      "children": [
        {
          "id": 349,
          "name": "NbEmailPassAuthProvider",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "The most common authentication provider for email/password strategy.",
            "tags": [
              {
                "tag": "example",
                "text": "\n\nDefault settings object:\n\n```\n{\n baseEndpoint: '',\n login: {\n   alwaysFail: false,\n   rememberMe: true,\n   endpoint: '/api/auth/login',\n   method: 'post',\n   redirect: {\n     success: '/',\n     failure: null,\n   },\n   defaultErrors: ['Login/Email combination is not correct, please try again.'],\n   defaultMessages: ['You have been successfully logged in.'],\n },\n register: {\n   alwaysFail: false,\n   rememberMe: true,\n   endpoint: '/api/auth/register',\n   method: 'post',\n   redirect: {\n     success: '/',\n     failure: null,\n   },\n   defaultErrors: ['Something went wrong, please try again.'],\n   defaultMessages: ['You have been successfully registered.'],\n },\n logout: {\n   alwaysFail: false,\n   endpoint: '/api/auth/logout',\n   method: 'delete',\n   redirect: {\n     success: '/',\n     failure: null,\n   },\n   defaultErrors: ['Something went wrong, please try again.'],\n   defaultMessages: ['You have been successfully logged out.'],\n },\n requestPass: {\n   endpoint: '/api/auth/request-pass',\n   method: 'post',\n   redirect: {\n     success: '/',\n     failure: null,\n   },\n   defaultErrors: ['Something went wrong, please try again.'],\n   defaultMessages: ['Reset password instructions have been sent to your email.'],\n },\n resetPass: {\n   endpoint: '/api/auth/reset-pass',\n   method: 'put',\n   redirect: {\n     success: '/',\n     failure: null,\n   },\n   resetPasswordTokenKey: 'reset_password_token',\n   defaultErrors: ['Something went wrong, please try again.'],\n   defaultMessages: ['Your password has been successfully changed.'],\n },\n token: {\n   key: 'data.token',\n   getter: (module: string, res: HttpResponse<Object>) => getDeepFromObject(res.body,\n     this.getConfigValue('token.key')),\n },\n errors: {\n   key: 'data.errors',\n   getter: (module: string, res: HttpErrorResponse) => getDeepFromObject(res.error,\n     this.getConfigValue('errors.key'),\n     this.getConfigValue(`${module}.defaultErrors`)),\n },\n messages: {\n   key: 'data.messages',\n   getter: (module: string, res: HttpResponse<Object>) => getDeepFromObject(res.body,\n     this.getConfigValue('messages.key'),\n     this.getConfigValue(`${module}.defaultMessages`)),\n },\n}\n\n// Note, there is no need to copy over the whole object to change the settings you need.\n// Also, this.getConfigValue call won't work outside ofthe default config declaration\n// (which is inside of the `NbEmailPassAuthProvider` class), so you have to replace it with a custom helper function\n// if you need it.\n```\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 416,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 419,
                  "name": "new NbEmailPassAuthProvider",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 420,
                      "name": "http",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "HttpClient"
                      }
                    },
                    {
                      "id": 421,
                      "name": "route",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "ActivatedRoute"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbEmailPassAuthProvider",
                    "id": 349
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.provider.ts",
                  "line": 188,
                  "character": 4
                }
              ]
            },
            {
              "id": 439,
              "name": "config",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 10,
                  "character": 18
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.config",
                "id": 32
              }
            },
            {
              "id": 417,
              "name": "http",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.provider.ts",
                  "line": 190,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "HttpClient"
              }
            },
            {
              "id": 418,
              "name": "route",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.provider.ts",
                  "line": 190,
                  "character": 55
                }
              ],
              "type": {
                "type": "reference",
                "name": "ActivatedRoute"
              }
            },
            {
              "id": 422,
              "name": "authenticate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 423,
                  "name": "authenticate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 424,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.authenticate",
                    "id": 39
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.provider.ts",
                  "line": 194,
                  "character": 14
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.authenticate",
                "id": 39
              }
            },
            {
              "id": 446,
              "name": "createFailResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 447,
                  "name": "createFailResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 448,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "HttpResponse",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Object"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.createFailResponse",
                    "id": 53
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 30,
                  "character": 30
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.createFailResponse",
                "id": 53
              }
            },
            {
              "id": 449,
              "name": "createSuccessResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 450,
                  "name": "createSuccessResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 451,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "HttpResponse",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "Object"
                      }
                    ]
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.createSuccessResponse",
                    "id": 56
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 34,
                  "character": 33
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.createSuccessResponse",
                "id": 56
              }
            },
            {
              "id": 436,
              "name": "getActionEndpoint",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 437,
                  "name": "getActionEndpoint",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 438,
                      "name": "action",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.provider.ts",
                  "line": 392,
                  "character": 29
                }
              ]
            },
            {
              "id": 443,
              "name": "getConfigValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 444,
                  "name": "getConfigValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 445,
                      "name": "key",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.getConfigValue",
                    "id": 36
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 16,
                  "character": 16
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.getConfigValue",
                "id": 36
              }
            },
            {
              "id": 452,
              "name": "getJsonSafe",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 453,
                  "name": "getJsonSafe",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 454,
                      "name": "res",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "HttpResponse",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "name": "Object"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.getJsonSafe",
                    "id": 59
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 38,
                  "character": 23
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.getJsonSafe",
                "id": 59
              }
            },
            {
              "id": 434,
              "name": "logout",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 435,
                  "name": "logout",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.logout",
                    "id": 51
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.provider.ts",
                  "line": 347,
                  "character": 8
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.logout",
                "id": 51
              }
            },
            {
              "id": 425,
              "name": "register",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 426,
                  "name": "register",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 427,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.register",
                    "id": 42
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.provider.ts",
                  "line": 232,
                  "character": 10
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.register",
                "id": 42
              }
            },
            {
              "id": 428,
              "name": "requestPassword",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 429,
                  "name": "requestPassword",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 430,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.requestPassword",
                    "id": 45
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.provider.ts",
                  "line": 270,
                  "character": 17
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.requestPassword",
                "id": 45
              }
            },
            {
              "id": 431,
              "name": "resetPassword",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 432,
                  "name": "resetPassword",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 433,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      },
                      "defaultValue": " {}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  },
                  "overwrites": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.resetPassword",
                    "id": 48
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.provider.ts",
                  "line": 307,
                  "character": 15
                }
              ],
              "overwrites": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.resetPassword",
                "id": 48
              }
            },
            {
              "id": 440,
              "name": "setConfig",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 441,
                  "name": "setConfig",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 442,
                      "name": "config",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider.setConfig",
                    "id": 33
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/abstract-auth.provider.ts",
                  "line": 12,
                  "character": 11
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.setConfig",
                "id": 33
              }
            },
            {
              "id": 350,
              "name": "defaultConfig",
              "kind": 2097152,
              "kindString": "Object literal",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "children": [
                {
                  "id": 351,
                  "name": "baseEndpoint",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.provider.ts",
                      "line": 114,
                      "character": 16
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"\""
                },
                {
                  "id": 404,
                  "name": "errors",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 405,
                      "name": "key",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 177,
                          "character": 9
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"data.errors\""
                    },
                    {
                      "id": 406,
                      "name": "getter",
                      "kind": 64,
                      "kindString": "Function",
                      "flags": {
                        "isExported": true
                      },
                      "signatures": [
                        {
                          "id": 407,
                          "name": "getter",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 408,
                              "name": "module",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 409,
                              "name": "res",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "name": "HttpErrorResponse"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 178,
                          "character": 12
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        405
                      ]
                    },
                    {
                      "title": "Functions",
                      "kind": 64,
                      "children": [
                        406
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.provider.ts",
                      "line": 176,
                      "character": 10
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 352,
                  "name": "login",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 353,
                      "name": "alwaysFail",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 116,
                          "character": 16
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "defaultValue": "false"
                    },
                    {
                      "id": 360,
                      "name": "defaultErrors",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 124,
                          "character": 19
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      },
                      "defaultValue": " ['Login/Email combination is not correct, please try again.']"
                    },
                    {
                      "id": 361,
                      "name": "defaultMessages",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 125,
                          "character": 21
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      },
                      "defaultValue": " ['You have been successfully logged in.']"
                    },
                    {
                      "id": 355,
                      "name": "endpoint",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 118,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"/api/auth/login\""
                    },
                    {
                      "id": 356,
                      "name": "method",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 119,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"post\""
                    },
                    {
                      "id": 354,
                      "name": "rememberMe",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 117,
                          "character": 16
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "defaultValue": "true"
                    },
                    {
                      "id": 357,
                      "name": "redirect",
                      "kind": 2097152,
                      "kindString": "Object literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 359,
                          "name": "failure",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.provider.ts",
                              "line": 122,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "null"
                          },
                          "defaultValue": " null"
                        },
                        {
                          "id": 358,
                          "name": "success",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.provider.ts",
                              "line": 121,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "defaultValue": "\"/\""
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            359,
                            358
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 120,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        353,
                        360,
                        361,
                        355,
                        356,
                        354
                      ]
                    },
                    {
                      "title": "Object literals",
                      "kind": 2097152,
                      "children": [
                        357
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.provider.ts",
                      "line": 115,
                      "character": 9
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 372,
                  "name": "logout",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 373,
                      "name": "alwaysFail",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 140,
                          "character": 16
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "defaultValue": "false"
                    },
                    {
                      "id": 379,
                      "name": "defaultErrors",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 147,
                          "character": 19
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      },
                      "defaultValue": " ['Something went wrong, please try again.']"
                    },
                    {
                      "id": 380,
                      "name": "defaultMessages",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 148,
                          "character": 21
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      },
                      "defaultValue": " ['You have been successfully logged out.']"
                    },
                    {
                      "id": 374,
                      "name": "endpoint",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 141,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"/api/auth/logout\""
                    },
                    {
                      "id": 375,
                      "name": "method",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 142,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"delete\""
                    },
                    {
                      "id": 376,
                      "name": "redirect",
                      "kind": 2097152,
                      "kindString": "Object literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 378,
                          "name": "failure",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.provider.ts",
                              "line": 145,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "null"
                          },
                          "defaultValue": " null"
                        },
                        {
                          "id": 377,
                          "name": "success",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.provider.ts",
                              "line": 144,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "defaultValue": "\"/\""
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            378,
                            377
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 143,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        373,
                        379,
                        380,
                        374,
                        375
                      ]
                    },
                    {
                      "title": "Object literals",
                      "kind": 2097152,
                      "children": [
                        376
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.provider.ts",
                      "line": 139,
                      "character": 10
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 410,
                  "name": "messages",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 411,
                      "name": "key",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 183,
                          "character": 9
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"data.messages\""
                    },
                    {
                      "id": 412,
                      "name": "getter",
                      "kind": 64,
                      "kindString": "Function",
                      "flags": {
                        "isExported": true
                      },
                      "signatures": [
                        {
                          "id": 413,
                          "name": "getter",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 414,
                              "name": "module",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 415,
                              "name": "res",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "name": "HttpResponse",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "name": "Object"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 184,
                          "character": 12
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        411
                      ]
                    },
                    {
                      "title": "Functions",
                      "kind": 64,
                      "children": [
                        412
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.provider.ts",
                      "line": 182,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 362,
                  "name": "register",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 363,
                      "name": "alwaysFail",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 128,
                          "character": 16
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "defaultValue": "false"
                    },
                    {
                      "id": 370,
                      "name": "defaultErrors",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 136,
                          "character": 19
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      },
                      "defaultValue": " ['Something went wrong, please try again.']"
                    },
                    {
                      "id": 371,
                      "name": "defaultMessages",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 137,
                          "character": 21
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      },
                      "defaultValue": " ['You have been successfully registered.']"
                    },
                    {
                      "id": 365,
                      "name": "endpoint",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 130,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"/api/auth/register\""
                    },
                    {
                      "id": 366,
                      "name": "method",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 131,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"post\""
                    },
                    {
                      "id": 364,
                      "name": "rememberMe",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 129,
                          "character": 16
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "defaultValue": "true"
                    },
                    {
                      "id": 367,
                      "name": "redirect",
                      "kind": 2097152,
                      "kindString": "Object literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 369,
                          "name": "failure",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.provider.ts",
                              "line": 134,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "null"
                          },
                          "defaultValue": " null"
                        },
                        {
                          "id": 368,
                          "name": "success",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.provider.ts",
                              "line": 133,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "defaultValue": "\"/\""
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            369,
                            368
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 132,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        363,
                        370,
                        371,
                        365,
                        366,
                        364
                      ]
                    },
                    {
                      "title": "Object literals",
                      "kind": 2097152,
                      "children": [
                        367
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.provider.ts",
                      "line": 127,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 381,
                  "name": "requestPass",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 387,
                      "name": "defaultErrors",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 157,
                          "character": 19
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      },
                      "defaultValue": " ['Something went wrong, please try again.']"
                    },
                    {
                      "id": 388,
                      "name": "defaultMessages",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 158,
                          "character": 21
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      },
                      "defaultValue": " ['Reset password instructions have been sent to your email.']"
                    },
                    {
                      "id": 382,
                      "name": "endpoint",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 151,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"/api/auth/request-pass\""
                    },
                    {
                      "id": 383,
                      "name": "method",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 152,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"post\""
                    },
                    {
                      "id": 384,
                      "name": "redirect",
                      "kind": 2097152,
                      "kindString": "Object literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 386,
                          "name": "failure",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.provider.ts",
                              "line": 155,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "null"
                          },
                          "defaultValue": " null"
                        },
                        {
                          "id": 385,
                          "name": "success",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.provider.ts",
                              "line": 154,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "defaultValue": "\"/\""
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            386,
                            385
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 153,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        387,
                        388,
                        382,
                        383
                      ]
                    },
                    {
                      "title": "Object literals",
                      "kind": 2097152,
                      "children": [
                        384
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.provider.ts",
                      "line": 150,
                      "character": 15
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 389,
                  "name": "resetPass",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 396,
                      "name": "defaultErrors",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 168,
                          "character": 19
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      },
                      "defaultValue": " ['Something went wrong, please try again.']"
                    },
                    {
                      "id": 397,
                      "name": "defaultMessages",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 169,
                          "character": 21
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      },
                      "defaultValue": " ['Your password has been successfully changed.']"
                    },
                    {
                      "id": 390,
                      "name": "endpoint",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 161,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"/api/auth/reset-pass\""
                    },
                    {
                      "id": 391,
                      "name": "method",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 162,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"put\""
                    },
                    {
                      "id": 395,
                      "name": "resetPasswordTokenKey",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 167,
                          "character": 27
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"reset_password_token\""
                    },
                    {
                      "id": 392,
                      "name": "redirect",
                      "kind": 2097152,
                      "kindString": "Object literal",
                      "flags": {
                        "isExported": true
                      },
                      "children": [
                        {
                          "id": 394,
                          "name": "failure",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.provider.ts",
                              "line": 165,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "null"
                          },
                          "defaultValue": " null"
                        },
                        {
                          "id": 393,
                          "name": "success",
                          "kind": 32,
                          "kindString": "Variable",
                          "flags": {
                            "isExported": true
                          },
                          "sources": [
                            {
                              "fileName": "auth/providers/email-pass-auth.provider.ts",
                              "line": 164,
                              "character": 15
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "defaultValue": "\"/\""
                        }
                      ],
                      "groups": [
                        {
                          "title": "Variables",
                          "kind": 32,
                          "children": [
                            394,
                            393
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 163,
                          "character": 14
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        396,
                        397,
                        390,
                        391,
                        395
                      ]
                    },
                    {
                      "title": "Object literals",
                      "kind": 2097152,
                      "children": [
                        392
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.provider.ts",
                      "line": 160,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                },
                {
                  "id": 398,
                  "name": "token",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 399,
                      "name": "key",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 172,
                          "character": 9
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"data.token\""
                    },
                    {
                      "id": 400,
                      "name": "getter",
                      "kind": 64,
                      "kindString": "Function",
                      "flags": {
                        "isExported": true
                      },
                      "signatures": [
                        {
                          "id": 401,
                          "name": "getter",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 402,
                              "name": "module",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 403,
                              "name": "res",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "name": "HttpResponse",
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "name": "Object"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/providers/email-pass-auth.provider.ts",
                          "line": 173,
                          "character": 12
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        399
                      ]
                    },
                    {
                      "title": "Functions",
                      "kind": 64,
                      "children": [
                        400
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/providers/email-pass-auth.provider.ts",
                      "line": 171,
                      "character": 9
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Variables",
                  "kind": 32,
                  "children": [
                    351
                  ]
                },
                {
                  "title": "Object literals",
                  "kind": 2097152,
                  "children": [
                    404,
                    352,
                    372,
                    410,
                    362,
                    381,
                    389,
                    398
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "auth/providers/email-pass-auth.provider.ts",
                  "line": 113,
                  "character": 25
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "object"
              },
              "overwrites": {
                "type": "reference",
                "name": "NbAbstractAuthProvider.defaultConfig",
                "id": 31
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                416
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                439,
                417,
                418
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                422,
                446,
                449,
                436,
                443,
                452,
                434,
                425,
                428,
                431,
                440
              ]
            },
            {
              "title": "Object literals",
              "kind": 2097152,
              "children": [
                350
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/providers/email-pass-auth.provider.ts",
              "line": 111,
              "character": 36
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "name": "NbAbstractAuthProvider",
              "id": 30
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            349
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/providers/email-pass-auth.provider.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 621,
      "name": "\"auth/providers/index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/providers/index.ts",
      "sources": [
        {
          "fileName": "auth/providers/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 172,
      "name": "\"auth/services/auth.service\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/services/auth.service.ts",
      "children": [
        {
          "id": 173,
          "name": "NbAuthResult",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 177,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 181,
                  "name": "new NbAuthResult",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 182,
                      "name": "success",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 183,
                      "name": "response",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 184,
                      "name": "redirect",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 185,
                      "name": "errors",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 186,
                      "name": "messages",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 187,
                      "name": "token",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "NbAuthSimpleToken",
                        "id": 117
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbAuthResult",
                    "id": 173
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 21,
                  "character": 36
                }
              ]
            },
            {
              "id": 175,
              "name": "errors",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 20,
                  "character": 18
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 176,
              "name": "messages",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 21,
                  "character": 20
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 180,
              "name": "redirect",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 26,
                  "character": 22
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 179,
              "name": "response",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 25,
                  "character": 22
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 178,
              "name": "success",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 24,
                  "character": 31
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 174,
              "name": "token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 19,
                  "character": 17
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 197,
              "name": "getErrors",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 198,
                  "name": "getErrors",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 60,
                  "character": 11
                }
              ]
            },
            {
              "id": 199,
              "name": "getMessages",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 200,
                  "name": "getMessages",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 64,
                  "character": 13
                }
              ]
            },
            {
              "id": 195,
              "name": "getRedirect",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 196,
                  "name": "getRedirect",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 56,
                  "character": 13
                }
              ]
            },
            {
              "id": 188,
              "name": "getResponse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 189,
                  "name": "getResponse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 44,
                  "character": 13
                }
              ]
            },
            {
              "id": 190,
              "name": "getTokenValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 191,
                  "name": "getTokenValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 48,
                  "character": 15
                }
              ]
            },
            {
              "id": 203,
              "name": "isFailure",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 204,
                  "name": "isFailure",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 72,
                  "character": 11
                }
              ]
            },
            {
              "id": 201,
              "name": "isSuccess",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 202,
                  "name": "isSuccess",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 68,
                  "character": 11
                }
              ]
            },
            {
              "id": 192,
              "name": "replaceToken",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 193,
                  "name": "replaceToken",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 194,
                      "name": "token",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbAuthSimpleToken",
                        "id": 117
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 52,
                  "character": 14
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                177
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                175,
                176,
                180,
                179,
                178,
                174
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                197,
                199,
                195,
                188,
                190,
                203,
                201,
                192
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/services/auth.service.ts",
              "line": 17,
              "character": 25
            }
          ]
        },
        {
          "id": 205,
          "name": "NbAuthService",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Common authentication service.\nShould be used to as an interlayer between UI Components and Auth Providers."
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 206,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 211,
                  "name": "new NbAuthService",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 212,
                      "name": "tokenService",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbTokenService",
                        "id": 135
                      }
                    },
                    {
                      "id": 213,
                      "name": "injector",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Injector"
                      }
                    },
                    {
                      "id": 214,
                      "name": "providers",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "decorators": [
                        {
                          "name": "Optional",
                          "type": {
                            "type": "reference",
                            "name": "Optional"
                          },
                          "arguments": {}
                        },
                        {
                          "name": "Inject",
                          "type": {
                            "type": "reference",
                            "name": "Inject"
                          },
                          "arguments": {
                            "token": "NB_AUTH_PROVIDERS_TOKEN"
                          }
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 215,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {}
                        }
                      },
                      "defaultValue": " {}"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbAuthService",
                    "id": 205
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 82,
                  "character": 28
                }
              ]
            },
            {
              "id": 208,
              "name": "injector",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 85,
                  "character": 32
                }
              ],
              "type": {
                "type": "reference",
                "name": "Injector"
              }
            },
            {
              "id": 209,
              "name": "providers",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "decorators": [
                {
                  "name": "Optional",
                  "type": {
                    "type": "reference",
                    "name": "Optional"
                  },
                  "arguments": {}
                },
                {
                  "name": "Inject",
                  "type": {
                    "type": "reference",
                    "name": "Inject"
                  },
                  "arguments": {
                    "token": "NB_AUTH_PROVIDERS_TOKEN"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 86,
                  "character": 78
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 210,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {}
                }
              }
            },
            {
              "id": 207,
              "name": "tokenService",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 84,
                  "character": 36
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbTokenService",
                "id": 135
              }
            },
            {
              "id": 224,
              "name": "authenticate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 225,
                  "name": "authenticate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Authenticates with the selected provider\nStores received token in the token storage",
                    "text": "Example:\nauthenticate('email', {email: 'email@example.com', password: 'test'})\n",
                    "returns": "\n"
                  },
                  "parameters": [
                    {
                      "id": 226,
                      "name": "provider",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 227,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 134,
                  "character": 14
                }
              ]
            },
            {
              "id": 243,
              "name": "getProvider",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 244,
                  "name": "getProvider",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 245,
                      "name": "provider",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbAbstractAuthProvider",
                    "id": 30
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 224,
                  "character": 13
                }
              ]
            },
            {
              "id": 216,
              "name": "getToken",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 217,
                  "name": "getToken",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Retrieves current authenticated token stored",
                    "returns": "\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthSimpleToken",
                        "id": 117
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 93,
                  "character": 10
                }
              ]
            },
            {
              "id": 218,
              "name": "isAuthenticated",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 219,
                  "name": "isAuthenticated",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns true if auth token is presented in the token storage\n// TODO: check exp date for JWT token",
                    "returns": "\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 102,
                  "character": 17
                }
              ]
            },
            {
              "id": 232,
              "name": "logout",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 233,
                  "name": "logout",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sign outs with the selected provider\nRemoves token from the token storage",
                    "text": "Example:\nlogout('email')\n",
                    "returns": "\n"
                  },
                  "parameters": [
                    {
                      "id": 234,
                      "name": "provider",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 187,
                  "character": 8
                }
              ]
            },
            {
              "id": 222,
              "name": "onAuthenticationChange",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 223,
                  "name": "onAuthenticationChange",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns authentication status stream\n // TODO: check exp date for JWT token",
                    "returns": "\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 119,
                  "character": 24
                }
              ]
            },
            {
              "id": 220,
              "name": "onTokenChange",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 221,
                  "name": "onTokenChange",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns tokens stream",
                    "returns": "\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthSimpleToken",
                        "id": 117
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 110,
                  "character": 15
                }
              ]
            },
            {
              "id": 228,
              "name": "register",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 229,
                  "name": "register",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Registers with the selected provider\nStores received token in the token storage",
                    "text": "Example:\nregister('email', {email: 'email@example.com', name: 'Some Name', password: 'test'})\n",
                    "returns": "\n"
                  },
                  "parameters": [
                    {
                      "id": 230,
                      "name": "provider",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 231,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 161,
                  "character": 10
                }
              ]
            },
            {
              "id": 235,
              "name": "requestPassword",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 236,
                  "name": "requestPassword",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sends forgot password request to the selected provider",
                    "text": "Example:\nrequestPassword('email', {email: 'email@example.com'})\n",
                    "returns": "\n"
                  },
                  "parameters": [
                    {
                      "id": 237,
                      "name": "provider",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 238,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 206,
                  "character": 17
                }
              ]
            },
            {
              "id": 239,
              "name": "resetPassword",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 240,
                  "name": "resetPassword",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Tries to reset password with the selected provider",
                    "text": "Example:\nresetPassword('email', {newPassword: 'test'})\n",
                    "returns": "\n"
                  },
                  "parameters": [
                    {
                      "id": 241,
                      "name": "provider",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 242,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthResult",
                        "id": 173
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/auth.service.ts",
                  "line": 220,
                  "character": 15
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                206
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                208,
                209,
                207
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                224,
                243,
                216,
                218,
                232,
                222,
                220,
                228,
                235,
                239
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/services/auth.service.ts",
              "line": 82,
              "character": 26
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            173,
            205
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/services/auth.service.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 620,
      "name": "\"auth/services/index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/services/index.ts",
      "sources": [
        {
          "fileName": "auth/services/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 594,
      "name": "\"auth/services/interceptors/jwt-interceptor\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/services/interceptors/jwt-interceptor.ts",
      "children": [
        {
          "id": 595,
          "name": "NbAuthJWTInterceptor",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 596,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 598,
                  "name": "new NbAuthJWTInterceptor",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 599,
                      "name": "injector",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Injector"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbAuthJWTInterceptor",
                    "id": 595
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/interceptors/jwt-interceptor.ts",
                  "line": 10,
                  "character": 62
                }
              ]
            },
            {
              "id": 597,
              "name": "injector",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/services/interceptors/jwt-interceptor.ts",
                  "line": 12,
                  "character": 30
                }
              ],
              "type": {
                "type": "reference",
                "name": "Injector"
              }
            },
            {
              "id": 604,
              "name": "authService",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "getSignature": [
                {
                  "id": 605,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "NbAuthService",
                    "id": 205
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/interceptors/jwt-interceptor.ts",
                  "line": 31,
                  "character": 27
                }
              ]
            },
            {
              "id": 600,
              "name": "intercept",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 601,
                  "name": "intercept",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 602,
                      "name": "req",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "HttpRequest",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ]
                      }
                    },
                    {
                      "id": 603,
                      "name": "next",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "HttpHandler"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HttpEvent",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/interceptors/jwt-interceptor.ts",
                  "line": 15,
                  "character": 11
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                596
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                597
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                604
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                600
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/services/interceptors/jwt-interceptor.ts",
              "line": 10,
              "character": 33
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "name": "HttpInterceptor"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            595
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/services/interceptors/jwt-interceptor.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 606,
      "name": "\"auth/services/interceptors/simple-interceptor\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/services/interceptors/simple-interceptor.ts",
      "children": [
        {
          "id": 607,
          "name": "NbAuthSimpleInterceptor",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 608,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 611,
                  "name": "new NbAuthSimpleInterceptor",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 612,
                      "name": "injector",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Injector"
                      }
                    },
                    {
                      "id": 613,
                      "name": "headerName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "decorators": [
                        {
                          "name": "Inject",
                          "type": {
                            "type": "reference",
                            "name": "Inject"
                          },
                          "arguments": {
                            "token": "NB_AUTH_INTERCEPTOR_HEADER"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"Authorization\""
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbAuthSimpleInterceptor",
                    "id": 607
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/interceptors/simple-interceptor.ts",
                  "line": 11,
                  "character": 65
                }
              ]
            },
            {
              "id": 610,
              "name": "headerName",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "decorators": [
                {
                  "name": "Inject",
                  "type": {
                    "type": "reference",
                    "name": "Inject"
                  },
                  "arguments": {
                    "token": "NB_AUTH_INTERCEPTOR_HEADER"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/interceptors/simple-interceptor.ts",
                  "line": 14,
                  "character": 70
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 609,
              "name": "injector",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "auth/services/interceptors/simple-interceptor.ts",
                  "line": 13,
                  "character": 30
                }
              ],
              "type": {
                "type": "reference",
                "name": "Injector"
              }
            },
            {
              "id": 618,
              "name": "authService",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "getSignature": [
                {
                  "id": 619,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "NbAuthService",
                    "id": 205
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/interceptors/simple-interceptor.ts",
                  "line": 32,
                  "character": 27
                }
              ]
            },
            {
              "id": 614,
              "name": "intercept",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 615,
                  "name": "intercept",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 616,
                      "name": "req",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "HttpRequest",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ]
                      }
                    },
                    {
                      "id": 617,
                      "name": "next",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "HttpHandler"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HttpEvent",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/interceptors/simple-interceptor.ts",
                  "line": 17,
                  "character": 11
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                608
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                610,
                609
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                618
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                614
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/services/interceptors/simple-interceptor.ts",
              "line": 11,
              "character": 36
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "name": "HttpInterceptor"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            607
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/services/interceptors/simple-interceptor.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 116,
      "name": "\"auth/services/token.service\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/auth/services/token.service.ts",
      "children": [
        {
          "id": 124,
          "name": "NbAuthJWTToken",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Wrapper for JWT token with additional methods."
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 129,
              "name": "token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 18,
                  "character": 17
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"\"",
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAuthSimpleToken.token",
                "id": 118
              }
            },
            {
              "id": 125,
              "name": "getPayload",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 126,
                  "name": "getPayload",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "TODO: check for this.token to be not null\nReturns payload object",
                    "returns": "any\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 44,
                  "character": 12
                }
              ]
            },
            {
              "id": 127,
              "name": "getTokenExpDate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 128,
                  "name": "getTokenExpDate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns expiration date",
                    "returns": "Date\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Date"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 63,
                  "character": 17
                }
              ]
            },
            {
              "id": 133,
              "name": "getValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 134,
                  "name": "getValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns the token value",
                    "returns": "string\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "NbAuthSimpleToken.getValue",
                    "id": 122
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 28,
                  "character": 10
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAuthSimpleToken.getValue",
                "id": 122
              }
            },
            {
              "id": 130,
              "name": "setValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 131,
                  "name": "setValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 132,
                      "name": "token",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "name": "NbAuthSimpleToken.setValue",
                    "id": 119
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 20,
                  "character": 10
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "name": "NbAuthSimpleToken.setValue",
                "id": 119
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                129
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                125,
                127,
                133,
                130
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/services/token.service.ts",
              "line": 37,
              "character": 27
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "name": "NbAuthSimpleToken",
              "id": 117
            }
          ]
        },
        {
          "id": 117,
          "name": "NbAuthSimpleToken",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Wrapper for simple (text) token"
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 118,
              "name": "token",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 18,
                  "character": 17
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"\""
            },
            {
              "id": 122,
              "name": "getValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 123,
                  "name": "getValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns the token value",
                    "returns": "string\n"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 28,
                  "character": 10
                }
              ]
            },
            {
              "id": 119,
              "name": "setValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 120,
                  "name": "setValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 121,
                      "name": "token",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 20,
                  "character": 10
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                118
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                122,
                119
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/services/token.service.ts",
              "line": 16,
              "character": 30
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "name": "NbAuthJWTToken",
              "id": 124
            }
          ]
        },
        {
          "id": 135,
          "name": "NbTokenService",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Nebular token service. Provides access to the stored token.\nBy default returns NbAuthSimpleToken instance,\nbut you can inject NbAuthJWTToken if you need additional methods for JWT token.",
            "tags": [
              {
                "tag": "example",
                "text": "Injecting NbAuthJWTToken, so that NbTokenService will now return NbAuthJWTToken instead\nof the default NbAuthSimpleToken\n\n```\n// import token and service into your AppModule\nimport { NB_AUTH_TOKEN_WRAPPER_TOKEN,  NbAuthJWTToken} from '@nebular/auth';\n\n// add to a list of providers\nproviders: [\n // ...\n { provide: NB_AUTH_TOKEN_WRAPPER_TOKEN, useClass: NbAuthJWTToken },\n],\n```\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 148,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 151,
                  "name": "new NbTokenService",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 152,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "decorators": [
                        {
                          "name": "Inject",
                          "type": {
                            "type": "reference",
                            "name": "Inject"
                          },
                          "arguments": {
                            "token": "NB_AUTH_OPTIONS_TOKEN"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 153,
                      "name": "tokenWrapper",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "decorators": [
                        {
                          "name": "Inject",
                          "type": {
                            "type": "reference",
                            "name": "Inject"
                          },
                          "arguments": {
                            "token": "NB_AUTH_TOKEN_WRAPPER_TOKEN"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "NbAuthSimpleToken",
                        "id": 117
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbTokenService",
                    "id": 135
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 121,
                  "character": 69
                }
              ]
            },
            {
              "id": 146,
              "name": "config",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 120,
                  "character": 18
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 149,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "decorators": [
                {
                  "name": "Inject",
                  "type": {
                    "type": "reference",
                    "name": "Inject"
                  },
                  "arguments": {
                    "token": "NB_AUTH_OPTIONS_TOKEN"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 123,
                  "character": 62
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 147,
              "name": "token$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 121,
                  "character": 18
                }
              ],
              "type": {
                "type": "reference",
                "name": "BehaviorSubject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ]
              },
              "defaultValue": " new BehaviorSubject(null)"
            },
            {
              "id": 150,
              "name": "tokenWrapper",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "decorators": [
                {
                  "name": "Inject",
                  "type": {
                    "type": "reference",
                    "name": "Inject"
                  },
                  "arguments": {
                    "token": "NB_AUTH_TOKEN_WRAPPER_TOKEN"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 124,
                  "character": 73
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbAuthSimpleToken",
                "id": 117
              }
            },
            {
              "id": 167,
              "name": "clear",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 168,
                  "name": "clear",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Removes the token",
                    "returns": "\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 171,
                  "character": 7
                }
              ]
            },
            {
              "id": 163,
              "name": "get",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 164,
                  "name": "get",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns observable of current token",
                    "returns": "\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthSimpleToken",
                        "id": 117
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 155,
                  "character": 5
                }
              ]
            },
            {
              "id": 157,
              "name": "getConfigValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 158,
                  "name": "getConfigValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 159,
                      "name": "key",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 134,
                  "character": 16
                }
              ]
            },
            {
              "id": 169,
              "name": "publishToken",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 170,
                  "name": "publishToken",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 171,
                      "name": "token",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbAuthSimpleToken",
                        "id": 117
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 177,
                  "character": 24
                }
              ]
            },
            {
              "id": 160,
              "name": "set",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 161,
                  "name": "set",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Sets the token into the storage. This method is used by the NbAuthService automatically.",
                    "returns": "\n"
                  },
                  "parameters": [
                    {
                      "id": 162,
                      "name": "rawToken",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "null"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 143,
                  "character": 5
                }
              ]
            },
            {
              "id": 154,
              "name": "setConfig",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 155,
                  "name": "setConfig",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 156,
                      "name": "config",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 130,
                  "character": 11
                }
              ]
            },
            {
              "id": 165,
              "name": "tokenChange",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 166,
                  "name": "tokenChange",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Publishes token when it changes.",
                    "returns": "\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbAuthSimpleToken",
                        "id": 117
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 163,
                  "character": 13
                }
              ]
            },
            {
              "id": 136,
              "name": "defaultConfig",
              "kind": 2097152,
              "kindString": "Object literal",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "children": [
                {
                  "id": 137,
                  "name": "token",
                  "kind": 2097152,
                  "kindString": "Object literal",
                  "flags": {
                    "isExported": true
                  },
                  "children": [
                    {
                      "id": 138,
                      "name": "key",
                      "kind": 32,
                      "kindString": "Variable",
                      "flags": {
                        "isExported": true
                      },
                      "sources": [
                        {
                          "fileName": "auth/services/token.service.ts",
                          "line": 100,
                          "character": 9
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "\"auth_app_token\""
                    },
                    {
                      "id": 144,
                      "name": "deleter",
                      "kind": 64,
                      "kindString": "Function",
                      "flags": {
                        "isExported": true
                      },
                      "signatures": [
                        {
                          "id": 145,
                          "name": "deleter",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Observable",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "null"
                              }
                            ]
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/services/token.service.ts",
                          "line": 114,
                          "character": 13
                        }
                      ]
                    },
                    {
                      "id": 139,
                      "name": "getter",
                      "kind": 64,
                      "kindString": "Function",
                      "flags": {
                        "isExported": true
                      },
                      "signatures": [
                        {
                          "id": 140,
                          "name": "getter",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "name": "Observable",
                            "typeArguments": [
                              {
                                "type": "reference",
                                "name": "NbAuthSimpleToken",
                                "id": 117
                              }
                            ]
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/services/token.service.ts",
                          "line": 102,
                          "character": 12
                        }
                      ]
                    },
                    {
                      "id": 141,
                      "name": "setter",
                      "kind": 64,
                      "kindString": "Function",
                      "flags": {
                        "isExported": true
                      },
                      "signatures": [
                        {
                          "id": 142,
                          "name": "setter",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 143,
                              "name": "token",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "reference",
                                    "name": "NbAuthSimpleToken",
                                    "id": 117
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "Observable",
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "null"
                              }
                            ]
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "auth/services/token.service.ts",
                          "line": 108,
                          "character": 12
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Variables",
                      "kind": 32,
                      "children": [
                        138
                      ]
                    },
                    {
                      "title": "Functions",
                      "kind": 64,
                      "children": [
                        144,
                        139,
                        141
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "auth/services/token.service.ts",
                      "line": 99,
                      "character": 9
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "object"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Object literals",
                  "kind": 2097152,
                  "children": [
                    137
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "auth/services/token.service.ts",
                  "line": 98,
                  "character": 25
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "object"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                148
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                146,
                149,
                147,
                150
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                167,
                163,
                157,
                169,
                160,
                154,
                165
              ]
            },
            {
              "title": "Object literals",
              "kind": 2097152,
              "children": [
                136
              ]
            }
          ],
          "sources": [
            {
              "fileName": "auth/services/token.service.ts",
              "line": 96,
              "character": 27
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            124,
            117,
            135
          ]
        }
      ],
      "sources": [
        {
          "fileName": "auth/services/token.service.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1399,
      "name": "\"theme/components/actions/actions.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/actions/actions.component.ts",
      "children": [
        {
          "id": 1400,
          "name": "NbActionComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Action item, display a link with an icon, or any other content provided instead."
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-action',\r\n  template: `\r\n    <a class=\"icon-container\" href=\"#\" *ngIf=\"icon; else showContent\" (click)=\"$event.preventDefault()\">\r\n      <i class=\"control-icon {{ icon }}\"></i>\r\n    </a>\r\n    <ng-template #showContent>\r\n      <ng-content></ng-content>\r\n    </ng-template>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1401,
              "name": "disabledValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.disabled'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 31,
                  "character": 46
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1402,
              "name": "icon",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Icon class to display",
                "tags": [
                  {
                    "tag": "type",
                    "text": "string\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 37,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1403,
              "name": "disabled",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Disables the item (changes item opacity and mouse cursor)",
                "tags": [
                  {
                    "tag": "type",
                    "text": "boolean\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1404,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Disables the item (changes item opacity and mouse cursor)",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "boolean\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1405,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 44,
                  "character": 14
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1401,
                1402
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                1403
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/actions/actions.component.ts",
              "line": 29,
              "character": 30
            }
          ]
        },
        {
          "id": 1406,
          "name": "NbActionsComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Shows a horizontal list of actions, available in multiple sizes\nAligns items vertically.",
            "tags": [
              {
                "tag": "styles",
                "text": "\n\nactions-font-size:\nactions-font-family:\nactions-line-height:\nactions-fg:\nactions-bg:\nactions-separator:\nactions-padding:\nactions-size-small:\nactions-size-medium:\nactions-size-large:\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-actions',\r\n  styleUrls: ['./actions.component.scss'],\r\n  template: `\r\n    <ng-content select=\"nb-action\"></ng-content>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1418,
              "name": "fullWidthValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.full-width'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 99,
                  "character": 24
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1411,
              "name": "inverseValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.inverse'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 81,
                  "character": 44
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1410,
              "name": "sizeValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 79,
                  "character": 19
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1409,
              "name": "SIZE_LARGE",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 77,
                  "character": 28
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "large"
              },
              "defaultValue": "\"large\""
            },
            {
              "id": 1408,
              "name": "SIZE_MEDIUM",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 76,
                  "character": 29
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "medium"
              },
              "defaultValue": "\"medium\""
            },
            {
              "id": 1407,
              "name": "SIZE_SMALL",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 75,
                  "character": 28
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "small"
              },
              "defaultValue": "\"small\""
            },
            {
              "id": 1425,
              "name": "fullWidth",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Component will fill full width of the container",
                "tags": [
                  {
                    "tag": "type",
                    "text": "boolean\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1426,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Component will fill full width of the container",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "boolean\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1427,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 124,
                  "character": 15
                }
              ]
            },
            {
              "id": 1422,
              "name": "inverse",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Makes colors inverse based on current theme",
                "tags": [
                  {
                    "tag": "type",
                    "text": "boolean\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1423,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Makes colors inverse based on current theme",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "boolean\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1424,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 115,
                  "character": 13
                }
              ]
            },
            {
              "id": 1416,
              "name": "large",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.large'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1417,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 94,
                  "character": 11
                }
              ]
            },
            {
              "id": 1414,
              "name": "medium",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.medium'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1415,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 89,
                  "character": 12
                }
              ]
            },
            {
              "id": 1419,
              "name": "size",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Size of the component, small|medium|large",
                "tags": [
                  {
                    "tag": "type",
                    "text": "string\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1420,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Size of the component, small|medium|large",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "string\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1421,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 106,
                  "character": 10
                }
              ]
            },
            {
              "id": 1412,
              "name": "small",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.small'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1413,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/actions/actions.component.ts",
                  "line": 84,
                  "character": 11
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1418,
                1411,
                1410,
                1409,
                1408,
                1407
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                1425,
                1422,
                1416,
                1414,
                1419,
                1412
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/actions/actions.component.ts",
              "line": 73,
              "character": 31
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1400,
            1406
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/actions/actions.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1428,
      "name": "\"theme/components/actions/actions.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/actions/actions.module.ts",
      "children": [
        {
          "id": 1429,
          "name": "NbActionsModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  imports: [\r\n    NbSharedModule,\r\n  ],\r\n  declarations: [\r\n    ...NB_ACTIONS_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...NB_ACTIONS_COMPONENTS,\r\n  ],\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/actions/actions.module.ts",
              "line": 29,
              "character": 28
            }
          ]
        },
        {
          "id": 1430,
          "name": "NB_ACTIONS_COMPONENTS",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/actions/actions.module.ts",
              "line": 13,
              "character": 27
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "Object"
          },
          "defaultValue": " [\r\n  NbActionComponent,\r\n  NbActionsComponent,\r\n]"
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1429
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            1430
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/actions/actions.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 851,
      "name": "\"theme/components/card/card.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/card/card.component.ts",
      "children": [
        {
          "id": 853,
          "name": "NbCardBodyComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Component intended to be used within  the `<nb-card>` component.\nAdds styles for a preset body section."
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-card-body',\r\n  template: `<ng-content></ng-content>`,\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/card/card.component.ts",
              "line": 44,
              "character": 32
            }
          ]
        },
        {
          "id": 855,
          "name": "NbCardComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Basic content container component.",
            "tags": [
              {
                "tag": "example",
                "text": "While this component can be used alone, it also provides a number\nof child components for common card sections:\n```\n<nb-card-header></nb-card-header>\n<nb-card-body></nb-card-body>\n<nb-card-footer></nb-card-footer>\n```\n"
              },
              {
                "tag": "styles",
                "text": "\n\ncard-line-height:\ncard-font-weight:\ncard-fg-text:\ncard-bg:\ncard-height-xxsmall:\ncard-height-xsmall:\ncard-height-small:\ncard-height-medium:\ncard-height-large:\ncard-height-xlarge:\ncard-height-xxlarge:\ncard-shadow:\ncard-border-radius:\ncard-padding:\ncard-margin:\ncard-separator:\n\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-card',\r\n  styleUrls: ['./card.component.scss'],\r\n  template: `\r\n    <ng-content></ng-content>\r\n    <ng-content select=\"nb-card-header\"></ng-content>\r\n    <ng-content select=\"nb-card-body\"></ng-content>\r\n    <ng-content select=\"nb-card-footer\"></ng-content>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 870,
              "name": "size",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 117,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 871,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 118,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 860,
              "name": "SIZE_LARGE",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 105,
                  "character": 28
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "large"
              },
              "defaultValue": "\"large\""
            },
            {
              "id": 859,
              "name": "SIZE_MEDIUM",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 104,
                  "character": 29
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "medium"
              },
              "defaultValue": "\"medium\""
            },
            {
              "id": 858,
              "name": "SIZE_SMALL",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 103,
                  "character": 28
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "small"
              },
              "defaultValue": "\"small\""
            },
            {
              "id": 861,
              "name": "SIZE_XLARGE",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 106,
                  "character": 29
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "xlarge"
              },
              "defaultValue": "\"xlarge\""
            },
            {
              "id": 857,
              "name": "SIZE_XSMALL",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 102,
                  "character": 29
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "xsmall"
              },
              "defaultValue": "\"xsmall\""
            },
            {
              "id": 862,
              "name": "SIZE_XXLARGE",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 107,
                  "character": 30
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "xxlarge"
              },
              "defaultValue": "\"xxlarge\""
            },
            {
              "id": 856,
              "name": "SIZE_XXSMALL",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 101,
                  "character": 30
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "xxsmall"
              },
              "defaultValue": "\"xxsmall\""
            },
            {
              "id": 863,
              "name": "STATUS_ACTIVE",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 109,
                  "character": 31
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "active"
              },
              "defaultValue": "\"active\""
            },
            {
              "id": 869,
              "name": "STATUS_DANGER",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 115,
                  "character": 31
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "danger"
              },
              "defaultValue": "\"danger\""
            },
            {
              "id": 864,
              "name": "STATUS_DISABLED",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 110,
                  "character": 33
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "disabled"
              },
              "defaultValue": "\"disabled\""
            },
            {
              "id": 866,
              "name": "STATUS_INFO",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 112,
                  "character": 29
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "info"
              },
              "defaultValue": "\"info\""
            },
            {
              "id": 865,
              "name": "STATUS_PRIMARY",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 111,
                  "character": 32
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "primary"
              },
              "defaultValue": "\"primary\""
            },
            {
              "id": 867,
              "name": "STATUS_SUCCESS",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 113,
                  "character": 32
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "success"
              },
              "defaultValue": "\"success\""
            },
            {
              "id": 868,
              "name": "STATUS_WARNING",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 114,
                  "character": 32
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "warning"
              },
              "defaultValue": "\"warning\""
            },
            {
              "id": 886,
              "name": "active",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.active-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 887,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 156,
                  "character": 20
                }
              ]
            },
            {
              "id": 898,
              "name": "danger",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.danger-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 899,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 186,
                  "character": 20
                }
              ]
            },
            {
              "id": 888,
              "name": "disabled",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.disabled-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 889,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 161,
                  "character": 22
                }
              ]
            },
            {
              "id": 892,
              "name": "info",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.info-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 893,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 171,
                  "character": 18
                }
              ]
            },
            {
              "id": 880,
              "name": "large",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.large-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 881,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 141,
                  "character": 19
                }
              ]
            },
            {
              "id": 878,
              "name": "medium",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.medium-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 879,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 136,
                  "character": 20
                }
              ]
            },
            {
              "id": 890,
              "name": "primary",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.primary-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 891,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 166,
                  "character": 21
                }
              ]
            },
            {
              "id": 900,
              "name": "setSize",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "comment": {
                "shortText": "Card size, available sizes:\nxxsmall, xsmall, small, medium, large, xlarge, xxlarge"
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {
                    "bindingPropertyName": "'size'"
                  }
                }
              ],
              "setSignature": [
                {
                  "id": 901,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Card size, available sizes:\nxxsmall, xsmall, small, medium, large, xlarge, xxlarge"
                  },
                  "parameters": [
                    {
                      "id": 902,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 196,
                  "character": 21
                }
              ]
            },
            {
              "id": 903,
              "name": "setStatus",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "comment": {
                "shortText": "Card status (adds specific styles):\nactive, disabled, primary, info, success, warning, danger"
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {
                    "bindingPropertyName": "'status'"
                  }
                }
              ],
              "setSignature": [
                {
                  "id": 904,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Card status (adds specific styles):\nactive, disabled, primary, info, success, warning, danger"
                  },
                  "parameters": [
                    {
                      "id": 905,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 206,
                  "character": 23
                }
              ]
            },
            {
              "id": 876,
              "name": "small",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.small-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 877,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 131,
                  "character": 19
                }
              ]
            },
            {
              "id": 894,
              "name": "success",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.success-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 895,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 176,
                  "character": 21
                }
              ]
            },
            {
              "id": 896,
              "name": "warning",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.warning-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 897,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 181,
                  "character": 21
                }
              ]
            },
            {
              "id": 882,
              "name": "xlarge",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.xlarge-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 883,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 146,
                  "character": 20
                }
              ]
            },
            {
              "id": 874,
              "name": "xsmall",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.xsmall-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 875,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 126,
                  "character": 20
                }
              ]
            },
            {
              "id": 884,
              "name": "xxlarge",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.xxlarge-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 885,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 151,
                  "character": 21
                }
              ]
            },
            {
              "id": 872,
              "name": "xxsmall",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.xxsmall-card'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 873,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/card/card.component.ts",
                  "line": 121,
                  "character": 21
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                870,
                871,
                860,
                859,
                858,
                861,
                857,
                862,
                856,
                863,
                869,
                864,
                866,
                865,
                867,
                868
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                886,
                898,
                888,
                892,
                880,
                878,
                890,
                900,
                903,
                876,
                894,
                896,
                882,
                874,
                884,
                872
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/card/card.component.ts",
              "line": 99,
              "character": 28
            }
          ]
        },
        {
          "id": 854,
          "name": "NbCardFooterComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Component intended to be used within  the `<nb-card>` component.\nAdds styles for a preset footer section."
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-card-footer',\r\n  template: `<ng-content></ng-content>`,\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/card/card.component.ts",
              "line": 55,
              "character": 34
            }
          ]
        },
        {
          "id": 852,
          "name": "NbCardHeaderComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Component intended to be used within  the `<nb-card>` component.\nIt adds styles for a preset header section.",
            "tags": [
              {
                "tag": "styles",
                "text": "\n\ncard-header-font-family:\ncard-header-font-size:\ncard-header-font-weight:\ncard-header-fg:\ncard-header-fg-heading:\ncard-header-active-bg:\ncard-header-active-fg:\ncard-header-disabled-bg:\ncard-header-primary-bg:\ncard-header-info-bg:\ncard-header-success-bg:\ncard-header-warning-bg:\ncard-header-danger-bg:\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-card-header',\r\n  template: `<ng-content></ng-content>`,\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/card/card.component.ts",
              "line": 33,
              "character": 34
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            853,
            855,
            854,
            852
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/card/card.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 906,
      "name": "\"theme/components/card/card.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/card/card.module.ts",
      "children": [
        {
          "id": 907,
          "name": "NbCardModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  imports: [\r\n    NbSharedModule,\r\n  ],\r\n  declarations: [\r\n    ...NB_CARD_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...NB_CARD_COMPONENTS,\r\n  ],\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/card/card.module.ts",
              "line": 36,
              "character": 25
            }
          ]
        },
        {
          "id": 908,
          "name": "NB_CARD_COMPONENTS",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/card/card.module.ts",
              "line": 18,
              "character": 24
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "Object"
          },
          "defaultValue": " [\r\n  NbCardComponent,\r\n  NbCardBodyComponent,\r\n  NbCardFooterComponent,\r\n  NbCardHeaderComponent,\r\n]"
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            907
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            908
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/card/card.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1540,
      "name": "\"theme/components/checkbox/checkbox.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/checkbox/checkbox.component.ts",
      "children": [
        {
          "id": 1541,
          "name": "NbCheckboxComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Styled checkbox component",
            "tags": [
              {
                "tag": "example",
                "text": "Basic example\n\n```\n <nb-checkbox [(ngModel)]=\"enabled\">Enabled?</nb-checkbox>\n```\n"
              },
              {
                "tag": "example",
                "text": "Example with status\n\n```\n <nb-checkbox [(ngModel)]=\"enabled\" status=\"danger\">Enabled?</nb-checkbox>\n```\n"
              },
              {
                "tag": "styles",
                "text": "\n\ncheckbox-bg:\ncheckbox-size:\ncheckbox-border-size:\ncheckbox-border-color:\ncheckbox-selected-border-color:\ncheckbox-fg:\nradio-fg:\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-checkbox',\r\n  template: `\r\n    <label class=\"custom-control custom-checkbox\">\r\n      <input type=\"checkbox\" class=\"custom-control-input\"\r\n             [disabled]=\"disabled\"\r\n             [checked]=\"value\"\r\n             (change)=\"value = !value\">\r\n      <span class=\"custom-control-indicator\"></span>\r\n      <span class=\"custom-control-description\">\r\n        <ng-content></ng-content>\r\n      </span>\r\n    </label>\r\n  `,\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => NbCheckboxComponent),\r\n    multi: true,\r\n  }],\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1543,
              "name": "_value",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "comment": {
                "shortText": "Checkbox value",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{boolean}"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {
                    "bindingPropertyName": "'value'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 65,
                  "character": 24
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1544,
              "name": "disabled",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 67,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1542,
              "name": "status",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 58,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1555,
              "name": "danger",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.danger'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1556,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 93,
                  "character": 20
                }
              ]
            },
            {
              "id": 1545,
              "name": "setDisabled",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {
                    "bindingPropertyName": "'disabled'"
                  }
                }
              ],
              "setSignature": [
                {
                  "id": 1546,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1547,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 69,
                  "character": 17
                }
              ]
            },
            {
              "id": 1548,
              "name": "setStatus",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "comment": {
                "shortText": "Checkbox status (success, warning, danger)"
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {
                    "bindingPropertyName": "'status'"
                  }
                }
              ],
              "setSignature": [
                {
                  "id": 1549,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Checkbox status (success, warning, danger)"
                  },
                  "parameters": [
                    {
                      "id": 1550,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 78,
                  "character": 23
                }
              ]
            },
            {
              "id": 1551,
              "name": "success",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.success'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1552,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 83,
                  "character": 21
                }
              ]
            },
            {
              "id": 1561,
              "name": "value",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "getSignature": [
                {
                  "id": 1562,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "setSignature": [
                {
                  "id": 1563,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1564,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 100,
                  "character": 11
                },
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 104,
                  "character": 11
                }
              ]
            },
            {
              "id": 1553,
              "name": "warning",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.warning'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1554,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 88,
                  "character": 21
                }
              ]
            },
            {
              "id": 1557,
              "name": "onChange",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1558,
                  "name": "onChange",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 97,
                  "character": 10
                }
              ]
            },
            {
              "id": 1559,
              "name": "onTouched",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1560,
                  "name": "onTouched",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 98,
                  "character": 11
                }
              ]
            },
            {
              "id": 1565,
              "name": "registerOnChange",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1566,
                  "name": "registerOnChange",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1567,
                      "name": "fn",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 110,
                  "character": 18
                }
              ]
            },
            {
              "id": 1568,
              "name": "registerOnTouched",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1569,
                  "name": "registerOnTouched",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1570,
                      "name": "fn",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 114,
                  "character": 19
                }
              ]
            },
            {
              "id": 1571,
              "name": "writeValue",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1572,
                  "name": "writeValue",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1573,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/checkbox/checkbox.component.ts",
                  "line": 118,
                  "character": 12
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1543,
                1544,
                1542
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                1555,
                1545,
                1548,
                1551,
                1561,
                1553
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1557,
                1559,
                1565,
                1568,
                1571
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/checkbox/checkbox.component.ts",
              "line": 56,
              "character": 32
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "name": "ControlValueAccessor"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1541
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/checkbox/checkbox.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1574,
      "name": "\"theme/components/checkbox/checkbox.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/checkbox/checkbox.module.ts",
      "children": [
        {
          "id": 1575,
          "name": "NbCheckboxModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  imports: [\r\n    NbSharedModule,\r\n  ],\r\n  declarations: [NbCheckboxComponent],\r\n  exports: [NbCheckboxComponent],\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/checkbox/checkbox.module.ts",
              "line": 19,
              "character": 29
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1575
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/checkbox/checkbox.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 909,
      "name": "\"theme/components/helpers\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/helpers.ts",
      "children": [
        {
          "id": 910,
          "name": "convertToBoolProperty",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true
          },
          "signatures": [
            {
              "id": 911,
              "name": "convertToBoolProperty",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "tags": [
                  {
                    "tag": "license",
                    "text": "\nCopyright Akveo. All Rights Reserved.\nLicensed under the MIT License. See License.txt in the project root for license information.\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 912,
                  "name": "val",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/helpers.ts",
              "line": 7,
              "character": 37
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "kind": 64,
          "children": [
            910
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/helpers.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 913,
      "name": "\"theme/components/layout/layout.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/layout/layout.component.ts",
      "children": [
        {
          "id": 914,
          "name": "NbLayoutColumnComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "A container component which determines a content position inside of the layout.\nThe layout could contain unlimited columns (not including the sidebars).",
            "tags": [
              {
                "tag": "example",
                "text": "By default the columns are ordered from the left to the right,\nbut it's also possible to overwrite this behavior by setting a `left` attribute to the column,\nmoving it to the very first position:\n```\n<nb-layout>\n  <nb-layout-column>Second</nb-layout-column>\n  <nb-layout-column>Third</nb-layout-column>\n  <nb-layout-column left>First</nb-layout-column>\n</nb-layout>\n```\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-layout-column',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 915,
              "name": "leftValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.left'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 45,
                  "character": 38
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 916,
              "name": "left",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Move the column to the very left position in the layout."
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 917,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Move the column to the very left position in the layout."
                  },
                  "parameters": [
                    {
                      "id": 918,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 52,
                  "character": 10
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                915
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                916
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/layout/layout.component.ts",
              "line": 43,
              "character": 36
            }
          ]
        },
        {
          "id": 929,
          "name": "NbLayoutComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "The general Nebular component-container.\nIt is required that all children component of the framework are located inside of the nb-layout.",
            "text": "Can contain the following components inside:\n\n```\nnb-layout-header\nnb-layout-column\nnb-sidebar\nnb-layout-footer\n```\n\nBy default the layout fills up the full view-port.\nThe window scrollbars are disabled on the body and moved inside of the nb-layout, so that the scrollbars\nwon't mess with the fixed nb-header.\n\nThe children components are projected into the flexible layout structure allowing to adjust the layout behavior\nbased on the settings provided.\n\nThe layout content (columns) becomes centered when the window width is more than\nthe value specified in the theme variable `layout-content-width`.\n\nThe layout also contains the area on the very top (the first child of the nb-layout), which could be used\nto dynamically append some components like modals or spinners/loaders\nso that they are located on top of the elements hierarchy.\nMore details are below under the `ThemeService` section.\n\nThe layout component is also responsible for changing of the application themes.\nIt listens to the `themeChange` event and change the theme CSS class appended to body.\nBased on the class appended a specific CSS-theme is applied to the application.\nMore details of the Theme System could be found here [Enabling Theme System](#/docs/concepts/theme-system)\n",
            "tags": [
              {
                "tag": "example",
                "text": "A simple layout example:\n\n```\n<nb-layout>\n  <nb-layout-header>Great Company</nb-layout-header>\n\n  <nb-layout-column>\n    Hello World!\n  </nb-layout-column>\n\n  <nb-layout-footer>Contact us</nb-layout-footer>\n</nb-layout>\n```\n"
              },
              {
                "tag": "example",
                "text": "For example, it is possible to ask the layout to center the columns (notice: we added a `center` attribute\nto the layout:\n\n```\n<nb-layout center>\n  <nb-layout-header>Great Company</nb-layout-header>\n\n  <nb-layout-column>\n    Hello World!\n  </nb-layout-column>\n\n  <nb-layout-footer>Contact us</nb-layout-footer>\n</nb-layout>\n```\n"
              },
              {
                "tag": "styles",
                "text": "\n\nlayout-font-family\nlayout-font-size\nlayout-line-height\nlayout-fg\nlayout-bg\nlayout-min-height\nlayout-content-width\nlayout-window-mode-min-width\nlayout-window-mode-max-width: window mode only, after this value layout turns into floating window\nlayout-window-mode-bg: window mode only, background\nlayout-window-mode-padding-top: window mode only, max padding from top\nlayout-window-shadow: window mode shadow\nlayout-padding\nlayout-medium-padding\nlayout-small-padding\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-layout',\r\n  styleUrls: ['./layout.component.scss'],\r\n  template: `\r\n    <ng-template #layoutTopDynamicArea></ng-template>\r\n    <div class=\"scrollable-container\" #scrollableContainer>\r\n      <div class=\"layout\">\r\n        <ng-content select=\"nb-layout-header\"></ng-content>\r\n        <div class=\"layout-container\">\r\n          <ng-content select=\"nb-sidebar\"></ng-content>\r\n          <div class=\"content\" [class.center]=\"centerValue\">\r\n            <div class=\"columns\">\r\n              <ng-content select=\"nb-layout-column\"></ng-content>\r\n            </div>\r\n            <ng-content select=\"nb-layout-footer\"></ng-content>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 946,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 953,
                  "name": "new NbLayoutComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 954,
                      "name": "themeService",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbThemeService",
                        "id": 774
                      }
                    },
                    {
                      "id": 955,
                      "name": "spinnerService",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbSpinnerService",
                        "id": 823
                      }
                    },
                    {
                      "id": 956,
                      "name": "componentFactoryResolver",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "ComponentFactoryResolver"
                      }
                    },
                    {
                      "id": 957,
                      "name": "elementRef",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "ElementRef"
                      }
                    },
                    {
                      "id": 958,
                      "name": "renderer",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Renderer2"
                      }
                    },
                    {
                      "id": 959,
                      "name": "router",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbLayoutComponent",
                    "id": 929
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 286,
                  "character": 32
                }
              ]
            },
            {
              "id": 944,
              "name": "afterViewInit$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 284,
                  "character": 26
                }
              ],
              "type": {
                "type": "reference",
                "name": "BehaviorSubject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ]
              },
              "defaultValue": " new BehaviorSubject(null)"
            },
            {
              "id": 945,
              "name": "alive",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 286,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "true"
            },
            {
              "id": 930,
              "name": "centerValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 235,
                  "character": 13
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 949,
              "name": "componentFactoryResolver",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 291,
                  "character": 38
                }
              ],
              "type": {
                "type": "reference",
                "name": "ComponentFactoryResolver"
              }
            },
            {
              "id": 950,
              "name": "elementRef",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 292,
                  "character": 24
                }
              ],
              "type": {
                "type": "reference",
                "name": "ElementRef"
              }
            },
            {
              "id": 951,
              "name": "renderer",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 293,
                  "character": 22
                }
              ],
              "type": {
                "type": "reference",
                "name": "Renderer2"
              }
            },
            {
              "id": 952,
              "name": "router",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 294,
                  "character": 20
                }
              ],
              "type": {
                "type": "reference",
                "name": "Router"
              }
            },
            {
              "id": 943,
              "name": "scrollableContainerRef",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "ViewChild",
                  "type": {
                    "type": "reference",
                    "name": "ViewChild"
                  },
                  "arguments": {
                    "selector": "'scrollableContainer'",
                    "opts": "{ read: ElementRef }"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 282,
                  "character": 80
                }
              ],
              "type": {
                "type": "reference",
                "name": "ElementRef"
              }
            },
            {
              "id": 948,
              "name": "spinnerService",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 290,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbSpinnerService",
                "id": 823
              }
            },
            {
              "id": 947,
              "name": "themeService",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 289,
                  "character": 26
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbThemeService",
                "id": 774
              }
            },
            {
              "id": 942,
              "name": "veryTopRef",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "ViewChild",
                  "type": {
                    "type": "reference",
                    "name": "ViewChild"
                  },
                  "arguments": {
                    "selector": "'layoutTopDynamicArea'",
                    "opts": "{ read: ViewContainerRef }"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 281,
                  "character": 75
                }
              ],
              "type": {
                "type": "reference",
                "name": "ViewContainerRef"
              }
            },
            {
              "id": 931,
              "name": "windowModeValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.window-mode'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 237,
                  "character": 51
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 932,
              "name": "withScrollValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.with-scroll'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 238,
                  "character": 51
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 933,
              "name": "center",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Defines whether the layout columns will be centered after some width"
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 934,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Defines whether the layout columns will be centered after some width"
                  },
                  "parameters": [
                    {
                      "id": 935,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 245,
                  "character": 12
                }
              ]
            },
            {
              "id": 936,
              "name": "windowMode",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Defines whether the layout enters a 'window' mode, when the layout content (including sidebars and fixed header)\nbecomes centered by width with a margin from the top of the screen, like a floating window.\nAutomatically enables `withScroll` mode, as in the window mode scroll must be inside the layout and cannot be on\nwindow. (TODO: check this)"
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 937,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Defines whether the layout enters a 'window' mode, when the layout content (including sidebars and fixed header)\nbecomes centered by width with a margin from the top of the screen, like a floating window.\nAutomatically enables `withScroll` mode, as in the window mode scroll must be inside the layout and cannot be on\nwindow. (TODO: check this)"
                  },
                  "parameters": [
                    {
                      "id": 938,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 257,
                  "character": 16
                }
              ]
            },
            {
              "id": 939,
              "name": "withScroll",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Defines whether to move the scrollbars to layout or leave it at the body level.\nAutomatically set to true when `windowMode` is enabled."
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 940,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Defines whether to move the scrollbars to layout or leave it at the body level.\nAutomatically set to true when `windowMode` is enabled."
                  },
                  "parameters": [
                    {
                      "id": 941,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 268,
                  "character": 16
                }
              ]
            },
            {
              "id": 969,
              "name": "initScrollTop",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 970,
                  "name": "initScrollTop",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 364,
                  "character": 23
                }
              ]
            },
            {
              "id": 960,
              "name": "ngAfterViewInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 961,
                  "name": "ngAfterViewInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 330,
                  "character": 17
                }
              ]
            },
            {
              "id": 964,
              "name": "ngOnDestroy",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 965,
                  "name": "ngOnDestroy",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 354,
                  "character": 13
                }
              ]
            },
            {
              "id": 962,
              "name": "ngOnInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 963,
                  "name": "ngOnInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 350,
                  "character": 10
                }
              ]
            },
            {
              "id": 966,
              "name": "onResize",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostListener",
                  "type": {
                    "type": "reference",
                    "name": "HostListener"
                  },
                  "arguments": {
                    "eventName": "'window:resize'",
                    "args": "['$event']"
                  }
                }
              ],
              "signatures": [
                {
                  "id": 967,
                  "name": "onResize",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 968,
                      "name": "event",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 360,
                  "character": 10
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                946
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                944,
                945,
                930,
                949,
                950,
                951,
                952,
                943,
                948,
                947,
                942,
                931,
                932
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                933,
                936,
                939
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                969,
                960,
                964,
                962,
                966
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/layout/layout.component.ts",
              "line": 233,
              "character": 30
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "name": "AfterViewInit"
            },
            {
              "type": "reference",
              "name": "OnInit"
            },
            {
              "type": "reference",
              "name": "OnDestroy"
            }
          ]
        },
        {
          "id": 924,
          "name": "NbLayoutFooterComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Page footer.\nLocated under the nb-layout content (specifically, under the columns).\nCould be made `fixed`, becoming sticky to the bottom of the view port (window).",
            "tags": [
              {
                "tag": "styles",
                "text": "\n\nfooter-height\nfooter-padding\nfooter-fg\nfooter-bg\nfooter-separator\nfooter-shadow\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-layout-footer',\r\n  template: `\r\n    <nav [class.fixed]=\"fixedValue\">\r\n      <ng-content></ng-content>\r\n    </nav>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 925,
              "name": "fixedValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.fixed'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 119,
                  "character": 40
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 926,
              "name": "fixed",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Makes the footer sticky to the bottom of the window."
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 927,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Makes the footer sticky to the bottom of the window."
                  },
                  "parameters": [
                    {
                      "id": 928,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 126,
                  "character": 11
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                925
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                926
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/layout/layout.component.ts",
              "line": 117,
              "character": 36
            }
          ]
        },
        {
          "id": 919,
          "name": "NbLayoutHeaderComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Page header component.\nLocated on top of the page above the layout columns and sidebars.\nCould be made `fixed` by setting the corresponding property. In the fixed mode the header becomes\nsticky to the top of the nb-layout (to of the page).",
            "tags": [
              {
                "tag": "styles",
                "text": "\n\nheader-font-family\nheader-line-height\nheader-fg\nheader-bg\nheader-height\nheader-padding\nheader-shadow\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-layout-header',\r\n  template: `\r\n    <nav [class.fixed]=\"fixedValue\">\r\n      <ng-content></ng-content>\r\n    </nav>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 920,
              "name": "fixedValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.fixed'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 83,
                  "character": 40
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 921,
              "name": "fixed",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Makes the header sticky to the top of the nb-layout."
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 922,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Makes the header sticky to the top of the nb-layout."
                  },
                  "parameters": [
                    {
                      "id": 923,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/layout/layout.component.ts",
                  "line": 90,
                  "character": 11
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                920
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                921
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/layout/layout.component.ts",
              "line": 81,
              "character": 36
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            914,
            929,
            924,
            919
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/layout/layout.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 971,
      "name": "\"theme/components/layout/layout.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/layout/layout.module.ts",
      "children": [
        {
          "id": 972,
          "name": "NbLayoutModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  imports: [\r\n    NbSharedModule,\r\n  ],\r\n  declarations: [\r\n    ...NB_LAYOUT_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...NB_LAYOUT_COMPONENTS,\r\n  ],\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/layout/layout.module.ts",
              "line": 35,
              "character": 27
            }
          ]
        },
        {
          "id": 973,
          "name": "NB_LAYOUT_COMPONENTS",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/layout/layout.module.ts",
              "line": 17,
              "character": 26
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "Object"
          },
          "defaultValue": " [\r\n  NbLayoutComponent,\r\n  NbLayoutColumnComponent,\r\n  NbLayoutFooterComponent,\r\n  NbLayoutHeaderComponent,\r\n]"
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            972
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            973
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/layout/layout.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1101,
      "name": "\"theme/components/menu/menu.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/menu/menu.component.ts",
      "children": [
        {
          "id": 1124,
          "name": "NbMenuComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Vertical menu component.",
            "text": "Accepts a list of menu items and renders them accordingly. Supports multi-level menus.\n",
            "tags": [
              {
                "tag": "styles",
                "text": "\n\nmenu-font-family:\nmenu-font-size:\nmenu-font-weight:\nmenu-fg:\nmenu-bg:\nmenu-active-fg:\nmenu-active-bg:\nmenu-active-font-weight:\nmenu-submenu-bg:\nmenu-submenu-fg:\nmenu-submenu-active-fg:\nmenu-submenu-active-bg:\nmenu-submenu-active-border-color:\nmenu-submenu-active-shadow:\nmenu-submenu-hover-fg:\nmenu-submenu-hover-bg:\nmenu-submenu-item-border-width:\nmenu-submenu-item-border-radius:\nmenu-submenu-item-padding:\nmenu-submenu-item-container-padding:\nmenu-submenu-padding:\nmenu-group-font-weight:\nmenu-group-font-size:\nmenu-group-fg:\nmenu-group-padding\nmenu-item-padding:\nmenu-item-separator:\nmenu-icon-font-size:\nmenu-icon-margin:\nmenu-icon-color:\nmenu-icon-active-color:\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-menu',\r\n  styleUrls: ['./menu.component.scss'],\r\n  template: `\r\n    <ul class=\"menu-items\">\r\n      <li nbMenuItem *ngFor=\"let item of items\"\r\n                      [menuItem]=\"item\"\r\n                      [class.menu-group]=\"item.group\"\r\n                      (hoverItem)=\"onHoverItem($event)\"\r\n                      (toggleSubMenu)=\"onToggleSubMenu($event)\"\r\n                      (selectItem)=\"onSelectItem($event)\"\r\n                      (itemClick)=\"onItemClick($event)\"\r\n                      class=\"menu-item\"></li>\r\n    </ul>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1136,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1139,
                  "name": "new NbMenuComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1140,
                      "name": "menuInternalService",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuInternalService",
                        "id": 1025
                      }
                    },
                    {
                      "id": 1141,
                      "name": "router",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbMenuComponent",
                    "id": 1124
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 139,
                  "character": 45
                }
              ]
            },
            {
              "id": 1134,
              "name": "alive",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 138,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "true"
            },
            {
              "id": 1135,
              "name": "autoCollapseValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 139,
                  "character": 27
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1125,
              "name": "inverseValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.inverse'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 103,
                  "character": 44
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1127,
              "name": "items",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "List of menu items.",
                "tags": [
                  {
                    "tag": "type",
                    "text": "List<NbMenuItem> | List<any> | any\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 117,
                  "character": 16
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "NbMenuItem",
                  "id": 975
                }
              }
            },
            {
              "id": 1137,
              "name": "menuInternalService",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 141,
                  "character": 41
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbMenuInternalService",
                "id": 1025
              }
            },
            {
              "id": 1138,
              "name": "router",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 141,
                  "character": 80
                }
              ],
              "type": {
                "type": "reference",
                "name": "Router"
              }
            },
            {
              "id": 1126,
              "name": "tag",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Tags a menu with some ID, can be later used in the menu service\nto determine which menu triggered the action, if multiple menus exist on the page.",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 111,
                  "character": 14
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1131,
              "name": "autoCollapse",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Collapse all opened submenus on the toggle event\nDefault value is \"false\"",
                "tags": [
                  {
                    "tag": "type",
                    "text": "boolean\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1132,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Collapse all opened submenus on the toggle event\nDefault value is \"false\"",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "boolean\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1133,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 134,
                  "character": 18
                }
              ]
            },
            {
              "id": 1128,
              "name": "inverse",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Makes colors inverse based on current theme",
                "tags": [
                  {
                    "tag": "type",
                    "text": "boolean\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1129,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Makes colors inverse based on current theme",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "boolean\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1130,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 124,
                  "character": 13
                }
              ]
            },
            {
              "id": 1163,
              "name": "compareTag",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1164,
                  "name": "compareTag",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1165,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 238,
                  "character": 20
                }
              ]
            },
            {
              "id": 1160,
              "name": "getHomeItem",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1161,
                  "name": "getHomeItem",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1162,
                      "name": "items",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbMenuItem",
                          "id": 975
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbMenuItem",
                    "id": 975
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 225,
                  "character": 21
                }
              ]
            },
            {
              "id": 1166,
              "name": "getSelectedItem",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1167,
                  "name": "getSelectedItem",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1168,
                      "name": "items",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbMenuItem",
                          "id": 975
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbMenuItem",
                    "id": 975
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 242,
                  "character": 25
                }
              ]
            },
            {
              "id": 1158,
              "name": "navigateHome",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1159,
                  "name": "navigateHome",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 208,
                  "character": 22
                }
              ]
            },
            {
              "id": 1156,
              "name": "ngOnDestroy",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1157,
                  "name": "ngOnDestroy",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 204,
                  "character": 13
                }
              ]
            },
            {
              "id": 1142,
              "name": "ngOnInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1143,
                  "name": "ngOnInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 143,
                  "character": 10
                }
              ]
            },
            {
              "id": 1144,
              "name": "onHoverItem",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1145,
                  "name": "onHoverItem",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1146,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 181,
                  "character": 13
                }
              ]
            },
            {
              "id": 1153,
              "name": "onItemClick",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1154,
                  "name": "onItemClick",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1155,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 200,
                  "character": 13
                }
              ]
            },
            {
              "id": 1150,
              "name": "onSelectItem",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1151,
                  "name": "onSelectItem",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1152,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 194,
                  "character": 14
                }
              ]
            },
            {
              "id": 1147,
              "name": "onToggleSubMenu",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1148,
                  "name": "onToggleSubMenu",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1149,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 185,
                  "character": 17
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                1136
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1134,
                1135,
                1125,
                1127,
                1137,
                1138,
                1126
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                1131,
                1128
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1163,
                1160,
                1166,
                1158,
                1156,
                1142,
                1144,
                1153,
                1150,
                1147
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/menu/menu.component.ts",
              "line": 102,
              "character": 28
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "name": "OnInit"
            },
            {
              "type": "reference",
              "name": "OnDestroy"
            }
          ]
        },
        {
          "id": 1102,
          "name": "NbMenuItemComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  // tslint:disable-next-line:component-selector\r\n  selector: '[nbMenuItem]',\r\n  templateUrl: './menu-item.component.html',\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1108,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1110,
                  "name": "new NbMenuItemComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1111,
                      "name": "router",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbMenuItemComponent",
                    "id": 1102
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 26,
                  "character": 48
                }
              ]
            },
            {
              "id": 1104,
              "name": "hoverItem",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Output",
                  "type": {
                    "type": "reference",
                    "name": "Output"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 23,
                  "character": 21
                }
              ],
              "type": {
                "type": "reference",
                "name": "EventEmitter",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ]
              },
              "defaultValue": " new EventEmitter<any>()"
            },
            {
              "id": 1107,
              "name": "itemClick",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Output",
                  "type": {
                    "type": "reference",
                    "name": "Output"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 26,
                  "character": 21
                }
              ],
              "type": {
                "type": "reference",
                "name": "EventEmitter",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ]
              },
              "defaultValue": " new EventEmitter<any>()"
            },
            {
              "id": 1103,
              "name": "menuItem",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 21,
                  "character": 19
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbMenuItem",
                "id": 975
              },
              "defaultValue": " <NbMenuItem>null"
            },
            {
              "id": 1109,
              "name": "router",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 28,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "Router"
              }
            },
            {
              "id": 1106,
              "name": "selectItem",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Output",
                  "type": {
                    "type": "reference",
                    "name": "Output"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 25,
                  "character": 22
                }
              ],
              "type": {
                "type": "reference",
                "name": "EventEmitter",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ]
              },
              "defaultValue": " new EventEmitter<any>()"
            },
            {
              "id": 1105,
              "name": "toggleSubMenu",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Output",
                  "type": {
                    "type": "reference",
                    "name": "Output"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 24,
                  "character": 25
                }
              ],
              "type": {
                "type": "reference",
                "name": "EventEmitter",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ]
              },
              "defaultValue": " new EventEmitter<any>()"
            },
            {
              "id": 1115,
              "name": "onHoverItem",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1116,
                  "name": "onHoverItem",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1117,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 34,
                  "character": 13
                }
              ]
            },
            {
              "id": 1121,
              "name": "onItemClick",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1122,
                  "name": "onItemClick",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1123,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 42,
                  "character": 13
                }
              ]
            },
            {
              "id": 1118,
              "name": "onSelectItem",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1119,
                  "name": "onSelectItem",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1120,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 38,
                  "character": 14
                }
              ]
            },
            {
              "id": 1112,
              "name": "onToggleSubMenu",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1113,
                  "name": "onToggleSubMenu",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1114,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.component.ts",
                  "line": 30,
                  "character": 17
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                1108
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1104,
                1107,
                1103,
                1109,
                1106,
                1105
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1115,
                1121,
                1118,
                1112
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/menu/menu.component.ts",
              "line": 20,
              "character": 32
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1124,
            1102
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/menu/menu.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1169,
      "name": "\"theme/components/menu/menu.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/menu/menu.module.ts",
      "children": [
        {
          "id": 1170,
          "name": "NbMenuModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  imports: [NbSharedModule],\r\n  declarations: [...nbMenuComponents],\r\n  exports: [...nbMenuComponents],\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1171,
              "name": "forRoot",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1172,
                  "name": "forRoot",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ModuleWithProviders"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.module.ts",
                  "line": 23,
                  "character": 16
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1171
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/menu/menu.module.ts",
              "line": 22,
              "character": 25
            }
          ]
        },
        {
          "id": 1174,
          "name": "NB_MENU_PROVIDERS",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/menu/menu.module.ts",
              "line": 15,
              "character": 23
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "Object"
          },
          "defaultValue": " [NbMenuService, NbMenuInternalService]"
        },
        {
          "id": 1173,
          "name": "nbMenuComponents",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/menu/menu.module.ts",
              "line": 13,
              "character": 22
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "Object"
          },
          "defaultValue": " [NbMenuComponent, NbMenuItemComponent]"
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1170
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            1174,
            1173
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/menu/menu.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 974,
      "name": "\"theme/components/menu/menu.service\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/menu/menu.service.ts",
      "children": [
        {
          "id": 1025,
          "name": "NbMenuInternalService",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 1027,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1030,
                  "name": "new NbMenuInternalService",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1031,
                      "name": "router",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Router"
                      }
                    },
                    {
                      "id": 1032,
                      "name": "location",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Location"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbMenuInternalService",
                    "id": 1025
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 146,
                  "character": 35
                }
              ]
            },
            {
              "id": 1026,
              "name": "items",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 146,
                  "character": 15
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "NbMenuItem",
                  "id": 975
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 1029,
              "name": "location",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 148,
                  "character": 54
                }
              ],
              "type": {
                "type": "reference",
                "name": "Location"
              }
            },
            {
              "id": 1028,
              "name": "router",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 148,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "Router"
              }
            },
            {
              "id": 1041,
              "name": "collapseAll",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1042,
                  "name": "collapseAll",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1043,
                      "name": "items",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbMenuItem",
                          "id": 975
                        }
                      }
                    },
                    {
                      "id": 1044,
                      "name": "except",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 165,
                  "character": 13
                }
              ]
            },
            {
              "id": 1081,
              "name": "collapseItem",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1082,
                  "name": "collapseItem",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1083,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    },
                    {
                      "id": 1084,
                      "name": "except",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 205,
                  "character": 22
                }
              ]
            },
            {
              "id": 1033,
              "name": "getItems",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1034,
                  "name": "getItems",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "name": "NbMenuItem",
                      "id": 975
                    }
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 152,
                  "character": 10
                }
              ]
            },
            {
              "id": 1074,
              "name": "itemClick",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1075,
                  "name": "itemClick",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1076,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    },
                    {
                      "id": 1077,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 193,
                  "character": 11
                }
              ]
            },
            {
              "id": 1062,
              "name": "itemHover",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1063,
                  "name": "itemHover",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1064,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    },
                    {
                      "id": 1065,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 181,
                  "character": 11
                }
              ]
            },
            {
              "id": 1070,
              "name": "itemSelect",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1071,
                  "name": "itemSelect",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1072,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    },
                    {
                      "id": 1073,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 189,
                  "character": 12
                }
              ]
            },
            {
              "id": 1045,
              "name": "onAddItem",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1046,
                  "name": "onAddItem",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1047,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1049,
                              "name": "items",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 169,
                                  "character": 46
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "name": "NbMenuItem",
                                  "id": 975
                                }
                              }
                            },
                            {
                              "id": 1048,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 169,
                                  "character": 31
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1049,
                                1048
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/menu/menu.service.ts",
                              "line": 169,
                              "character": 26
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 169,
                  "character": 11
                }
              ]
            },
            {
              "id": 1054,
              "name": "onGetSelectedItem",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1055,
                  "name": "onGetSelectedItem",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1056,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1058,
                              "name": "listener",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 177,
                                  "character": 57
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "BehaviorSubject",
                                "typeArguments": [
                                  {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 1059,
                                      "name": "__type",
                                      "kind": 65536,
                                      "kindString": "Type literal",
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 1061,
                                          "name": "item",
                                          "kind": 32,
                                          "kindString": "Variable",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "theme/components/menu/menu.service.ts",
                                              "line": 177,
                                              "character": 94
                                            }
                                          ],
                                          "type": {
                                            "type": "reference",
                                            "name": "NbMenuItem",
                                            "id": 975
                                          }
                                        },
                                        {
                                          "id": 1060,
                                          "name": "tag",
                                          "kind": 32,
                                          "kindString": "Variable",
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "theme/components/menu/menu.service.ts",
                                              "line": 177,
                                              "character": 80
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Variables",
                                          "kind": 32,
                                          "children": [
                                            1061,
                                            1060
                                          ]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "theme/components/menu/menu.service.ts",
                                          "line": 177,
                                          "character": 75
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1057,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 177,
                                  "character": 39
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1058,
                                1057
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/menu/menu.service.ts",
                              "line": 177,
                              "character": 34
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 177,
                  "character": 19
                }
              ]
            },
            {
              "id": 1050,
              "name": "onNavigateHome",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1051,
                  "name": "onNavigateHome",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1052,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1053,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 173,
                                  "character": 36
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1053
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/menu/menu.service.ts",
                              "line": 173,
                              "character": 31
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 173,
                  "character": 16
                }
              ]
            },
            {
              "id": 1088,
              "name": "prepareItem",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1089,
                  "name": "prepareItem",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1090,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 223,
                  "character": 21
                }
              ]
            },
            {
              "id": 1035,
              "name": "prepareItems",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1036,
                  "name": "prepareItems",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1037,
                      "name": "items",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbMenuItem",
                          "id": 975
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 156,
                  "character": 14
                }
              ]
            },
            {
              "id": 1078,
              "name": "resetItem",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1079,
                  "name": "resetItem",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1080,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 197,
                  "character": 19
                }
              ]
            },
            {
              "id": 1038,
              "name": "resetItems",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1039,
                  "name": "resetItems",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1040,
                      "name": "items",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbMenuItem",
                          "id": 975
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 161,
                  "character": 12
                }
              ]
            },
            {
              "id": 1091,
              "name": "selectParent",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1092,
                  "name": "selectParent",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1093,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 241,
                  "character": 22
                }
              ]
            },
            {
              "id": 1085,
              "name": "setParent",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1086,
                  "name": "setParent",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1087,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 216,
                  "character": 19
                }
              ]
            },
            {
              "id": 1066,
              "name": "submenuToggle",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1067,
                  "name": "submenuToggle",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1068,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMenuItem",
                        "id": 975
                      }
                    },
                    {
                      "id": 1069,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 185,
                  "character": 15
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                1027
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1026,
                1029,
                1028
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1041,
                1081,
                1033,
                1074,
                1062,
                1070,
                1045,
                1054,
                1050,
                1088,
                1035,
                1078,
                1038,
                1091,
                1085,
                1066
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/menu/menu.service.ts",
              "line": 145,
              "character": 34
            }
          ]
        },
        {
          "id": 975,
          "name": "NbMenuItem",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Menu Item options\nTODO: check if we need both URL and LINK"
          },
          "children": [
            {
              "id": 981,
              "name": "children",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Children items",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{List<NbMenuItem>}\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 57,
                  "character": 10
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "NbMenuItem",
                  "id": 975
                }
              }
            },
            {
              "id": 989,
              "name": "data",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 85,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 980,
              "name": "expanded",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Expanded by defaul",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{boolean}\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 52,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 990,
              "name": "fragment",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 86,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 986,
              "name": "group",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Whether the item is just a group (non-clickable)",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{boolean}\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 82,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 983,
              "name": "hidden",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Hidden Item",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{boolean}\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 67,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 985,
              "name": "home",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Where this is a home item",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{boolean}\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 77,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 979,
              "name": "icon",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Icon class name",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 47,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 977,
              "name": "link",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Item relative link (for routerLink)",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 37,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 987,
              "name": "parent",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 83,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbMenuItem",
                "id": 975
              }
            },
            {
              "id": 984,
              "name": "pathMatch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Item is selected when partly or fully equal to the current url",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 72,
                  "character": 11
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"full\""
            },
            {
              "id": 988,
              "name": "selected",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 84,
                  "character": 10
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 982,
              "name": "target",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "HTML Link target",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 62,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 976,
              "name": "title",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Item Title",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 32,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 978,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Item URL (absolute)",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 42,
                  "character": 5
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                981,
                989,
                980,
                990,
                986,
                983,
                985,
                979,
                977,
                987,
                984,
                988,
                982,
                976,
                978
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/menu/menu.service.ts",
              "line": 27,
              "character": 32
            }
          ]
        },
        {
          "id": 991,
          "name": "NbMenuService",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Menu Service. Allows you to listen to menu events, or to interact with a menu."
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 992,
              "name": "addItems",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 993,
                  "name": "addItems",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Add items to the end of the menu items list"
                  },
                  "parameters": [
                    {
                      "id": 994,
                      "name": "items",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbMenuItem",
                          "id": 975
                        }
                      }
                    },
                    {
                      "id": 995,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "text": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 102,
                  "character": 10
                }
              ]
            },
            {
              "id": 999,
              "name": "getSelectedItem",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1000,
                  "name": "getSelectedItem",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns currently selected item. Won't subscribe to the future events.",
                    "returns": ">}\n"
                  },
                  "parameters": [
                    {
                      "id": 1001,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1002,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1004,
                              "name": "item",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 119,
                                  "character": 63
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "NbMenuItem",
                                "id": 975
                              }
                            },
                            {
                              "id": 1003,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 119,
                                  "character": 49
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1004,
                                1003
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/menu/menu.service.ts",
                              "line": 119,
                              "character": 44
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 119,
                  "character": 17
                }
              ]
            },
            {
              "id": 996,
              "name": "navigateHome",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 997,
                  "name": "navigateHome",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Navigate to the home menu item"
                  },
                  "parameters": [
                    {
                      "id": 998,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "text": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 110,
                  "character": 14
                }
              ]
            },
            {
              "id": 1005,
              "name": "onItemClick",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1006,
                  "name": "onItemClick",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1007,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1009,
                              "name": "item",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 127,
                                  "character": 47
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "NbMenuItem",
                                "id": 975
                              }
                            },
                            {
                              "id": 1008,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 127,
                                  "character": 33
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1009,
                                1008
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/menu/menu.service.ts",
                              "line": 127,
                              "character": 28
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 127,
                  "character": 13
                }
              ]
            },
            {
              "id": 1015,
              "name": "onItemHover",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1016,
                  "name": "onItemHover",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1017,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1019,
                              "name": "item",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 135,
                                  "character": 47
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "NbMenuItem",
                                "id": 975
                              }
                            },
                            {
                              "id": 1018,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 135,
                                  "character": 33
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1019,
                                1018
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/menu/menu.service.ts",
                              "line": 135,
                              "character": 28
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 135,
                  "character": 13
                }
              ]
            },
            {
              "id": 1010,
              "name": "onItemSelect",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1011,
                  "name": "onItemSelect",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1012,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1014,
                              "name": "item",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 131,
                                  "character": 48
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "NbMenuItem",
                                "id": 975
                              }
                            },
                            {
                              "id": 1013,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 131,
                                  "character": 34
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1014,
                                1013
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/menu/menu.service.ts",
                              "line": 131,
                              "character": 29
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 131,
                  "character": 14
                }
              ]
            },
            {
              "id": 1020,
              "name": "onSubmenuToggle",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1021,
                  "name": "onSubmenuToggle",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1022,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1024,
                              "name": "item",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 139,
                                  "character": 51
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "name": "NbMenuItem",
                                "id": 975
                              }
                            },
                            {
                              "id": 1023,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/menu/menu.service.ts",
                                  "line": 139,
                                  "character": 37
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1024,
                                1023
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/menu/menu.service.ts",
                              "line": 139,
                              "character": 32
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/menu/menu.service.ts",
                  "line": 139,
                  "character": 17
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                992,
                999,
                996,
                1005,
                1015,
                1010,
                1020
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/menu/menu.service.ts",
              "line": 95,
              "character": 26
            }
          ]
        },
        {
          "id": 1095,
          "name": "addItems$",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/menu/menu.service.ts",
              "line": 16,
              "character": 15
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReplaySubject",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "Object"
              }
            ]
          },
          "defaultValue": " new ReplaySubject(1)"
        },
        {
          "id": 1097,
          "name": "getSelectedItem$",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/menu/menu.service.ts",
              "line": 18,
              "character": 22
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReplaySubject",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "Object"
              }
            ]
          },
          "defaultValue": " new ReplaySubject(1)"
        },
        {
          "id": 1094,
          "name": "itemClick$",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/menu/menu.service.ts",
              "line": 15,
              "character": 16
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReplaySubject",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "Object"
              }
            ]
          },
          "defaultValue": " new ReplaySubject(1)"
        },
        {
          "id": 1099,
          "name": "itemHover$",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/menu/menu.service.ts",
              "line": 20,
              "character": 16
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReplaySubject",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "Object"
              }
            ]
          },
          "defaultValue": " new ReplaySubject(1)"
        },
        {
          "id": 1098,
          "name": "itemSelect$",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/menu/menu.service.ts",
              "line": 19,
              "character": 17
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReplaySubject",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "Object"
              }
            ]
          },
          "defaultValue": " new ReplaySubject(1)"
        },
        {
          "id": 1096,
          "name": "navigateHome$",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/menu/menu.service.ts",
              "line": 17,
              "character": 19
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReplaySubject",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "Object"
              }
            ]
          },
          "defaultValue": " new ReplaySubject(1)"
        },
        {
          "id": 1100,
          "name": "submenuToggle$",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/menu/menu.service.ts",
              "line": 21,
              "character": 20
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReplaySubject",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "Object"
              }
            ]
          },
          "defaultValue": " new ReplaySubject(1)"
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1025,
            975,
            991
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            1095,
            1097,
            1094,
            1099,
            1098,
            1096,
            1100
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/menu/menu.service.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1175,
      "name": "\"theme/components/route-tabset/route-tabset.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/route-tabset/route-tabset.component.ts",
      "children": [
        {
          "id": 1176,
          "name": "NbRouteTabsetComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Route tabset components.\nRenders tabs inside of a router-outlet.",
            "tags": [
              {
                "tag": "example",
                "text": "basic usage example\n\n```\n tabs = [\n {\n   title: 'Route tab #1',\n   route: '/pages/description',\n },\n {\n   title: 'Route tab #2',\n   route: '/pages/images',\n   }\n ];\n\n <nb-route-tabset [tabs]=\"tabs\"></nb-route-tabset>\n```\n"
              },
              {
                "tag": "styles",
                "text": "\n\nroute-tabs-font-family:\nroute-tabs-font-size:\nroute-tabs-active-bg:\nroute-tabs-active-font-weight:\nroute-tabs-padding:\nroute-tabs-header-bg:\nroute-tabs-separator:\nroute-tabs-fg:\nroute-tabs-fg-heading:\nroute-tabs-bg:\nroute-tabs-selected:\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-route-tabset',\r\n  styleUrls: ['./route-tabset.component.scss'],\r\n  template: `\r\n    <ul>\r\n      <li *ngFor=\"let tab of tabs\"\r\n          (click)=\"$event.preventDefault(); selectTab(tab)\"\r\n          routerLink=\"{{tab.route}}\"\r\n          routerLinkActive=\"active\"\r\n          [routerLinkActiveOptions]=\"{ exact: true }\">\r\n        <a href>{{tab.title}}</a>\r\n      </li>\r\n    </ul>\r\n    <router-outlet></router-outlet>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1183,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1185,
                  "name": "new NbRouteTabsetComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1186,
                      "name": "router",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbRouteTabsetComponent",
                    "id": 1176
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/route-tabset/route-tabset.component.ts",
                  "line": 86,
                  "character": 48
                }
              ]
            },
            {
              "id": 1182,
              "name": "changeTab",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Emits when tab is selected",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{EventEmitter<any>}\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Output",
                  "type": {
                    "type": "reference",
                    "name": "Output"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/route-tabset/route-tabset.component.ts",
                  "line": 86,
                  "character": 21
                }
              ],
              "type": {
                "type": "reference",
                "name": "EventEmitter",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ]
              },
              "defaultValue": " new EventEmitter<any>()"
            },
            {
              "id": 1177,
              "name": "fullWidthValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.full-width'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/route-tabset/route-tabset.component.ts",
                  "line": 65,
                  "character": 49
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1184,
              "name": "router",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/route-tabset/route-tabset.component.ts",
                  "line": 88,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "Router"
              }
            },
            {
              "id": 1178,
              "name": "tabs",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Tabs configuration",
                "tags": [
                  {
                    "tag": "param",
                    "text": "string, title: string, tag?: string}\n",
                    "param": "Object{route:"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/route-tabset/route-tabset.component.ts",
                  "line": 71,
                  "character": 15
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "any"
                }
              }
            },
            {
              "id": 1179,
              "name": "fullWidth",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Take full width of a parent"
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1180,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Take full width of a parent"
                  },
                  "parameters": [
                    {
                      "id": 1181,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/route-tabset/route-tabset.component.ts",
                  "line": 78,
                  "character": 15
                }
              ]
            },
            {
              "id": 1187,
              "name": "selectTab",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1188,
                  "name": "selectTab",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1189,
                      "name": "tab",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/route-tabset/route-tabset.component.ts",
                  "line": 91,
                  "character": 11
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                1183
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1182,
                1177,
                1184,
                1178
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                1179
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1187
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/route-tabset/route-tabset.component.ts",
              "line": 63,
              "character": 35
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1176
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/route-tabset/route-tabset.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1190,
      "name": "\"theme/components/route-tabset/route-tabset.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/route-tabset/route-tabset.module.ts",
      "children": [
        {
          "id": 1191,
          "name": "NbRouteTabsetModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  imports: [\r\n    NbSharedModule,\r\n  ],\r\n  declarations: [\r\n    NbRouteTabsetComponent,\r\n  ],\r\n  exports: [\r\n    NbRouteTabsetComponent,\r\n  ],\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/route-tabset/route-tabset.module.ts",
              "line": 24,
              "character": 32
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1191
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/route-tabset/route-tabset.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1463,
      "name": "\"theme/components/search/search.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/search/search.component.ts",
      "children": [
        {
          "id": 1501,
          "name": "NbSearchComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Beautiful full-page search control.",
            "tags": [
              {
                "tag": "styles",
                "text": "\n\nsearch-btn-open-fg:\nsearch-btn-close-fg:\nsearch-bg:\nsearch-bg-secondary:\nsearch-text:\nsearch-info:\nsearch-dash:\nsearch-placeholder:\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-search',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['styles/search.component.scss'],\r\n  template: `\r\n    <button class=\"start-search\" (click)=\"openSearch()\">\r\n      <i class=\"nb-search\"></i>\r\n    </button>\r\n    <ng-template #attachedSearchContainer></ng-template>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1511,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1516,
                  "name": "new NbSearchComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1517,
                      "name": "searchService",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbSearchService",
                        "id": 1432
                      }
                    },
                    {
                      "id": 1518,
                      "name": "themeService",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbThemeService",
                        "id": 774
                      }
                    },
                    {
                      "id": 1519,
                      "name": "componentFactoryResolver",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "ComponentFactoryResolver"
                      }
                    },
                    {
                      "id": 1520,
                      "name": "router",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbSearchComponent",
                    "id": 1501
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 181,
                  "character": 43
                }
              ]
            },
            {
              "id": 1508,
              "name": "activateSearchSubscription",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 179,
                  "character": 36
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subscription"
              }
            },
            {
              "id": 1505,
              "name": "attachedSearchContainer",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "ViewChild",
                  "type": {
                    "type": "reference",
                    "name": "ViewChild"
                  },
                  "arguments": {
                    "selector": "'attachedSearchContainer'",
                    "opts": "{ read: ViewContainerRef }"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 175,
                  "character": 91
                }
              ],
              "type": {
                "type": "reference",
                "name": "ViewContainerRef"
              }
            },
            {
              "id": 1514,
              "name": "componentFactoryResolver",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 185,
                  "character": 36
                }
              ],
              "type": {
                "type": "reference",
                "name": "ComponentFactoryResolver"
              }
            },
            {
              "id": 1509,
              "name": "deactivateSearchSubscription",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 180,
                  "character": 38
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subscription"
              }
            },
            {
              "id": 1503,
              "name": "placeholder",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Search input placeholder",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 171,
                  "character": 22
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"Search...\""
            },
            {
              "id": 1515,
              "name": "router",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 186,
                  "character": 18
                }
              ],
              "type": {
                "type": "reference",
                "name": "Router"
              }
            },
            {
              "id": 1510,
              "name": "routerSubscription",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 181,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subscription"
              }
            },
            {
              "id": 1506,
              "name": "searchFieldComponentRef",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 177,
                  "character": 33
                }
              ],
              "type": {
                "type": "reference",
                "name": "ComponentRef",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ]
              },
              "defaultValue": " null"
            },
            {
              "id": 1512,
              "name": "searchService",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 183,
                  "character": 35
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbSearchService",
                "id": 1432
              }
            },
            {
              "id": 1507,
              "name": "searchType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 178,
                  "character": 20
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"rotate-layout\""
            },
            {
              "id": 1504,
              "name": "showSearch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.show'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 173,
                  "character": 39
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1502,
              "name": "tag",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Tags a search with some ID, can be later used in the search service\nto determine which search component triggered the action, if multiple searches exist on the page.",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 165,
                  "character": 14
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1513,
              "name": "themeService",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 184,
                  "character": 24
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbThemeService",
                "id": 774
              }
            },
            {
              "id": 1521,
              "name": "type",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Search design type, available types are\nmodal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1522,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Search design type, available types are\nmodal-zoomin, rotate-layout, modal-move, curtain, column-curtain, modal-drop, modal-half",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "{string}\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1523,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 194,
                  "character": 10
                }
              ]
            },
            {
              "id": 1526,
              "name": "connectToSearchField",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1527,
                  "name": "connectToSearchField",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1528,
                      "name": "componentRef",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 202,
                  "character": 22
                }
              ]
            },
            {
              "id": 1529,
              "name": "createAttachedSearch",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1530,
                  "name": "createAttachedSearch",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1531,
                      "name": "component",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 221,
                  "character": 22
                }
              ]
            },
            {
              "id": 1534,
              "name": "ngAfterViewInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1535,
                  "name": "ngAfterViewInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 260,
                  "character": 17
                }
              ]
            },
            {
              "id": 1536,
              "name": "ngOnDestroy",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1537,
                  "name": "ngOnDestroy",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 267,
                  "character": 13
                }
              ]
            },
            {
              "id": 1532,
              "name": "ngOnInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1533,
                  "name": "ngOnInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 228,
                  "character": 10
                }
              ]
            },
            {
              "id": 1524,
              "name": "openSearch",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1525,
                  "name": "openSearch",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 198,
                  "character": 12
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                1511
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1508,
                1505,
                1514,
                1509,
                1503,
                1515,
                1510,
                1506,
                1512,
                1507,
                1504,
                1502,
                1513
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                1521
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1526,
                1529,
                1534,
                1536,
                1532,
                1524
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/search/search.component.ts",
              "line": 157,
              "character": 30
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "name": "OnInit"
            },
            {
              "type": "reference",
              "name": "AfterViewInit"
            },
            {
              "type": "reference",
              "name": "OnDestroy"
            }
          ]
        },
        {
          "id": 1464,
          "name": "NbSearchFieldComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "search-field-component is used under the hood by nb-search component\ncan't be used itself"
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-search-field',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: [\r\n    'styles/search.component.modal-zoomin.scss',\r\n    'styles/search.component.layout-rotate.scss',\r\n    'styles/search.component.modal-move.scss',\r\n    'styles/search.component.curtain.scss',\r\n    'styles/search.component.column-curtain.scss',\r\n    'styles/search.component.modal-drop.scss',\r\n    'styles/search.component.modal-half.scss',\r\n  ],\r\n  template: `\r\n    <div class=\"search\" (keyup.esc)=\"closeSearch()\" >\r\n      <button (click)=\"closeSearch()\">\r\n        <i class=\"nb-close-circled\"></i>\r\n      </button>\r\n      <div class=\"form-wrapper\">\r\n        <form class=\"form\" (keyup.enter)=\"submitSearch(searchInput.value)\">\r\n          <div class=\"form-content\">\r\n            <input class=\"search-input\"\r\n              #searchInput\r\n              autocomplete=\"off\"\r\n              [attr.placeholder]=\"placeholder\"\r\n              tabindex=\"-1\"\r\n              (blur)=\"tabOut.next($event)\"/>\r\n          </div>\r\n          <span class=\"info\">Hit enter to search</span>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1477,
              "name": "inputElement",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "ViewChild",
                  "type": {
                    "type": "reference",
                    "name": "ViewChild"
                  },
                  "arguments": {
                    "selector": "'searchInput'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 77,
                  "character": 40
                }
              ],
              "type": {
                "type": "reference",
                "name": "ElementRef"
              }
            },
            {
              "id": 1473,
              "name": "placeholder",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 70,
                  "character": 22
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1475,
              "name": "search",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Output",
                  "type": {
                    "type": "reference",
                    "name": "Output"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 73,
                  "character": 18
                }
              ],
              "type": {
                "type": "reference",
                "name": "EventEmitter",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new EventEmitter()"
            },
            {
              "id": 1474,
              "name": "searchClose",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Output",
                  "type": {
                    "type": "reference",
                    "name": "Output"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 72,
                  "character": 23
                }
              ],
              "type": {
                "type": "reference",
                "name": "EventEmitter",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new EventEmitter()"
            },
            {
              "id": 1472,
              "name": "searchType",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 69,
                  "character": 21
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1478,
              "name": "showSearch",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                },
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.show'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 79,
                  "character": 48
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1476,
              "name": "tabOut",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Output",
                  "type": {
                    "type": "reference",
                    "name": "Output"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 74,
                  "character": 18
                }
              ],
              "type": {
                "type": "reference",
                "name": "EventEmitter",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new EventEmitter()"
            },
            {
              "id": 1469,
              "name": "TYPE_COLUMN_CURTAIN",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 65,
                  "character": 37
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "column-curtain"
              },
              "defaultValue": "\"column-curtain\""
            },
            {
              "id": 1468,
              "name": "TYPE_CURTAIN",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 64,
                  "character": 30
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "curtain"
              },
              "defaultValue": "\"curtain\""
            },
            {
              "id": 1470,
              "name": "TYPE_MODAL_DROP",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 66,
                  "character": 33
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "modal-drop"
              },
              "defaultValue": "\"modal-drop\""
            },
            {
              "id": 1471,
              "name": "TYPE_MODAL_HALF",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 67,
                  "character": 33
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "modal-half"
              },
              "defaultValue": "\"modal-half\""
            },
            {
              "id": 1467,
              "name": "TYPE_MODAL_MOVE",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 63,
                  "character": 33
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "modal-move"
              },
              "defaultValue": "\"modal-move\""
            },
            {
              "id": 1465,
              "name": "TYPE_MODAL_ZOOMIN",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 61,
                  "character": 35
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "modal-zoomin"
              },
              "defaultValue": "\"modal-zoomin\""
            },
            {
              "id": 1466,
              "name": "TYPE_ROTATE_LAYOUT",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 62,
                  "character": 36
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "rotate-layout"
              },
              "defaultValue": "\"rotate-layout\""
            },
            {
              "id": 1487,
              "name": "columnCurtain",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.column-curtain'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1488,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 102,
                  "character": 19
                }
              ]
            },
            {
              "id": 1485,
              "name": "curtain",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.curtain'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1486,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 97,
                  "character": 13
                }
              ]
            },
            {
              "id": 1489,
              "name": "modalDrop",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.modal-drop'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1490,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 107,
                  "character": 15
                }
              ]
            },
            {
              "id": 1491,
              "name": "modalHalf",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.modal-half'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1492,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 112,
                  "character": 15
                }
              ]
            },
            {
              "id": 1483,
              "name": "modalMove",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.modal-move'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1484,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 92,
                  "character": 15
                }
              ]
            },
            {
              "id": 1479,
              "name": "modalZoomin",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.modal-zoomin'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1480,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 82,
                  "character": 17
                }
              ]
            },
            {
              "id": 1481,
              "name": "rotateLayout",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.rotate-layout'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1482,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 87,
                  "character": 18
                }
              ]
            },
            {
              "id": 1493,
              "name": "type",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1494,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1495,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 117,
                  "character": 10
                }
              ]
            },
            {
              "id": 1496,
              "name": "closeSearch",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1497,
                  "name": "closeSearch",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 121,
                  "character": 13
                }
              ]
            },
            {
              "id": 1498,
              "name": "submitSearch",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1499,
                  "name": "submitSearch",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1500,
                      "name": "term",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.component.ts",
                  "line": 125,
                  "character": 14
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1477,
                1473,
                1475,
                1474,
                1472,
                1478,
                1476,
                1469,
                1468,
                1470,
                1471,
                1467,
                1465,
                1466
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                1487,
                1485,
                1489,
                1491,
                1483,
                1479,
                1481,
                1493
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1496,
                1498
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/search/search.component.ts",
              "line": 59,
              "character": 35
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1501,
            1464
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/search/search.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1538,
      "name": "\"theme/components/search/search.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/search/search.module.ts",
      "children": [
        {
          "id": 1539,
          "name": "NbSearchModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  imports: [\r\n    NbSharedModule,\r\n  ],\r\n  declarations: [\r\n    NbSearchComponent,\r\n    NbSearchFieldComponent,\r\n  ],\r\n  exports: [\r\n    NbSearchComponent,\r\n    NbSearchFieldComponent,\r\n  ],\r\n  providers: [\r\n    NbSearchService,\r\n  ],\r\n  entryComponents: [\r\n    NbSearchFieldComponent,\r\n  ],\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/search/search.module.ts",
              "line": 32,
              "character": 27
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1539
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/search/search.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1431,
      "name": "\"theme/components/search/search.service\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/search/search.service.ts",
      "children": [
        {
          "id": 1432,
          "name": "NbSearchService",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Search component service, connects you code to a page-level search component."
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 1434,
              "name": "searchActivations$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.service.ts",
                  "line": 18,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new Subject()"
            },
            {
              "id": 1435,
              "name": "searchDeactivations$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.service.ts",
                  "line": 19,
                  "character": 30
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new Subject()"
            },
            {
              "id": 1433,
              "name": "searchSubmittings$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/search/search.service.ts",
                  "line": 17,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new Subject()"
            },
            {
              "id": 1436,
              "name": "activateSearch",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1437,
                  "name": "activateSearch",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Activate (open) search component"
                  },
                  "parameters": [
                    {
                      "id": 1438,
                      "name": "searchType",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1439,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "text": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.service.ts",
                  "line": 26,
                  "character": 16
                }
              ]
            },
            {
              "id": 1440,
              "name": "deactivateSearch",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1441,
                  "name": "deactivateSearch",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Deactibate (close) search component"
                  },
                  "parameters": [
                    {
                      "id": 1442,
                      "name": "searchType",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1443,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "text": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.service.ts",
                  "line": 35,
                  "character": 18
                }
              ]
            },
            {
              "id": 1448,
              "name": "onSearchActivate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1449,
                  "name": "onSearchActivate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Subscribe to 'activate' event",
                    "returns": "Observable<{searchType: string; tag?: string}>\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1450,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1451,
                              "name": "searchType",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/search/search.service.ts",
                                  "line": 52,
                                  "character": 45
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1452,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "theme/components/search/search.service.ts",
                                  "line": 52,
                                  "character": 58
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1451,
                                1452
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/search/search.service.ts",
                              "line": 52,
                              "character": 33
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.service.ts",
                  "line": 52,
                  "character": 18
                }
              ]
            },
            {
              "id": 1453,
              "name": "onSearchDeactivate",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1454,
                  "name": "onSearchDeactivate",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Subscribe to 'deactivate' event",
                    "returns": "Observable<{searchType: string; tag?: string}>\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1455,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1456,
                              "name": "searchType",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/search/search.service.ts",
                                  "line": 60,
                                  "character": 47
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1457,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "theme/components/search/search.service.ts",
                                  "line": 60,
                                  "character": 60
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1456,
                                1457
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/search/search.service.ts",
                              "line": 60,
                              "character": 35
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.service.ts",
                  "line": 60,
                  "character": 20
                }
              ]
            },
            {
              "id": 1458,
              "name": "onSearchSubmit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1459,
                  "name": "onSearchSubmit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Subscribe to 'submit' event (when submit button clicked)",
                    "returns": "Observable<{term: string; tag?: string}>\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1460,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1462,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "theme/components/search/search.service.ts",
                                  "line": 68,
                                  "character": 50
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1461,
                              "name": "term",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/search/search.service.ts",
                                  "line": 68,
                                  "character": 37
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1462,
                                1461
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/search/search.service.ts",
                              "line": 68,
                              "character": 31
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.service.ts",
                  "line": 68,
                  "character": 16
                }
              ]
            },
            {
              "id": 1444,
              "name": "submitSearch",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1445,
                  "name": "submitSearch",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Trigger search submit"
                  },
                  "parameters": [
                    {
                      "id": 1446,
                      "name": "term",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1447,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "text": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/search/search.service.ts",
                  "line": 44,
                  "character": 14
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1434,
                1435,
                1433
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1436,
                1440,
                1448,
                1453,
                1458,
                1444
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/search/search.service.ts",
              "line": 16,
              "character": 28
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1432
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/search/search.service.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 849,
      "name": "\"theme/components/shared/shared.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/shared/shared.module.ts",
      "children": [
        {
          "id": 850,
          "name": "NbSharedModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  exports: [\r\n    CommonModule,\r\n    // TODO: probably we don't need FormsModule in SharedModule\r\n    FormsModule,\r\n    RouterModule,\r\n  ],\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/shared/shared.module.ts",
              "line": 20,
              "character": 27
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            850
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/shared/shared.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1220,
      "name": "\"theme/components/sidebar/sidebar.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/sidebar/sidebar.component.ts",
      "children": [
        {
          "id": 1223,
          "name": "NbSidebarComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Layout sidebar component.",
            "text": "Sidebar can be place on the left or the right side of the layout, can be fixed (shown above the content)\nor can push the layout when opened.\n\nThere are three states - `expanded`, `collapsed`, `compacted`.\nBy default sidebar content is fixed and saves its position while the page is being scrolled.\n\nSidebar also supports a `responsive` behavior, listening to window size change and changing its size respectably.\n",
            "tags": [
              {
                "tag": "example",
                "text": "Minimal sidebar example\n```\n<nb-sidebar>\n  Sidebar content.\n</nb-sidebar>\n```\n"
              },
              {
                "tag": "example",
                "text": "Example of fixed sidebar located on the left side, initially collapsed.\n\n```\n<nb-sidebar left fixed state=\"collapsed\">\n <nb-sidebar-header>Header</nb-sidebar-header>\n <nb-sidebar-content>\n   Menu or another component here\n </nb-sidebar-content>\n <nb-sidebar-footer>\n   Footer components here\n </nb-sidebar-footer>\n</nb-sidebar>\n```\n"
              },
              {
                "tag": "styles",
                "text": "\n\nsidebar-font-size: Sidebar content font size\nsidebar-line-height: Sidebar content line height\nsidebar-fg: Foreground color\nsidebar-bg: Background color\nsidebar-height: Content height\nsidebar-width: Expanded width\nsidebar-width-compact: Compacted width\nsidebar-padding: Sidebar content padding\nsidebar-header-height: Sidebar header height\nsidebar-footer-height: Sidebar footer height\nsidebar-shadow: Sidebar container shadow\n\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-sidebar',\r\n  styleUrls: ['./sidebar.component.scss'],\r\n  template: `\r\n    <div class=\"main-container\">\r\n      <ng-content select=\"nb-sidebar-header\"></ng-content>\r\n      <div class=\"scrollable\" (click)=\"onClick($event)\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n      <ng-content select=\"nb-sidebar-footer\"></ng-content>\r\n    </div>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1262,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1266,
                  "name": "new NbSidebarComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1267,
                      "name": "sidebarService",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbSidebarService",
                        "id": 1193
                      }
                    },
                    {
                      "id": 1268,
                      "name": "themeService",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbThemeService",
                        "id": 774
                      }
                    },
                    {
                      "id": 1269,
                      "name": "element",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "ElementRef"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbSidebarComponent",
                    "id": 1223
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 197,
                  "character": 67
                }
              ]
            },
            {
              "id": 1259,
              "name": "collapseSubscription",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 195,
                  "character": 30
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subscription"
              }
            },
            {
              "id": 1265,
              "name": "element",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 201,
                  "character": 29
                }
              ],
              "type": {
                "type": "reference",
                "name": "ElementRef"
              }
            },
            {
              "id": 1258,
              "name": "expandSubscription",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 194,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subscription"
              }
            },
            {
              "id": 1232,
              "name": "fixedValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.fixed'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 119,
                  "character": 40
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1234,
              "name": "leftValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.left'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 121,
                  "character": 38
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "true"
            },
            {
              "id": 1260,
              "name": "mediaQuerySubscription",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 196,
                  "character": 32
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subscription"
              }
            },
            {
              "id": 1261,
              "name": "responsiveState",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 197,
                  "character": 25
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": " NbSidebarComponent.RESPONSIVE_STATE_PC"
            },
            {
              "id": 1231,
              "name": "responsiveValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 117,
                  "character": 27
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1233,
              "name": "rightValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.right'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 120,
                  "character": 40
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1263,
              "name": "sidebarService",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 199,
                  "character": 36
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbSidebarService",
                "id": 1193
              }
            },
            {
              "id": 1230,
              "name": "stateValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 116,
                  "character": 22
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1256,
              "name": "tag",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Tags a sidebar with some ID, can be later used in the sidebar service\nto determine which sidebar triggered the action, if multiple sidebars exist on the page.",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 191,
                  "character": 14
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1264,
              "name": "themeService",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 200,
                  "character": 34
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbThemeService",
                "id": 774
              }
            },
            {
              "id": 1257,
              "name": "toggleSubscription",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 193,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subscription"
              }
            },
            {
              "id": 1227,
              "name": "RESPONSIVE_STATE_MOBILE",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 112,
                  "character": 41
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"mobile\""
            },
            {
              "id": 1229,
              "name": "RESPONSIVE_STATE_PC",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 114,
                  "character": 37
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"pc\""
            },
            {
              "id": 1228,
              "name": "RESPONSIVE_STATE_TABLET",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 113,
                  "character": 41
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"tablet\""
            },
            {
              "id": 1225,
              "name": "STATE_COLLAPSED",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 109,
                  "character": 33
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"collapsed\""
            },
            {
              "id": 1226,
              "name": "STATE_COMPACTED",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 110,
                  "character": 33
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"compacted\""
            },
            {
              "id": 1224,
              "name": "STATE_EXPANDED",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 108,
                  "character": 32
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"expanded\""
            },
            {
              "id": 1237,
              "name": "collapsed",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.collapsed'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1238,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 129,
                  "character": 15
                }
              ]
            },
            {
              "id": 1239,
              "name": "compacted",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.compacted'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1240,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 133,
                  "character": 15
                }
              ]
            },
            {
              "id": 1235,
              "name": "expanded",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.expanded'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1236,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 125,
                  "character": 14
                }
              ]
            },
            {
              "id": 1247,
              "name": "fixed",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Makes sidebar fixed (shown above the layout content)",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{boolean}\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1248,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Makes sidebar fixed (shown above the layout content)",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "{boolean}\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1249,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 162,
                  "character": 11
                }
              ]
            },
            {
              "id": 1244,
              "name": "left",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Places sidebar on the right side",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{boolean}\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1245,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Places sidebar on the right side",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "{boolean}\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1246,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 152,
                  "character": 10
                }
              ]
            },
            {
              "id": 1253,
              "name": "responsive",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Makes sidebar listen to media query events and change its behaviour",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{boolean}\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1254,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Makes sidebar listen to media query events and change its behaviour",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "{boolean}\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1255,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 180,
                  "character": 16
                }
              ]
            },
            {
              "id": 1241,
              "name": "right",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Places sidebar on the left side",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{boolean}\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1242,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Places sidebar on the left side",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "{boolean}\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1243,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 142,
                  "character": 11
                }
              ]
            },
            {
              "id": 1250,
              "name": "state",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Initial sidebar state, `expanded`|`collapsed`|`compacted`",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1251,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Initial sidebar state, `expanded`|`collapsed`|`compacted`",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "{string}\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1252,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 171,
                  "character": 11
                }
              ]
            },
            {
              "id": 1280,
              "name": "collapse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1281,
                  "name": "collapse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Collapses the sidebar"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 254,
                  "character": 10
                }
              ]
            },
            {
              "id": 1284,
              "name": "compact",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1285,
                  "name": "compact",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Compacts the sidebar (minimizes)"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 268,
                  "character": 9
                }
              ]
            },
            {
              "id": 1282,
              "name": "expand",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1283,
                  "name": "expand",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Expands the sidebar"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 261,
                  "character": 8
                }
              ]
            },
            {
              "id": 1275,
              "name": "ngOnDestroy",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1276,
                  "name": "ngOnDestroy",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 235,
                  "character": 13
                }
              ]
            },
            {
              "id": 1273,
              "name": "ngOnInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1274,
                  "name": "ngOnInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 212,
                  "character": 10
                }
              ]
            },
            {
              "id": 1277,
              "name": "onClick",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1278,
                  "name": "onClick",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1279,
                      "name": "event",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 244,
                  "character": 9
                }
              ]
            },
            {
              "id": 1289,
              "name": "onMediaQueryChanges",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 1290,
                  "name": "onMediaQueryChanges",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Subscription"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 300,
                  "character": 31
                }
              ]
            },
            {
              "id": 1291,
              "name": "responsiveEnabled",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true,
                "isProtected": true
              },
              "signatures": [
                {
                  "id": 1292,
                  "name": "responsiveEnabled",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 325,
                  "character": 29
                }
              ]
            },
            {
              "id": 1286,
              "name": "toggle",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1287,
                  "name": "toggle",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Toggles sidebar state (expanded|collapsed|compacted)",
                    "tags": [
                      {
                        "tag": "example",
                        "text": "Toggle sidebar state\n\n```\nthis.sidebar.toggle(true);\n```\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1288,
                      "name": "compact",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "If true, then sidebar state will be changed between expanded & compacted,\notherwise - between expanded & collapsed. False by default.\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "defaultValue": "false"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 283,
                  "character": 8
                }
              ]
            },
            {
              "id": 1270,
              "name": "toggleResponsive",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1271,
                  "name": "toggleResponsive",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1272,
                      "name": "enabled",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.component.ts",
                  "line": 204,
                  "character": 18
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                1262
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1259,
                1265,
                1258,
                1232,
                1234,
                1260,
                1261,
                1231,
                1233,
                1263,
                1230,
                1256,
                1264,
                1257,
                1227,
                1229,
                1228,
                1225,
                1226,
                1224
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                1237,
                1239,
                1235,
                1247,
                1244,
                1253,
                1241,
                1250
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1280,
                1284,
                1282,
                1275,
                1273,
                1277,
                1289,
                1291,
                1286,
                1270
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/sidebar/sidebar.component.ts",
              "line": 106,
              "character": 31
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "name": "OnInit"
            },
            {
              "type": "reference",
              "name": "OnDestroy"
            }
          ]
        },
        {
          "id": 1222,
          "name": "NbSidebarFooterComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Sidebar footer container.",
            "text": "Placeholder which contains a sidebar footer content,\nplaced at the very bottom of the sidebar outside of the scroll area.\n"
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-sidebar-footer',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/sidebar/sidebar.component.ts",
              "line": 43,
              "character": 37
            }
          ]
        },
        {
          "id": 1221,
          "name": "NbSidebarHeaderComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Sidebar header container.",
            "text": "Placeholder which contains a sidebar header content,\nplaced at the very top of the sidebar outside of the scroll area.\n"
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-sidebar-header',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/sidebar/sidebar.component.ts",
              "line": 28,
              "character": 37
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1223,
            1222,
            1221
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/sidebar/sidebar.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1293,
      "name": "\"theme/components/sidebar/sidebar.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/sidebar/sidebar.module.ts",
      "children": [
        {
          "id": 1294,
          "name": "NbSidebarModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  imports: [\r\n    NbSharedModule,\r\n  ],\r\n  declarations: [\r\n    ...NB_SIDEBAR_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...NB_SIDEBAR_COMPONENTS,\r\n  ],\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1295,
              "name": "forRoot",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1296,
                  "name": "forRoot",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ModuleWithProviders"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.module.ts",
                  "line": 41,
                  "character": 16
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1295
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/sidebar/sidebar.module.ts",
              "line": 40,
              "character": 28
            }
          ]
        },
        {
          "id": 1297,
          "name": "NB_SIDEBAR_COMPONENTS",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/sidebar/sidebar.module.ts",
              "line": 19,
              "character": 27
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "Object"
          },
          "defaultValue": " [\r\n  NbSidebarComponent,\r\n  NbSidebarFooterComponent,\r\n  NbSidebarHeaderComponent,\r\n]"
        },
        {
          "id": 1298,
          "name": "NB_SIDEBAR_PROVIDERS",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/sidebar/sidebar.module.ts",
              "line": 25,
              "character": 26
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "Object"
          },
          "defaultValue": " [\r\n  NbSidebarService,\r\n]"
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1294
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            1297,
            1298
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/sidebar/sidebar.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1192,
      "name": "\"theme/components/sidebar/sidebar.service\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/sidebar/sidebar.service.ts",
      "children": [
        {
          "id": 1193,
          "name": "NbSidebarService",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Sidebar service.",
            "text": "Root module service to control the sidebar from any part of the app.\n"
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 1196,
              "name": "collapse$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                  "line": 22,
                  "character": 19
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new Subject()"
            },
            {
              "id": 1195,
              "name": "expand$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                  "line": 21,
                  "character": 17
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new Subject()"
            },
            {
              "id": 1194,
              "name": "toggle$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                  "line": 20,
                  "character": 17
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new Subject()"
            },
            {
              "id": 1217,
              "name": "collapse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1218,
                  "name": "collapse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Collapses a sidebar"
                  },
                  "parameters": [
                    {
                      "id": 1219,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "text": "If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\nto specify which sidebar you want to control\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                  "line": 73,
                  "character": 10
                }
              ]
            },
            {
              "id": 1214,
              "name": "expand",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1215,
                  "name": "expand",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Expands a sidebar"
                  },
                  "parameters": [
                    {
                      "id": 1216,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "text": "tag If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\nto specify which sidebar you want to control\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                  "line": 64,
                  "character": 8
                }
              ]
            },
            {
              "id": 1206,
              "name": "onCollapse",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1207,
                  "name": "onCollapse",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Subscribe to collapse evens",
                    "returns": "Observable<{ tag: string }>\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1208,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1209,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                                  "line": 45,
                                  "character": 32
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1209
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/sidebar/sidebar.service.ts",
                              "line": 45,
                              "character": 27
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                  "line": 45,
                  "character": 12
                }
              ]
            },
            {
              "id": 1202,
              "name": "onExpand",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1203,
                  "name": "onExpand",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Subscribe to expand events",
                    "returns": "Observable<{ tag: string }>\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1204,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1205,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                                  "line": 37,
                                  "character": 30
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1205
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/sidebar/sidebar.service.ts",
                              "line": 37,
                              "character": 25
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                  "line": 37,
                  "character": 10
                }
              ]
            },
            {
              "id": 1197,
              "name": "onToggle",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1198,
                  "name": "onToggle",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Subscribe to toggle events",
                    "returns": "Observable<{ compact: boolean, tag: string }>\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1199,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 1200,
                              "name": "compact",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                                  "line": 29,
                                  "character": 34
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 1201,
                              "name": "tag",
                              "kind": 32,
                              "kindString": "Variable",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                                  "line": 29,
                                  "character": 48
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Variables",
                              "kind": 32,
                              "children": [
                                1200,
                                1201
                              ]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "theme/components/sidebar/sidebar.service.ts",
                              "line": 29,
                              "character": 25
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                  "line": 29,
                  "character": 10
                }
              ]
            },
            {
              "id": 1210,
              "name": "toggle",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1211,
                  "name": "toggle",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Toggle a sidebar"
                  },
                  "parameters": [
                    {
                      "id": 1212,
                      "name": "compact",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "defaultValue": "false"
                    },
                    {
                      "id": 1213,
                      "name": "tag",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "text": "tag If you have multiple sidebars on the page, mark them with `tag` input property and pass it here\nto specify which sidebar you want to control\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/sidebar/sidebar.service.ts",
                  "line": 55,
                  "character": 8
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1196,
                1195,
                1194
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1217,
                1214,
                1206,
                1202,
                1197,
                1210
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/sidebar/sidebar.service.ts",
              "line": 18,
              "character": 29
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1193
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/sidebar/sidebar.service.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1299,
      "name": "\"theme/components/tabset/tabset.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/tabset/tabset.component.ts",
      "children": [
        {
          "id": 1300,
          "name": "NbTabComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Specific tab container."
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-tab',\r\n  template: `\r\n    <ng-container *ngIf=\"init\">\r\n      <ng-content></ng-content>\r\n    </ng-container>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1303,
              "name": "activeValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.content-active'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 39,
                  "character": 13
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1308,
              "name": "init",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 53,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1302,
              "name": "route",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 36,
                  "character": 16
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1301,
              "name": "tabTitle",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 34,
                  "character": 19
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1304,
              "name": "active",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "getSignature": [
                {
                  "id": 1305,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "setSignature": [
                {
                  "id": 1306,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1307,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 42,
                  "character": 12
                },
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 45,
                  "character": 12
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1303,
                1308,
                1302,
                1301
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                1304
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/tabset/tabset.component.ts",
              "line": 32,
              "character": 27
            }
          ]
        },
        {
          "id": 1309,
          "name": "NbTabsetComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Dynamic tabset component.\nRenders `<nb-tab></ng-tab> containers inside.",
            "tags": [
              {
                "tag": "example",
                "text": "Basic tabset example\n\n```\n<nb-tabset>\n <nb-tab tabTitle=\"Simple Tab #1\">\n   Tab content 1\n </nb-tab>\n <nb-tab tabTitle=\"Simple Tab #2\">\n   Tab content 2\n </nb-tab>\n</nb-tabset>\n"
              },
              {
                "tag": "styles",
                "text": "\n\ntabs-font-family:\ntabs-font-size:\ntabs-content-font-family:\ntabs-content-font-size:\ntabs-active-bg:\ntabs-active-font-weight:\ntabs-padding:\ntabs-content-padding:\ntabs-header-bg:\ntabs-separator:\ntabs-fg:\ntabs-fg-text:\ntabs-fg-heading:\ntabs-bg:\ntabs-selected:\n\n```\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-tabset',\r\n  styleUrls: ['./tabset.component.scss'],\r\n  template: `\r\n    <ul>\r\n      <li *ngFor=\"let tab of tabs\"\r\n          (click)=\"selectTab(tab)\"\r\n          [class.active]=\"tab.active\">\r\n        <a href (click)=\"$event.preventDefault()\">{{ tab.tabTitle }}</a>\r\n      </li>\r\n    </ul>\r\n    <ng-content select=\"nb-tab\"></ng-content>\r\n  `,\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1317,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1319,
                  "name": "new NbTabsetComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1320,
                      "name": "route",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "ActivatedRoute"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbTabsetComponent",
                    "id": 1309
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 137,
                  "character": 48
                }
              ]
            },
            {
              "id": 1316,
              "name": "changeTab",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Emits when tab is selected",
                "tags": [
                  {
                    "tag": "type",
                    "text": "EventEmitter<any>\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Output",
                  "type": {
                    "type": "reference",
                    "name": "Output"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 137,
                  "character": 21
                }
              ],
              "type": {
                "type": "reference",
                "name": "EventEmitter",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ]
              },
              "defaultValue": " new EventEmitter<any>()"
            },
            {
              "id": 1311,
              "name": "fullWidthValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.full-width'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 116,
                  "character": 24
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1318,
              "name": "route",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 139,
                  "character": 27
                }
              ],
              "type": {
                "type": "reference",
                "name": "ActivatedRoute"
              }
            },
            {
              "id": 1315,
              "name": "routeParam",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "If specified - tabset listens to this parameter and selects corresponding tab.",
                "tags": [
                  {
                    "tag": "type",
                    "text": "{string}\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 131,
                  "character": 21
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1310,
              "name": "tabs",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "ContentChildren",
                  "type": {
                    "type": "reference",
                    "name": "ContentChildren"
                  },
                  "arguments": {
                    "selector": "NbTabComponent"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 113,
                  "character": 39
                }
              ],
              "type": {
                "type": "reference",
                "name": "QueryList",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "NbTabComponent",
                    "id": 1300
                  }
                ]
              }
            },
            {
              "id": 1312,
              "name": "fullWidth",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Take full width of a parent"
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1313,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Take full width of a parent"
                  },
                  "parameters": [
                    {
                      "id": 1314,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "shortText": "\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 123,
                  "character": 15
                }
              ]
            },
            {
              "id": 1321,
              "name": "ngAfterContentInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1322,
                  "name": "ngAfterContentInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 142,
                  "character": 20
                }
              ]
            },
            {
              "id": 1323,
              "name": "selectTab",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1324,
                  "name": "selectTab",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1325,
                      "name": "selectedTab",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbTabComponent",
                        "id": 1300
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/tabset/tabset.component.ts",
                  "line": 151,
                  "character": 11
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                1317
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1316,
                1311,
                1318,
                1315,
                1310
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                1312
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1321,
                1323
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/tabset/tabset.component.ts",
              "line": 111,
              "character": 30
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "name": "AfterContentInit"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1300,
            1309
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/tabset/tabset.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1326,
      "name": "\"theme/components/tabset/tabset.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/tabset/tabset.module.ts",
      "children": [
        {
          "id": 1327,
          "name": "NbTabsetModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  imports: [\r\n    NbSharedModule,\r\n  ],\r\n  declarations: [\r\n    ...NB_TABSET_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...NB_TABSET_COMPONENTS,\r\n  ],\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/tabset/tabset.module.ts",
              "line": 29,
              "character": 27
            }
          ]
        },
        {
          "id": 1328,
          "name": "NB_TABSET_COMPONENTS",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/tabset/tabset.module.ts",
              "line": 13,
              "character": 26
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "Object"
          },
          "defaultValue": " [\r\n  NbTabsetComponent,\r\n  NbTabComponent,\r\n]"
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1327
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            1328
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/tabset/tabset.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1329,
      "name": "\"theme/components/user/user.component\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/user/user.component.ts",
      "children": [
        {
          "id": 1336,
          "name": "NbUserComponent",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Represents a component showing a user avatar (picture) with a user name on the right.",
            "text": "Can be used as a user profile link or can bring a user context menu.\n",
            "tags": [
              {
                "tag": "styles",
                "text": "\n\nuser-font-size:\nuser-line-height:\nuser-bg:\nuser-fg:\nuser-fg-highlight:\nuser-font-family-secondary:\nuser-size-small:\nuser-size-medium:\nuser-size-large:\nuser-size-xlarge:\nuser-menu-fg:\nuser-menu-bg:\nuser-menu-active-fg:\nuser-menu-active-bg:\nuser-menu-border:\n"
              }
            ]
          },
          "decorators": [
            {
              "name": "Component",
              "type": {
                "type": "reference",
                "name": "Component"
              },
              "arguments": {
                "obj": "{\r\n  selector: 'nb-user',\r\n  styleUrls: ['./user.component.scss'],\r\n  templateUrl: './user.component.html',\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 1379,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1381,
                  "name": "new NbUserComponent",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1382,
                      "name": "el",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "ElementRef"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbUserComponent",
                    "id": 1336
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 202,
                  "character": 31
                }
              ]
            },
            {
              "id": 1354,
              "name": "color",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Color of the area shown when no picture specified",
                "tags": [
                  {
                    "tag": "type",
                    "text": "string\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 131,
                  "character": 16
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1380,
              "name": "el",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 204,
                  "character": 24
                }
              ],
              "type": {
                "type": "reference",
                "name": "ElementRef"
              }
            },
            {
              "id": 1342,
              "name": "inverseValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.inverse'"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 86,
                  "character": 44
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1378,
              "name": "isMenuShown",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 202,
                  "character": 13
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "false"
            },
            {
              "id": 1355,
              "name": "menu",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "List of menu items for a user context menu (shown when clicked)",
                "tags": [
                  {
                    "tag": "type",
                    "text": "NbUserMenuItem[]\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 137,
                  "character": 15
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "NbUserMenuItem",
                  "id": 1330
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 1374,
              "name": "menuClick",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Outputs when a context menu item is clicked",
                "tags": [
                  {
                    "tag": "type",
                    "text": "EventEmitter<NbUserMenuItem>\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Output",
                  "type": {
                    "type": "reference",
                    "name": "Output"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 197,
                  "character": 21
                }
              ],
              "type": {
                "type": "reference",
                "name": "EventEmitter",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "NbUserMenuItem",
                    "id": 1330
                  }
                ]
              },
              "defaultValue": " new EventEmitter<NbUserMenuItem>()"
            },
            {
              "id": 1351,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Specifies a name to be shown on the right of a user picture",
                "tags": [
                  {
                    "tag": "type",
                    "text": "string\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 112,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"Anonymous\""
            },
            {
              "id": 1353,
              "name": "picture",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Absolute path to a user picture\nUser name initials (JD for John Doe) will be shown if no picture specified",
                "tags": [
                  {
                    "tag": "type",
                    "text": "string\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 125,
                  "character": 18
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1377,
              "name": "showInitialsValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 201,
                  "character": 19
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "true"
            },
            {
              "id": 1375,
              "name": "showNameValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 199,
                  "character": 15
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "true"
            },
            {
              "id": 1376,
              "name": "showTitleValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 200,
                  "character": 16
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "defaultValue": "true"
            },
            {
              "id": 1341,
              "name": "sizeValue",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 84,
                  "character": 19
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1352,
              "name": "title",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Specifies a title (written in a smaller font) to be shown under the **name**",
                "tags": [
                  {
                    "tag": "type",
                    "text": "string\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 118,
                  "character": 16
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1339,
              "name": "SIZE_LARGE",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 81,
                  "character": 28
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "large"
              },
              "defaultValue": "\"large\""
            },
            {
              "id": 1338,
              "name": "SIZE_MEDIUM",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 80,
                  "character": 29
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "medium"
              },
              "defaultValue": "\"medium\""
            },
            {
              "id": 1337,
              "name": "SIZE_SMALL",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 79,
                  "character": 28
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "small"
              },
              "defaultValue": "\"small\""
            },
            {
              "id": 1340,
              "name": "SIZE_XLARGE",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 82,
                  "character": 29
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "xlarge"
              },
              "defaultValue": "\"xlarge\""
            },
            {
              "id": 1371,
              "name": "inverse",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Makes colors inverse based on current theme",
                "tags": [
                  {
                    "tag": "type",
                    "text": "boolean\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1372,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Makes colors inverse based on current theme",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "boolean\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1373,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 189,
                  "character": 13
                }
              ]
            },
            {
              "id": 1347,
              "name": "large",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.large'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1348,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 99,
                  "character": 11
                }
              ]
            },
            {
              "id": 1345,
              "name": "medium",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.medium'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1346,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 94,
                  "character": 12
                }
              ]
            },
            {
              "id": 1368,
              "name": "onlyPicture",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Whether to show only a picture or also show the name and title",
                "tags": [
                  {
                    "tag": "type",
                    "text": "boolean\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1369,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Whether to show only a picture or also show the name and title",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "boolean\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1370,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 180,
                  "character": 17
                }
              ]
            },
            {
              "id": 1365,
              "name": "showInitials",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Whether to show a user initials (if no picture specified) or not",
                "tags": [
                  {
                    "tag": "type",
                    "text": "boolean\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1366,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Whether to show a user initials (if no picture specified) or not",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "boolean\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1367,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 171,
                  "character": 18
                }
              ]
            },
            {
              "id": 1359,
              "name": "showName",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Whether to show a user name or not",
                "tags": [
                  {
                    "tag": "type",
                    "text": "boolean\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1360,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Whether to show a user name or not",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "boolean\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1361,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 153,
                  "character": 14
                }
              ]
            },
            {
              "id": 1362,
              "name": "showTitle",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Whether to show a user title or not",
                "tags": [
                  {
                    "tag": "type",
                    "text": "boolean\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1363,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Whether to show a user title or not",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "boolean\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1364,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 162,
                  "character": 15
                }
              ]
            },
            {
              "id": 1356,
              "name": "size",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Size of the component, small|medium|large",
                "tags": [
                  {
                    "tag": "type",
                    "text": "string\n"
                  }
                ]
              },
              "decorators": [
                {
                  "name": "Input",
                  "type": {
                    "type": "reference",
                    "name": "Input"
                  },
                  "arguments": {}
                }
              ],
              "setSignature": [
                {
                  "id": 1357,
                  "name": "__set",
                  "kind": 1048576,
                  "kindString": "Set signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Size of the component, small|medium|large",
                    "tags": [
                      {
                        "tag": "type",
                        "text": "string\n"
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1358,
                      "name": "val",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 144,
                  "character": 10
                }
              ]
            },
            {
              "id": 1343,
              "name": "small",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.small'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1344,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 89,
                  "character": 11
                }
              ]
            },
            {
              "id": 1349,
              "name": "xlarge",
              "kind": 262144,
              "kindString": "Accessor",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostBinding",
                  "type": {
                    "type": "reference",
                    "name": "HostBinding"
                  },
                  "arguments": {
                    "hostPropertyName": "'class.xlarge'"
                  }
                }
              ],
              "getSignature": [
                {
                  "id": 1350,
                  "name": "__get",
                  "kind": 524288,
                  "kindString": "Get signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 104,
                  "character": 12
                }
              ]
            },
            {
              "id": 1392,
              "name": "getInitials",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1393,
                  "name": "getInitials",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 225,
                  "character": 13
                }
              ]
            },
            {
              "id": 1394,
              "name": "hasMenu",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1395,
                  "name": "hasMenu",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 235,
                  "character": 9
                }
              ]
            },
            {
              "id": 1389,
              "name": "hideMenu",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "decorators": [
                {
                  "name": "HostListener",
                  "type": {
                    "type": "reference",
                    "name": "HostListener"
                  },
                  "arguments": {
                    "eventName": "'document:click'",
                    "args": "['$event']"
                  }
                }
              ],
              "signatures": [
                {
                  "id": 1390,
                  "name": "hideMenu",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1391,
                      "name": "event",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 219,
                  "character": 10
                }
              ]
            },
            {
              "id": 1383,
              "name": "itemClick",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1384,
                  "name": "itemClick",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1385,
                      "name": "event",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 1386,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbUserMenuItem",
                        "id": 1330
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 206,
                  "character": 11
                }
              ]
            },
            {
              "id": 1387,
              "name": "toggleMenu",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 1388,
                  "name": "toggleMenu",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Toggles a context menu"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 214,
                  "character": 12
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                1379
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1354,
                1380,
                1342,
                1378,
                1355,
                1374,
                1351,
                1353,
                1377,
                1375,
                1376,
                1341,
                1352,
                1339,
                1338,
                1337,
                1340
              ]
            },
            {
              "title": "Accessors",
              "kind": 262144,
              "children": [
                1371,
                1347,
                1345,
                1368,
                1365,
                1359,
                1362,
                1356,
                1343,
                1349
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                1392,
                1394,
                1389,
                1383,
                1387
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/user/user.component.ts",
              "line": 69,
              "character": 28
            }
          ]
        },
        {
          "id": 1330,
          "name": "NbUserMenuItem",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Action dropdown menu"
          },
          "children": [
            {
              "id": 1335,
              "name": "icon",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Icon class",
                "tags": [
                  {
                    "tag": "type",
                    "text": "string\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 38,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1332,
              "name": "link",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Menu link for [routerLink] directive",
                "tags": [
                  {
                    "tag": "type",
                    "text": "string\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 23,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1334,
              "name": "target",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Link target (_blank, _self, etc)",
                "tags": [
                  {
                    "tag": "type",
                    "text": "string\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 33,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1331,
              "name": "title",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Menu title",
                "tags": [
                  {
                    "tag": "type",
                    "text": "string\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 18,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1333,
              "name": "url",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "URL for absolute urls, used directly in href",
                "tags": [
                  {
                    "tag": "type",
                    "text": "string\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "theme/components/user/user.component.ts",
                  "line": 28,
                  "character": 5
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                1335,
                1332,
                1334,
                1331,
                1333
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/user/user.component.ts",
              "line": 13,
              "character": 27
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1336,
            1330
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/user/user.component.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1396,
      "name": "\"theme/components/user/user.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/components/user/user.module.ts",
      "children": [
        {
          "id": 1397,
          "name": "NbUserModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  imports: [\r\n    NbSharedModule,\r\n  ],\r\n  declarations: [\r\n    ...NB_USER_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...NB_USER_COMPONENTS,\r\n  ],\r\n}"
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/components/user/user.module.ts",
              "line": 30,
              "character": 25
            }
          ]
        },
        {
          "id": 1398,
          "name": "NB_USER_COMPONENTS",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "theme/components/user/user.module.ts",
              "line": 15,
              "character": 24
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "Object"
          },
          "defaultValue": " [\r\n  NbUserComponent,\r\n]"
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            1397
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            1398
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/components/user/user.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1576,
      "name": "\"theme/index\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/index.ts",
      "sources": [
        {
          "fileName": "theme/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 623,
      "name": "\"theme/services/breakpoints.service\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/services/breakpoints.service.ts",
      "children": [
        {
          "id": 627,
          "name": "NbMediaBreakpointsService",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Manages media breakpoints",
            "text": "Provides access to available media breakpoints to convert window width to a configured breakpoint,\ne.g. 200px - *xs* breakpoint\n"
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 632,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 634,
                  "name": "new NbMediaBreakpointsService",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 635,
                      "name": "breakpoints",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "decorators": [
                        {
                          "name": "Inject",
                          "type": {
                            "type": "reference",
                            "name": "Inject"
                          },
                          "arguments": {
                            "token": "nbMediaBreakpointsToken"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbMediaBreakpointsService",
                    "id": 627
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/breakpoints.service.ts",
                  "line": 64,
                  "character": 59
                }
              ]
            },
            {
              "id": 633,
              "name": "breakpoints",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Inject",
                  "type": {
                    "type": "reference",
                    "name": "Inject"
                  },
                  "arguments": {
                    "token": "nbMediaBreakpointsToken"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/breakpoints.service.ts",
                  "line": 66,
                  "character": 66
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 628,
              "name": "breakpointsMap",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/breakpoints.service.ts",
                  "line": 64,
                  "character": 24
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 629,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "indexSignature": [
                    {
                      "id": 630,
                      "name": "__index",
                      "kind": 8192,
                      "kindString": "Index signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 631,
                          "name": "breakpoint",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "theme/services/breakpoints.service.ts",
                      "line": 64,
                      "character": 25
                    }
                  ]
                }
              }
            },
            {
              "id": 642,
              "name": "getBreakpoints",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 643,
                  "name": "getBreakpoints",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns a list of configured breakpoints for the theme",
                    "returns": "NbMediaBreakpoint[]\n"
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "name": "NbMediaBreakpoint",
                      "id": 624
                    }
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/breakpoints.service.ts",
                  "line": 105,
                  "character": 16
                }
              ]
            },
            {
              "id": 644,
              "name": "getBreakpointsMap",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 645,
                  "name": "getBreakpointsMap",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns a map of configured breakpoints for the theme",
                    "returns": "\n"
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 646,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "indexSignature": [
                        {
                          "id": 647,
                          "name": "__index",
                          "kind": 8192,
                          "kindString": "Index signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 648,
                              "name": "breakpoint",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "theme/services/breakpoints.service.ts",
                          "line": 113,
                          "character": 22
                        }
                      ]
                    }
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/breakpoints.service.ts",
                  "line": 113,
                  "character": 19
                }
              ]
            },
            {
              "id": 639,
              "name": "getByName",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 640,
                  "name": "getByName",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns a configured breakpoint by name",
                    "returns": "NbMediaBreakpoint\n"
                  },
                  "parameters": [
                    {
                      "id": 641,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "string"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbMediaBreakpoint",
                    "id": 624
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/breakpoints.service.ts",
                  "line": 94,
                  "character": 11
                }
              ]
            },
            {
              "id": 636,
              "name": "getByWidth",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 637,
                  "name": "getByWidth",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns a configured breakpoint by width",
                    "returns": "\n"
                  },
                  "parameters": [
                    {
                      "id": 638,
                      "name": "width",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "number"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbMediaBreakpoint",
                    "id": 624
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/breakpoints.service.ts",
                  "line": 78,
                  "character": 12
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                632
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                633,
                628
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                642,
                644,
                639,
                636
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/services/breakpoints.service.ts",
              "line": 62,
              "character": 38
            }
          ]
        },
        {
          "id": 624,
          "name": "NbMediaBreakpoint",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Media breakpoint type",
            "text": "Where `name` - breakpoint name alias (e.g. xs, sm, md, etc), and width - min breakpoint width\n"
          },
          "children": [
            {
              "id": 625,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/breakpoints.service.ts",
                  "line": 16,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 626,
              "name": "width",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/breakpoints.service.ts",
                  "line": 17,
                  "character": 7
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                625,
                626
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/services/breakpoints.service.ts",
              "line": 15,
              "character": 34
            }
          ]
        },
        {
          "id": 649,
          "name": "DEFAULT_MEDIA_BREAKPOINTS",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "theme/services/breakpoints.service.ts",
              "line": 20,
              "character": 38
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "Object"
          },
          "defaultValue": " [\r\n  {\r\n    name: 'xs',\r\n    width: 0,\r\n  },\r\n  {\r\n    name: 'is',\r\n    width: 400,\r\n  },\r\n  {\r\n    name: 'sm',\r\n    width: 576,\r\n  },\r\n  {\r\n    name: 'md',\r\n    width: 768,\r\n  },\r\n  {\r\n    name: 'lg',\r\n    width: 992,\r\n  },\r\n  {\r\n    name: 'xl',\r\n    width: 1200,\r\n  },\r\n  {\r\n    name: 'xxl',\r\n    width: 1400,\r\n  },\r\n  {\r\n    name: 'xxxl',\r\n    width: 1600,\r\n  },\r\n]"
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            627
          ]
        },
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            624
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            649
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/services/breakpoints.service.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1595,
      "name": "\"theme/services/breakpoints.spec\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/services/breakpoints.spec.ts",
      "sources": [
        {
          "fileName": "theme/services/breakpoints.spec.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 665,
      "name": "\"theme/services/color.helper\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/services/color.helper.ts",
      "children": [
        {
          "id": 666,
          "name": "NbColorHelper",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 680,
              "name": "hexToRgbA",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 681,
                  "name": "hexToRgbA",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 682,
                      "name": "hex",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 683,
                      "name": "alpha",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/color.helper.ts",
                  "line": 24,
                  "character": 18
                }
              ]
            },
            {
              "id": 675,
              "name": "mix",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 676,
                  "name": "mix",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 677,
                      "name": "color1",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 678,
                      "name": "color2",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 679,
                      "name": "weight",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/color.helper.ts",
                  "line": 10,
                  "character": 12
                }
              ]
            },
            {
              "id": 667,
              "name": "shade",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 668,
                  "name": "shade",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 669,
                      "name": "color",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 670,
                      "name": "weight",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/color.helper.ts",
                  "line": 2,
                  "character": 14
                }
              ]
            },
            {
              "id": 671,
              "name": "tint",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 672,
                  "name": "tint",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 673,
                      "name": "color",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 674,
                      "name": "weight",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/color.helper.ts",
                  "line": 6,
                  "character": 13
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                680,
                675,
                667,
                671
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/services/color.helper.ts",
              "line": 1,
              "character": 26
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            666
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/services/color.helper.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 741,
      "name": "\"theme/services/js-themes-registry.service\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/services/js-themes-registry.service.ts",
      "children": [
        {
          "id": 742,
          "name": "NbJSThemesRegistry",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Js Themes registry - provides access to the JS themes' variables.\nUsually shouldn't be used directly, but through the NbThemeService class methods (getJsTheme)."
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 744,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 747,
                  "name": "new NbJSThemesRegistry",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 748,
                      "name": "builtInThemes",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "decorators": [
                        {
                          "name": "Inject",
                          "type": {
                            "type": "reference",
                            "name": "Inject"
                          },
                          "arguments": {
                            "token": "nbBuiltInJSThemesToken"
                          }
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbJSThemeOptions",
                          "id": 651
                        }
                      }
                    },
                    {
                      "id": 749,
                      "name": "newThemes",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "decorators": [
                        {
                          "name": "Inject",
                          "type": {
                            "type": "reference",
                            "name": "Inject"
                          },
                          "arguments": {
                            "token": "nbJSThemesToken"
                          }
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbJSThemeOptions",
                          "id": 651
                        }
                      },
                      "defaultValue": " []"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbJSThemesRegistry",
                    "id": 742
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/js-themes-registry.service.ts",
                  "line": 28,
                  "character": 27
                }
              ]
            },
            {
              "id": 745,
              "name": "builtInThemes",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Inject",
                  "type": {
                    "type": "reference",
                    "name": "Inject"
                  },
                  "arguments": {
                    "token": "nbBuiltInJSThemesToken"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/js-themes-registry.service.ts",
                  "line": 30,
                  "character": 67
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "NbJSThemeOptions",
                  "id": 651
                }
              }
            },
            {
              "id": 746,
              "name": "newThemes",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "decorators": [
                {
                  "name": "Inject",
                  "type": {
                    "type": "reference",
                    "name": "Inject"
                  },
                  "arguments": {
                    "token": "nbJSThemesToken"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/js-themes-registry.service.ts",
                  "line": 31,
                  "character": 56
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "NbJSThemeOptions",
                  "id": 651
                }
              }
            },
            {
              "id": 743,
              "name": "themes",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/js-themes-registry.service.ts",
                  "line": 28,
                  "character": 16
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 761,
              "name": "combineByNames",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 762,
                  "name": "combineByNames",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 763,
                      "name": "newThemes",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbJSThemeOptions",
                          "id": 651
                        }
                      }
                    },
                    {
                      "id": 764,
                      "name": "oldThemes",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbJSThemeOptions",
                          "id": 651
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "name": "NbJSThemeOptions",
                      "id": 651
                    }
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/js-themes-registry.service.ts",
                  "line": 72,
                  "character": 24
                }
              ]
            },
            {
              "id": 758,
              "name": "get",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 759,
                  "name": "get",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Return a theme",
                    "returns": "NbJSThemeOptions\n"
                  },
                  "parameters": [
                    {
                      "id": 760,
                      "name": "themeName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbJSThemeOptions",
                    "id": 651
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/js-themes-registry.service.ts",
                  "line": 65,
                  "character": 5
                }
              ]
            },
            {
              "id": 755,
              "name": "has",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 756,
                  "name": "has",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Checks whether the theme is registered",
                    "returns": "boolean\n"
                  },
                  "parameters": [
                    {
                      "id": 757,
                      "name": "themeName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/js-themes-registry.service.ts",
                  "line": 56,
                  "character": 5
                }
              ]
            },
            {
              "id": 765,
              "name": "isObject",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 766,
                  "name": "isObject",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 767,
                      "name": "item",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/js-themes-registry.service.ts",
                  "line": 94,
                  "character": 18
                }
              ]
            },
            {
              "id": 768,
              "name": "mergeDeep",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 769,
                  "name": "mergeDeep",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 770,
                      "name": "target",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 771,
                      "name": "sources",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isRest": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "Object"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/js-themes-registry.service.ts",
                  "line": 99,
                  "character": 19
                }
              ]
            },
            {
              "id": 750,
              "name": "register",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 751,
                  "name": "register",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Registers a new JS theme"
                  },
                  "parameters": [
                    {
                      "id": 752,
                      "name": "config",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "any"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 753,
                      "name": "themeName",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "string"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 754,
                      "name": "baseTheme",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "string\n"
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/js-themes-registry.service.ts",
                  "line": 46,
                  "character": 10
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                744
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                745,
                746,
                743
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                761,
                758,
                755,
                765,
                768,
                750
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/services/js-themes-registry.service.ts",
              "line": 26,
              "character": 31
            }
          ]
        },
        {
          "id": 772,
          "name": "BUILT_IN_THEMES",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "theme/services/js-themes-registry.service.ts",
              "line": 16,
              "character": 28
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "name": "NbJSThemeOptions",
              "id": 651
            }
          },
          "defaultValue": " [\r\n  DEFAULT_THEME,\r\n  COSMIC_THEME,\r\n]"
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            742
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            772
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/services/js-themes-registry.service.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1596,
      "name": "\"theme/services/js-themes-registry.spec\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/services/js-themes-registry.spec.ts",
      "sources": [
        {
          "fileName": "theme/services/js-themes-registry.spec.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 713,
      "name": "\"theme/services/js-themes/cosmic.theme\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/services/js-themes/cosmic.theme.ts",
      "children": [
        {
          "id": 720,
          "name": "COSMIC_THEME",
          "kind": 2097152,
          "kindString": "Object literal",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 722,
              "name": "base",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/js-themes/cosmic.theme.ts",
                  "line": 14,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"default\""
            },
            {
              "id": 721,
              "name": "name",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/js-themes/cosmic.theme.ts",
                  "line": 13,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"cosmic\""
            },
            {
              "id": 723,
              "name": "variables",
              "kind": 2097152,
              "kindString": "Object literal",
              "flags": {
                "isExported": true
              },
              "children": [
                {
                  "id": 724,
                  "name": "bg",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 16,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#3d3780\""
                },
                {
                  "id": 735,
                  "name": "danger",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 28,
                      "character": 10
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " palette.danger"
                },
                {
                  "id": 740,
                  "name": "dangerLight",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 34,
                      "character": 15
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " NbColorHelper.tint(palette.danger, 20)"
                },
                {
                  "id": 725,
                  "name": "fg",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 17,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#a1a1e5\""
                },
                {
                  "id": 726,
                  "name": "fgHeading",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 18,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#ffffff\""
                },
                {
                  "id": 728,
                  "name": "fgHighlight",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 20,
                      "character": 15
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#00f9a6\""
                },
                {
                  "id": 727,
                  "name": "fgText",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 19,
                      "character": 10
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#d1d1ff\""
                },
                {
                  "id": 733,
                  "name": "info",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 26,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " palette.info"
                },
                {
                  "id": 738,
                  "name": "infoLight",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 32,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " NbColorHelper.tint(palette.info, 20)"
                },
                {
                  "id": 729,
                  "name": "layoutBg",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 21,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#2f296b\""
                },
                {
                  "id": 731,
                  "name": "primary",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 24,
                      "character": 11
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " palette.primary"
                },
                {
                  "id": 736,
                  "name": "primaryLight",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 30,
                      "character": 16
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " NbColorHelper.tint(palette.primary, 20)"
                },
                {
                  "id": 730,
                  "name": "separator",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 22,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#342e73\""
                },
                {
                  "id": 732,
                  "name": "success",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 25,
                      "character": 11
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " palette.success"
                },
                {
                  "id": 737,
                  "name": "successLight",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 31,
                      "character": 16
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " NbColorHelper.tint(palette.success, 20)"
                },
                {
                  "id": 734,
                  "name": "warning",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 27,
                      "character": 11
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " palette.warning"
                },
                {
                  "id": 739,
                  "name": "warningLight",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/cosmic.theme.ts",
                      "line": 33,
                      "character": 16
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " NbColorHelper.tint(palette.warning, 20)"
                }
              ],
              "groups": [
                {
                  "title": "Variables",
                  "kind": 32,
                  "children": [
                    724,
                    735,
                    740,
                    725,
                    726,
                    728,
                    727,
                    733,
                    738,
                    729,
                    731,
                    736,
                    730,
                    732,
                    737,
                    734,
                    739
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/js-themes/cosmic.theme.ts",
                  "line": 15,
                  "character": 11
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "object"
              }
            }
          ],
          "groups": [
            {
              "title": "Variables",
              "kind": 32,
              "children": [
                722,
                721
              ]
            },
            {
              "title": "Object literals",
              "kind": 2097152,
              "children": [
                723
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/services/js-themes/cosmic.theme.ts",
              "line": 12,
              "character": 25
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 714,
          "name": "palette",
          "kind": 2097152,
          "kindString": "Object literal",
          "flags": {},
          "children": [
            {
              "id": 719,
              "name": "danger",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "theme/services/js-themes/cosmic.theme.ts",
                  "line": 9,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"#ff386a\""
            },
            {
              "id": 717,
              "name": "info",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "theme/services/js-themes/cosmic.theme.ts",
                  "line": 7,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"#0088ff\""
            },
            {
              "id": 715,
              "name": "primary",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "theme/services/js-themes/cosmic.theme.ts",
                  "line": 5,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"#7659ff\""
            },
            {
              "id": 716,
              "name": "success",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "theme/services/js-themes/cosmic.theme.ts",
                  "line": 6,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"#00d977\""
            },
            {
              "id": 718,
              "name": "warning",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "theme/services/js-themes/cosmic.theme.ts",
                  "line": 8,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"#ffa100\""
            }
          ],
          "groups": [
            {
              "title": "Variables",
              "kind": 32,
              "children": [
                719,
                717,
                715,
                716,
                718
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/services/js-themes/cosmic.theme.ts",
              "line": 4,
              "character": 13
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        }
      ],
      "groups": [
        {
          "title": "Object literals",
          "kind": 2097152,
          "children": [
            720,
            714
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/services/js-themes/cosmic.theme.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 684,
      "name": "\"theme/services/js-themes/default.theme\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/services/js-themes/default.theme.ts",
      "children": [
        {
          "id": 691,
          "name": "DEFAULT_THEME",
          "kind": 2097152,
          "kindString": "Object literal",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 692,
              "name": "name",
              "kind": 32,
              "kindString": "Variable",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/js-themes/default.theme.ts",
                  "line": 13,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"default\""
            },
            {
              "id": 693,
              "name": "variables",
              "kind": 2097152,
              "kindString": "Object literal",
              "flags": {
                "isExported": true
              },
              "children": [
                {
                  "id": 696,
                  "name": "bg",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 18,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#ffffff\""
                },
                {
                  "id": 707,
                  "name": "danger",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 30,
                      "character": 10
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " palette.danger"
                },
                {
                  "id": 712,
                  "name": "dangerLight",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 36,
                      "character": 15
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " NbColorHelper.tint(palette.danger, 15)"
                },
                {
                  "id": 697,
                  "name": "fg",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 19,
                      "character": 6
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#a4abb3\""
                },
                {
                  "id": 698,
                  "name": "fgHeading",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 20,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#2a2a2a\""
                },
                {
                  "id": 700,
                  "name": "fgHighlight",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 22,
                      "character": 15
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#41d974\""
                },
                {
                  "id": 699,
                  "name": "fgText",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 21,
                      "character": 10
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#3b3b3b\""
                },
                {
                  "id": 694,
                  "name": "fontMain",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 15,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"\"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif\""
                },
                {
                  "id": 695,
                  "name": "fontSecondary",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 16,
                      "character": 17
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"\"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif\""
                },
                {
                  "id": 705,
                  "name": "info",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 28,
                      "character": 8
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " palette.info"
                },
                {
                  "id": 710,
                  "name": "infoLight",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 34,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " NbColorHelper.tint(palette.info, 15)"
                },
                {
                  "id": 701,
                  "name": "layoutBg",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 23,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#ebeff5\""
                },
                {
                  "id": 703,
                  "name": "primary",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 26,
                      "character": 11
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " palette.primary"
                },
                {
                  "id": 708,
                  "name": "primaryLight",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 32,
                      "character": 16
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " NbColorHelper.tint(palette.primary, 15)"
                },
                {
                  "id": 702,
                  "name": "separator",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 24,
                      "character": 13
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"#ebeef2\""
                },
                {
                  "id": 704,
                  "name": "success",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 27,
                      "character": 11
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " palette.success"
                },
                {
                  "id": 709,
                  "name": "successLight",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 33,
                      "character": 16
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " NbColorHelper.tint(palette.success, 15)"
                },
                {
                  "id": 706,
                  "name": "warning",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 29,
                      "character": 11
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " palette.warning"
                },
                {
                  "id": 711,
                  "name": "warningLight",
                  "kind": 32,
                  "kindString": "Variable",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "theme/services/js-themes/default.theme.ts",
                      "line": 35,
                      "character": 16
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": " NbColorHelper.tint(palette.warning, 15)"
                }
              ],
              "groups": [
                {
                  "title": "Variables",
                  "kind": 32,
                  "children": [
                    696,
                    707,
                    712,
                    697,
                    698,
                    700,
                    699,
                    694,
                    695,
                    705,
                    710,
                    701,
                    703,
                    708,
                    702,
                    704,
                    709,
                    706,
                    711
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/js-themes/default.theme.ts",
                  "line": 14,
                  "character": 11
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "object"
              }
            }
          ],
          "groups": [
            {
              "title": "Variables",
              "kind": 32,
              "children": [
                692
              ]
            },
            {
              "title": "Object literals",
              "kind": 2097152,
              "children": [
                693
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/services/js-themes/default.theme.ts",
              "line": 12,
              "character": 26
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        },
        {
          "id": 685,
          "name": "palette",
          "kind": 2097152,
          "kindString": "Object literal",
          "flags": {},
          "children": [
            {
              "id": 690,
              "name": "danger",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "theme/services/js-themes/default.theme.ts",
                  "line": 9,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"#ff4c6a\""
            },
            {
              "id": 688,
              "name": "info",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "theme/services/js-themes/default.theme.ts",
                  "line": 7,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"#4ca6ff\""
            },
            {
              "id": 686,
              "name": "primary",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "theme/services/js-themes/default.theme.ts",
                  "line": 5,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"#8a7fff\""
            },
            {
              "id": 687,
              "name": "success",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "theme/services/js-themes/default.theme.ts",
                  "line": 6,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"#40dc7e\""
            },
            {
              "id": 689,
              "name": "warning",
              "kind": 32,
              "kindString": "Variable",
              "flags": {},
              "sources": [
                {
                  "fileName": "theme/services/js-themes/default.theme.ts",
                  "line": 8,
                  "character": 9
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"#ffa100\""
            }
          ],
          "groups": [
            {
              "title": "Variables",
              "kind": 32,
              "children": [
                690,
                688,
                686,
                687,
                689
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/services/js-themes/default.theme.ts",
              "line": 4,
              "character": 13
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "object"
          }
        }
      ],
      "groups": [
        {
          "title": "Object literals",
          "kind": 2097152,
          "children": [
            691,
            685
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/services/js-themes/default.theme.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 650,
      "name": "\"theme/services/js-themes/theme.options\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/services/js-themes/theme.options.ts",
      "children": [
        {
          "id": 651,
          "name": "NbJSThemeOptions",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 653,
              "name": "base",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "theme/services/js-themes/theme.options.ts",
                  "line": 3,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 652,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/js-themes/theme.options.ts",
                  "line": 2,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 654,
              "name": "variables",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "theme/services/js-themes/theme.options.ts",
                  "line": 4,
                  "character": 11
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbJSThemeVariable",
                "id": 655
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                653,
                652,
                654
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/services/js-themes/theme.options.ts",
              "line": 1,
              "character": 33
            }
          ]
        },
        {
          "id": 655,
          "name": "NbJSThemeVariable",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "indexSignature": [
            {
              "id": 656,
              "name": "__index",
              "kind": 8192,
              "kindString": "Index signature",
              "flags": {},
              "parameters": [
                {
                  "id": 657,
                  "name": "key",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  {
                    "type": "reference",
                    "name": "NbJSThemeVariable",
                    "id": 655
                  }
                ]
              }
            }
          ],
          "sources": [
            {
              "fileName": "theme/services/js-themes/theme.options.ts",
              "line": 7,
              "character": 34
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            651,
            655
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/services/js-themes/theme.options.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 822,
      "name": "\"theme/services/spinner.service\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/services/spinner.service.ts",
      "children": [
        {
          "id": 823,
          "name": "NbSpinnerService",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Service to control the global page spinner."
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 824,
              "name": "loaders",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/spinner.service.ts",
                  "line": 15,
                  "character": 17
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "Promise",
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ]
                }
              },
              "defaultValue": " []"
            },
            {
              "id": 825,
              "name": "selector",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/spinner.service.ts",
                  "line": 16,
                  "character": 18
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"nb-global-spinner\""
            },
            {
              "id": 829,
              "name": "clear",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 830,
                  "name": "clear",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Clears the list of loader"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/spinner.service.ts",
                  "line": 30,
                  "character": 7
                }
              ]
            },
            {
              "id": 833,
              "name": "executeAll",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 834,
                  "name": "executeAll",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 835,
                      "name": "done",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "(Anonymous function)"
                      },
                      "defaultValue": " () => {}"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/spinner.service.ts",
                  "line": 42,
                  "character": 20
                }
              ]
            },
            {
              "id": 840,
              "name": "getSpinnerElement",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 841,
                  "name": "getSpinnerElement",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/spinner.service.ts",
                  "line": 68,
                  "character": 27
                }
              ]
            },
            {
              "id": 838,
              "name": "hideSpinner",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 839,
                  "name": "hideSpinner",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/spinner.service.ts",
                  "line": 61,
                  "character": 21
                }
              ]
            },
            {
              "id": 831,
              "name": "load",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 832,
                  "name": "load",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Start the loader process, show spinnder and execute loaders"
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/spinner.service.ts",
                  "line": 37,
                  "character": 6
                }
              ]
            },
            {
              "id": 826,
              "name": "registerLoader",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 827,
                  "name": "registerLoader",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Appends new loader to the list of loader to be completed before\nspinner will be hidden"
                  },
                  "parameters": [
                    {
                      "id": 828,
                      "name": "method",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "Promise<any>\n"
                      },
                      "type": {
                        "type": "reference",
                        "name": "Promise",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/spinner.service.ts",
                  "line": 23,
                  "character": 16
                }
              ]
            },
            {
              "id": 836,
              "name": "showSpinner",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 837,
                  "name": "showSpinner",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/spinner.service.ts",
                  "line": 54,
                  "character": 21
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                824,
                825
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                829,
                833,
                840,
                838,
                831,
                826,
                836
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/services/spinner.service.ts",
              "line": 13,
              "character": 29
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            823
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/services/spinner.service.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 773,
      "name": "\"theme/services/theme.service\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/services/theme.service.ts",
      "children": [
        {
          "id": 774,
          "name": "NbThemeService",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Main Nebular service. Includes various helper methods."
          },
          "decorators": [
            {
              "name": "Injectable",
              "type": {
                "type": "reference",
                "name": "Injectable"
              },
              "arguments": {}
            }
          ],
          "children": [
            {
              "id": 782,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 786,
                  "name": "new NbThemeService",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 787,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "decorators": [
                        {
                          "name": "Inject",
                          "type": {
                            "type": "reference",
                            "name": "Inject"
                          },
                          "arguments": {
                            "token": "nbThemeOptionsToken"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 788,
                      "name": "breakpointService",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbMediaBreakpointsService",
                        "id": 627
                      }
                    },
                    {
                      "id": 789,
                      "name": "jsThemesRegistry",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "NbJSThemesRegistry",
                        "id": 742
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "NbThemeService",
                    "id": 774
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 39,
                  "character": 60
                }
              ]
            },
            {
              "id": 779,
              "name": "appendLayoutClass$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 37,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new Subject()"
            },
            {
              "id": 777,
              "name": "appendToLayoutTop$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 35,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "ReplaySubject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new ReplaySubject()"
            },
            {
              "id": 784,
              "name": "breakpointService",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 43,
                  "character": 29
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbMediaBreakpointsService",
                "id": 627
              }
            },
            {
              "id": 781,
              "name": "changeWindowWidth$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 39,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "ReplaySubject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              },
              "defaultValue": " new ReplaySubject<number>(2)"
            },
            {
              "id": 778,
              "name": "createLayoutTop$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 36,
                  "character": 26
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new Subject()"
            },
            {
              "id": 775,
              "name": "currentTheme",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 33,
                  "character": 14
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 785,
              "name": "jsThemesRegistry",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isConstructorProperty": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 44,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "NbJSThemesRegistry",
                "id": 742
              }
            },
            {
              "id": 783,
              "name": "options",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isConstructorProperty": true,
                "isExported": true,
                "isProtected": true
              },
              "decorators": [
                {
                  "name": "Inject",
                  "type": {
                    "type": "reference",
                    "name": "Inject"
                  },
                  "arguments": {
                    "token": "nbThemeOptionsToken"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 42,
                  "character": 50
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 780,
              "name": "removeLayoutClass$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 38,
                  "character": 28
                }
              ],
              "type": {
                "type": "reference",
                "name": "Subject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new Subject()"
            },
            {
              "id": 776,
              "name": "themeChanges$",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPrivate": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 34,
                  "character": 23
                }
              ],
              "type": {
                "type": "reference",
                "name": "ReplaySubject",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "Object"
                  }
                ]
              },
              "defaultValue": " new ReplaySubject(1)"
            },
            {
              "id": 812,
              "name": "appendLayoutClass",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 813,
                  "name": "appendLayoutClass",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 814,
                      "name": "className",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 122,
                  "character": 19
                }
              ]
            },
            {
              "id": 796,
              "name": "appendToLayoutTop",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 797,
                  "name": "appendToLayoutTop",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 798,
                      "name": "T",
                      "kind": 131072,
                      "kindString": "Type parameter",
                      "flags": {}
                    }
                  ],
                  "parameters": [
                    {
                      "id": 799,
                      "name": "component",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Type",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "T"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 60,
                  "character": 19
                }
              ]
            },
            {
              "id": 790,
              "name": "changeTheme",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 791,
                  "name": "changeTheme",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 792,
                      "name": "name",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 51,
                  "character": 13
                }
              ]
            },
            {
              "id": 793,
              "name": "changeWindowWidth",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 794,
                  "name": "changeWindowWidth",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 795,
                      "name": "width",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 56,
                  "character": 19
                }
              ]
            },
            {
              "id": 802,
              "name": "clearLayoutTop",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 803,
                  "name": "clearLayoutTop",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 78,
                  "character": 16
                }
              ]
            },
            {
              "id": 800,
              "name": "getJsTheme",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 801,
                  "name": "getJsTheme",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Returns a theme object with variables (color/paddings/etc) on a theme change.\nOnce subscribed - returns current theme.",
                    "returns": "\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "NbJSThemeOptions",
                        "id": 651
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 72,
                  "character": 12
                }
              ]
            },
            {
              "id": 815,
              "name": "onAppendLayoutClass",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 816,
                  "name": "onAppendLayoutClass",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 126,
                  "character": 21
                }
              ]
            },
            {
              "id": 808,
              "name": "onAppendToTop",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 809,
                  "name": "onAppendToTop",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 114,
                  "character": 15
                }
              ]
            },
            {
              "id": 810,
              "name": "onClearLayoutTop",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 811,
                  "name": "onClearLayoutTop",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 118,
                  "character": 18
                }
              ]
            },
            {
              "id": 804,
              "name": "onMediaQueryChange",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 805,
                  "name": "onMediaQueryChange",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Triggers media query breakpoint change\nReturns a pair where the first item is previous media breakpoint and the second item is current breakpoit.\n```\n [{ name: 'xs', width: 0 }, { name: 'md', width: 768 }] // change from `xs` to `md`\n```",
                    "returns": "\n"
                  },
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbMediaBreakpoint",
                          "id": 624
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 93,
                  "character": 20
                }
              ]
            },
            {
              "id": 820,
              "name": "onRemoveLayoutClass",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 821,
                  "name": "onRemoveLayoutClass",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 134,
                  "character": 21
                }
              ]
            },
            {
              "id": 806,
              "name": "onThemeChange",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 807,
                  "name": "onThemeChange",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Observable",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 110,
                  "character": 15
                }
              ]
            },
            {
              "id": 817,
              "name": "removeLayoutClass",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 818,
                  "name": "removeLayoutClass",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 819,
                      "name": "className",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/services/theme.service.ts",
                  "line": 130,
                  "character": 19
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [
                782
              ]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                779,
                777,
                784,
                781,
                778,
                775,
                785,
                783,
                780,
                776
              ]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                812,
                796,
                790,
                793,
                802,
                800,
                815,
                808,
                810,
                804,
                820,
                806,
                817
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/services/theme.service.ts",
              "line": 30,
              "character": 27
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            774
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/services/theme.service.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1597,
      "name": "\"theme/services/theme.spec\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/services/theme.spec.ts",
      "sources": [
        {
          "fileName": "theme/services/theme.spec.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 842,
      "name": "\"theme/theme.module\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/theme.module.ts",
      "children": [
        {
          "id": 843,
          "name": "NbThemeModule",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "decorators": [
            {
              "name": "NgModule",
              "type": {
                "type": "reference",
                "name": "NgModule"
              },
              "arguments": {
                "obj": "{\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n  ],\r\n}"
              }
            }
          ],
          "children": [
            {
              "id": 844,
              "name": "forRoot",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 845,
                  "name": "forRoot",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "shortText": "Main Theme Module",
                    "returns": "\n"
                  },
                  "parameters": [
                    {
                      "id": 846,
                      "name": "nbThemeOptions",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "comment": {
                        "text": "Main theme options"
                      },
                      "type": {
                        "type": "reference",
                        "name": "NbThemeOptions",
                        "id": 659
                      }
                    },
                    {
                      "id": 847,
                      "name": "nbJSThemes",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "text": "List of JS Themes, will be merged with default themes"
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbJSThemeOptions",
                          "id": 651
                        }
                      }
                    },
                    {
                      "id": 848,
                      "name": "nbMediaBreakpoints",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "text": "Available media breakpoints\n"
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "name": "NbMediaBreakpoint",
                          "id": 624
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ModuleWithProviders"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "theme/theme.module.ts",
                  "line": 47,
                  "character": 16
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [
                844
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/theme.module.ts",
              "line": 35,
              "character": 26
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [
            843
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/theme.module.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 658,
      "name": "\"theme/theme.options\"",
      "kind": 1,
      "kindString": "External module",
      "flags": {
        "isExported": true
      },
      "originalName": "D:/NWork/GitHub/nebular/src/framework/theme/theme.options.ts",
      "children": [
        {
          "id": 659,
          "name": "NbThemeOptions",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 660,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "theme/theme.options.ts",
                  "line": 12,
                  "character": 6
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [
                660
              ]
            }
          ],
          "sources": [
            {
              "fileName": "theme/theme.options.ts",
              "line": 11,
              "character": 31
            }
          ]
        },
        {
          "id": 663,
          "name": "nbBuiltInJSThemesToken",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "theme/theme.options.ts",
              "line": 17,
              "character": 35
            }
          ],
          "type": {
            "type": "reference",
            "name": "InjectionToken",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "Object"
              }
            ]
          },
          "defaultValue": " new InjectionToken<NbJSThemeOptions[]>('NB_BUILT_IN_THEMES')"
        },
        {
          "id": 664,
          "name": "nbJSThemesToken",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "theme/theme.options.ts",
              "line": 18,
              "character": 28
            }
          ],
          "type": {
            "type": "reference",
            "name": "InjectionToken",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "Object"
              }
            ]
          },
          "defaultValue": " new InjectionToken<NbJSThemeOptions[]>('NB_THEMES')"
        },
        {
          "id": 662,
          "name": "nbMediaBreakpointsToken",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "theme/theme.options.ts",
              "line": 16,
              "character": 36
            }
          ],
          "type": {
            "type": "reference",
            "name": "InjectionToken",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "Object"
              }
            ]
          },
          "defaultValue": " new InjectionToken<NbMediaBreakpoint[]>('NB_MEDIA_BREAKPOINTS')"
        },
        {
          "id": 661,
          "name": "nbThemeOptionsToken",
          "kind": 32,
          "kindString": "Variable",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "theme/theme.options.ts",
              "line": 15,
              "character": 32
            }
          ],
          "type": {
            "type": "reference",
            "name": "InjectionToken",
            "typeArguments": [
              {
                "type": "reference",
                "name": "NbThemeOptions",
                "id": 659
              }
            ]
          },
          "defaultValue": " new InjectionToken<NbThemeOptions>('NB_THEME_OPTIONS')"
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [
            659
          ]
        },
        {
          "title": "Variables",
          "kind": 32,
          "children": [
            663,
            664,
            662,
            661
          ]
        }
      ],
      "sources": [
        {
          "fileName": "theme/theme.options.ts",
          "line": 1,
          "character": 0
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "External modules",
      "kind": 1,
      "children": [
        580,
        62,
        578,
        466,
        455,
        593,
        468,
        516,
        492,
        530,
        554,
        1,
        622,
        1577,
        29,
        246,
        287,
        348,
        621,
        172,
        620,
        594,
        606,
        116,
        1399,
        1428,
        851,
        906,
        1540,
        1574,
        909,
        913,
        971,
        1101,
        1169,
        974,
        1175,
        1190,
        1463,
        1538,
        1431,
        849,
        1220,
        1293,
        1192,
        1299,
        1326,
        1329,
        1396,
        1576,
        623,
        1595,
        665,
        741,
        1596,
        713,
        684,
        650,
        822,
        773,
        1597,
        842,
        658
      ]
    }
  ]
};

const result = typeDocParser.parse(example, new Metadata('typescript', 'typedoc', 'angular'));
const outputObj: string = JSON.stringify(result, null, 2);
fs.writeFileSync ('output.json', outputObj);
